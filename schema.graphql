"""Marker directive to avoid duplication calls"""
directive @unique on FIELD

input AcceptClassContributor {
  """The UUID of the asset to update"""
  assetId: String!

  """The UUID of class to accept"""
  classId: String!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
}

type AcceptColumnMutation {
  """The asset for which class was accepted"""
  asset: Asset
  clientMutationId: String
}

type Activity {
  """the cause of the activity"""
  activityType: ActivityType

  """user who performed the activity"""
  author: NamedResourceReference

  """the count of the changes that were made in one call/transaction"""
  callCount: Int

  """the unique id of the call/transaction"""
  callId: String

  """the cause of the activity"""
  cause: ActivityCause

  """the json describing the change made by activity"""
  description: String

  """The unique identifier"""
  id: ID

  """users mentioned in this activity"""
  mentionedUsers: [User]

  """when the activity was performed"""
  timestamp: Long
}

"""
The enumeration for a ActivityCause. Possible values are: MANUAL IMPORT BULK_DELETE BULK_MOVE BULK_EDIT BULK_INSERT WORKFLOW
"""
enum ActivityCause {
  BULK_DELETE
  BULK_EDIT
  BULK_INSERT
  BULK_MOVE
  IMPORT
  MANUAL
  WORKFLOW
}

type ActivityConnection {
  edges: [ActivityEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type ActivityEdge {
  cursor: String!
  node: Activity
}

"""
The enumeration for a ActivityFilterCategory. Possible values are: ATTRIBUTE
ATTACHMENT RELATION COMMENT STATUS WORKFLOW RESPONSIBILITY USER USER_GROUP ROLE
TAGS OTHERS USER_PASSWORD
"""
enum ActivityFilterCategory {
  ATTACHMENT
  ATTRIBUTE
  COMMENT
  OTHERS
  RELATION
  RESPONSIBILITY
  ROLE
  STATUS
  TAGS
  USER
  USER_GROUP
  USER_PASSWORD
  WORKFLOW
}

"""
The enumeration for a ActivityType. Possible values are: ADD UPDATE DELETE
"""
enum ActivityType {
  ADD
  DELETE
  UPDATE
}

type AddAdvancedDataTypeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The advanced data type that has been added."""
  dataType: AdvancedDataType
}

input AddAdvancedDataTypeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  description: String
  logicalDataType: LogicalDataType!
  name: String!
  patterns: [String] = []
}

type AddAssetMutation {
  """The asset that has been added."""
  asset: Asset
  clientMutationId: String

  """The domain of the new asset."""
  domain: Domain
}

input AddAssetRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  displayName: String
  domainId: ID!

  """The full name of the new asset. Should be unique within the domain."""
  name: String!
  statusId: ID
  typeId: ID!
}

type AddAssetsMutation {
  """The api"""
  api: ApiType

  """The assets that have been added."""
  assets: [Asset]
  clientMutationId: String
}

input AddAssetsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  domainId: ID!

  """
  The list of full names for the new assets. Should be unique within the domain.
  """
  names: [String]!
  typeId: ID!
}

type AddAssetTypeAssignmentRuleMutation {
  clientMutationId: String

  """Workflow definition with added assignment rule."""
  workflowDefinition: WorkflowDefinition
}

input AddAssetTypeAssignmentRuleRequest {
  """The ID of the asset type the added rule should refer to."""
  assetTypeId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The ID of the community the assignment rule should apply for."""
  communityId: ID

  """The ID of the domain the assignment rule should apply for."""
  domainId: ID

  """The ID of the status the assignment rule should apply for."""
  statusId: ID

  """
  The ID of the workflow definition containing the assignment rule to be added.
  """
  workflowDefinitionId: ID!
}

type AddAssetTypeMutation {
  """The api"""
  api: ApiType

  """The asset type that has been created."""
  assetType: AssetType
  clientMutationId: String

  """The parent of the asset type"""
  parent: node
}

"""
The AddAssetTypeRequest Object: Contains all information for adding an AssetType.
"""
input AddAssetTypeRequest {
  """The acronym code of the assetType that should be created"""
  acronymCode: String

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The color of the assetType that should be created"""
  color: String
  description: String

  """The code of the icon of the assetType that should be created"""
  iconCode: String
  name: String
  parentAssetTypeId: ID!

  """The symbolType of the assetType that should be created"""
  symbolType: AssetTypeSymbolType = NONE
}

type AddAssetTypesMutation {
  """The api"""
  api: ApiType

  """The assetTypes that have been created."""
  assetTypes: [AssetType]
  clientMutationId: String
}

"""
The AddAssetTypesRequest Object: Contains all information for adding AssetTypes.
"""
input AddAssetTypesRequest {
  """The acronym code of the assetType that should be created"""
  acronymCode: String

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The color of the assetType that should be created"""
  color: String

  """The code of the icon of the assetType that should be created"""
  iconCode: String

  """The names of the assetTypes that should be created"""
  names: [String]!
  parentAssetTypeId: ID!

  """The symbolType of the assetType that should be created"""
  symbolType: AssetTypeSymbolType = NONE
}

type AddAssetWithContentMutation {
  """The api"""
  api: ApiType

  """The asset that has been added."""
  asset: Asset
  clientMutationId: String
}

input AddAssetWithContentRequest {
  attributeDefinitions: [AttributeDefinition]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  displayName: String
  domainId: ID!

  """The full name of the new asset. Should be unique within the domain."""
  name: String!
  relationDefinitions: [RelationDefinition]
  statusId: ID
  typeId: ID!
}

type AddAssignmentMutation {
  """The api"""
  api: ApiType

  """The Assignment that has been created."""
  assignment: Assignment
  clientMutationId: String
}

input AddAssignmentRequest {
  """The ArticulationRules."""
  articulationRules: [ArticulationRuleRequest]

  """The ID of the AssetType."""
  assetTypeId: ID!

  """The CharacteristicTypes."""
  characteristicTypes: [CharacteristicTypeAssignmentReference]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The IDs of the DataQualityRules."""
  dataQualityRuleIds: [ID]

  """The ID of the default Status."""
  defaultStatusId: ID!

  """The IDs of the DomainTypes."""
  domainTypeIds: [ID]
  id: ID
  name: String

  """The ID of the AssetType."""
  scopeId: ID

  """The IDs of the Statuses."""
  statusIds: [ID]!

  """The IDs of the ValidationRules."""
  validationRuleIds: [ID]
}

type AddAttachmentMutation {
  """The attachment that was added"""
  attachment: Attachment
  clientMutationId: String

  """
  Resource (asset, domain or community) for which the attachment has been added.
  """
  resource: node
}

input AddAttachmentRequest {
  """The base resource to which the attachment is attached to"""
  baseResourceId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The file name, this file name overrides the file name  in the headers"""
  fileName: String
}

type AddAttributeTypeMutation {
  """The api"""
  api: ApiType

  """The attribute type that has been added."""
  attributeType: AttributeType
  clientMutationId: String
}

input AddAttributeTypeRequest {
  allowedValues: [String]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  description: String
  isInteger: Boolean
  kind: AttributeKind
  language: String
  name: String!
  statisticsEnabled: Boolean
  stringType: StringType
}

input AddBooleanAttributeRequest {
  assetId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  typeId: ID!
  value: Boolean!
}

type AddBooleanAttributeType {
  """The asset that contains the added attribute."""
  asset: Asset

  """The attribute that has been added."""
  attribute: Attribute

  """The attributeTypesAssignedToAsset that contains the added attribute."""
  attributeTypeAssignedToAsset: AttributeTypeAssignedToAsset
  clientMutationId: String
}

input AddClassificationContributor {
  """The UUID of the asset to update"""
  assetId: String!
  classificationClasses: [ClassificationClassRequest]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
}

input AddClassificationsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """Names of classifications to create"""
  names: [String]
}

type AddClassMutation {
  """The asset for which class was added"""
  asset: Asset
  clientMutationId: String
}

type AddCommentMutation {
  """the asset temporary"""
  asset: Asset
  clientMutationId: String

  """The comment that has been added."""
  comment: Comment

  """the parent of the comment"""
  parent: node
}

input AddCommentRequest {
  baseResourceId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  content: String!
  mentionedUsers: [ID]
  parentId: ID
}

type AddCommunitiesMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The communities that have been added."""
  communities: [Community]
}

input AddCommunitiesRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  names: [String]!
  parentId: ID
}

type AddCommunityMutation {
  clientMutationId: String

  """The community that has been added."""
  community: Community
}

input AddCommunityRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  description: String
  name: String!
  parentId: ID
}

type AddComplexRelationMutation {
  clientMutationId: String

  """The relation that has been added."""
  complexRelation: ComplexRelation

  """
  the parent assignment, only available when the
  complexRelationTypeAssignedToAssetId & parentAssetId  are passed to the
  addComplexRelation call
  """
  complexRelationTypeAssignedToAsset: ComplexRelationTypeAssignedToAsset

  """
  the parent asset, only available when the parentAssetId was passed to the addComplexRelation call
  """
  parentAsset: Asset
}

input AddComplexRelationRequest {
  """the attributes for the complex relation"""
  attributes: [ComplexRelationAttributeRequest]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  complexRelationTypeId: ID!

  """the legs for the complex relation"""
  legs: [ComplexRelationLegRequest]
  parentAssetId: ID
}

type AddComplexRelationTypeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The complex relation type"""
  complexRelationType: ComplexRelationType
}

input AddComplexRelationTypeRequest {
  """The acronym code of the complexRelationType that should be created"""
  acronymCode: String

  """The attribute types of the complex relation type."""
  attributeTypes: [ComplexRelationAttributeTypeRequest]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The color of the complexRelationType"""
  color: String
  description: String

  """The code of the icon of the complexRelationType that should be created"""
  iconCode: String

  """The legs of the complex relation type."""
  legTypes: [ComplexRelationLegTypeRequest]
  name: String

  """The symbolType of the complexRelationType that should be created"""
  symbolType: AssetTypeSymbolType = NONE
}

input AddCrawlerRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The domain where the data will be stored"""
  domainId: ID!

  """The S3 File System asset id"""
  fileSystemAssetId: ID!

  """Include paths"""
  includePaths: [CrawlerIncludePathRequest]

  """The crawler's name"""
  name: String!
}

type AddDatabaseMutation {
  """The database asset"""
  asset: Asset
  clientMutationId: String
}

input AddDatabaseRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The community id"""
  communityId: ID!

  """the database sync id"""
  databaseConnectionId: ID!

  """the database description"""
  description: String

  """the owner of the database"""
  ownerIds: [ID]!

  """The parent system id"""
  parentSystemId: ID!
}

type AddDataQualityRuleMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The data quality rule that has been created."""
  dataQualityRule: DataQualityRule
}

input AddDataQualityRuleRequest {
  categorizationRelationTypeId: ID

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  dataQualityMetrics: [DataQualityMetricRequest]
  description: String
  name: String!
  relationTraceEntries: [RelationTraceEntryRequest]
}

input AddDateAttributeRequest {
  assetId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  typeId: ID!
  value: Long!
}

type AddDateAttributeType {
  """The asset that contains the added attribute."""
  asset: Asset

  """The attribute that has been added."""
  attribute: Attribute

  """The attributeTypesAssignedToAsset that contains the added attribute."""
  attributeTypeAssignedToAsset: AttributeTypeAssignedToAsset
  clientMutationId: String
}

type AddDiagramPictureMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The diagram picture."""
  diagramPicture: DiagramPicture
}

"""The add diagram picture request object."""
input AddDiagramPictureRequest {
  """The id of the Asset for which the Diagram Picture was taken"""
  assetId: ID

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The configuration of the Diagram Picture"""
  config: String

  """The date of the data inside the picture"""
  dataDate: Long

  """The flag to indicate if the picture is the default one"""
  default: Boolean

  """The description of the Diagram Picture"""
  description: String

  """The name of the Diagram Picture"""
  name: String

  """The id of the View from which the Diagram Picture was taken"""
  originalViewId: ID

  """The flag to indicate if the picture should be pinned or not"""
  preferred: Boolean

  """The sharing rules"""
  sharingRules: [SharingRuleRequest]

  """The svg of the Diagram Picture"""
  svg: String
}

type AddDomainMutation {
  clientMutationId: String

  """The domain that has been added."""
  domain: Domain
}

input AddDomainRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  communityId: ID!
  description: String
  name: String!
  typeId: ID!
}

type AddDomainsMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The domains that have been added."""
  domains: [Domain]
}

input AddDomainsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  communityId: ID!
  names: [String]!
  typeId: ID!
}

type AddDomainTypeAssignmentRuleMutation {
  clientMutationId: String

  """Workflow definition with added assignment rule."""
  workflowDefinition: WorkflowDefinition
}

input AddDomainTypeAssignmentRuleRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The ID of the community the assignment rule should apply for."""
  communityId: ID

  """The ID of the domain type the added rule should refer to."""
  domainTypeId: ID!

  """
  The ID of the workflow definition containing the assignment rule to be added.
  """
  workflowDefinitionId: ID!
}

type AddDomainTypeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The domain type."""
  domainType: DomainType

  """The parent of the domain type."""
  parent: node
}

input AddDomainTypeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  description: String
  name: String

  """The ID of the parent DomainType."""
  parentDomainTypeId: ID!
}

type AddDomainTypesMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The domainTypes that have been created."""
  domainTypes: [DomainType]
}

"""
The AddDomainTypesRequest Object: Contains all information for adding DomainTypes.
"""
input AddDomainTypesRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID

  """The names of the domainTypes that should be created"""
  names: [String]!

  """The ID of the parent DomainType."""
  parentDomainTypeId: ID!
}

input AddEdgeDataSourceToAssetRequest {
  """The UUID of an asset that will have capability instance assigned to it"""
  assetId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The UUID of the edge data source id to assign to an asset"""
  edgeDataSourceId: ID!
}

type AddFileMutation {
  clientMutationId: String

  """The FileInfo of the file that has been added"""
  fileInfo: FileInfo
}

input AddFileRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
}

type AddJdbcDriverMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The JdbcDriver that has been added"""
  jdbcDriver: JdbcDriver
}

input AddMultiValueListAttributeRequest {
  assetId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  typeId: ID!
  value: [String]!
}

type AddMultiValueListAttributeType {
  """The asset that contains the added attribute."""
  asset: Asset

  """The attribute that has been added."""
  attribute: Attribute

  """The attributeTypesAssignedToAsset that contains the added attribute."""
  attributeTypeAssignedToAsset: AttributeTypeAssignedToAsset
  clientMutationId: String
}

type AddNewClassificationsMutation {
  """New classifications data"""
  classifications: [Classification]
  clientMutationId: String
}

input AddNumericAttributeRequest {
  assetId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  typeId: ID!
  value: Double!
}

type AddNumericAttributeType {
  """The asset that contains the added attribute."""
  asset: Asset

  """The attribute that has been added."""
  attribute: Attribute

  """The attributeTypesAssignedToAsset that contains the added attribute."""
  attributeTypeAssignedToAsset: AttributeTypeAssignedToAsset
  clientMutationId: String
}

type AddRatingMutation {
  """The asset to which new rating has been assigned."""
  asset: Asset
  clientMutationId: String

  """The rating that has been added."""
  rating: Rating
}

"""The request object to create new rating for asset"""
input AddRatingRequest {
  """Id of asset to which rating will be assigned"""
  assetId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """Rating value"""
  rating: Float!

  """Optional comment to added rating"""
  review: String
}

type AddRelationMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The relation that has been added."""
  relation: Relation
}

input AddRelationRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  endingDate: Long
  sourceId: ID!
  startingDate: Long
  targetId: ID!
  typeId: ID!
}

type AddRelationsMutation {
  """The api"""
  api: ApiType

  """The asset passed as an argument"""
  asset: Asset
  clientMutationId: String

  """the parent to source assignment"""
  relationTypeAssignedToAssetToSource: RelationTypeAssignedToAsset

  """the parent to target assignment"""
  relationTypeAssignedToAssetToTarget: RelationTypeAssignedToAsset

  """The relation that has been added."""
  relations: [Relation]
}

input AddRelationsRequest {
  assetId: ID

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  requests: [AddRelationRequest]!
}

type AddRelationTypeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The co-role of the relation type"""
  coRole: String

  """The description of the relation type."""
  description: String

  """The relation type that has been created."""
  relationType: RelationType

  """The role of the relation type."""
  role: String

  """The source type of the relation type."""
  sourceType: node

  """The target type of the relation type."""
  targetType: node
}

input AddRelationTypeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  coRole: String
  description: String
  id: ID
  role: String
  sourceType: ID
  targetType: ID
}

type AddResponsibilitiesMutation {
  clientMutationId: String

  """The responsibilities that have been added."""
  responsibilities: [Responsibility]
}

input AddResponsibilitiesRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  ownerIds: [ID]!
  resourceId: ID!
  resourceType: ResourceType!
  roleId: ID!
}

type AddRolesMutation {
  clientMutationId: String

  """The roles that were added."""
  roles: [Role]
}

input AddRolesRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """Whether the roles to add are global or not."""
  global: Boolean

  """The names of the roles to add."""
  names: [String]
}

type AddS3CrawlerMutation {
  """The S3 File System asset"""
  asset: Asset
  clientMutationId: String
}

type AddS3ForeignCredentialMutation {
  """The S3 FileSystem asset"""
  asset: Asset
  clientMutationId: String
}

input AddS3ForeignCredentialRequest {
  assetId: ID!

  """
  The asset type id for to define if is it s3 filesystem or tableau server or...
  """
  assetTypeId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  jobServer: String

  """Secret key"""
  password: [Char]!

  """IAM Role"""
  role: String!

  """Access key"""
  user: String!
}

type AddS3ScheduleMutation {
  """The S3 File System asset"""
  asset: Asset
  clientMutationId: String
}

input AddS3ScheduleRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  cronExpression: String
  cronJson: String
  cronTimeZone: String

  """The S3 File System asset id"""
  fileSystemAssetId: ID!
}

type AddSchemaFromCsvFileMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The job that creates a schema"""
  job: Job
}

input AddSchemaFromCsvFileRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  description: String
  detectAdvancedDataTypes: Boolean
  escape: String
  executeProfiling: Boolean
  extractDataSample: Boolean
  fileId: ID!
  fileLocation: String
  jobServer: String
  ownerId: ID!
  quote: String
  schemaName: String!
  separator: String
}

type AddSchemaFromExcelFileMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The job that creates a schema"""
  job: Job
}

input AddSchemaFromExcelFileRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  description: String
  detectAdvancedDataTypes: Boolean
  executeProfiling: Boolean
  extractDataSample: Boolean
  fileId: ID!
  fileLocation: String
  jobServer: String
  ownerId: ID!
  schemaName: String!
}

type AddSchemaFromJdbcMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The job that creates a schema"""
  job: Job
}

input AddSchemaFromJdbcRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  cronExpression: String
  cronTimeZone: String
  description: String
  detectAdvancedDataTypes: Boolean
  executeProfiling: Boolean
  extractDataSample: Boolean
  jdbcConnectionString: String
  jdbcDriverId: ID!
  jobServer: String
  ownerId: ID!
  password: String
  properties: Map!
  schemaName: String!
  storeCredentials: Boolean
  tablesToSkip: [String]
  user: String
}

type AddScopeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The scope that has been created."""
  scope: Scope
}

input AddScopeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The communities for the scope to be created"""
  communityIds: [ID] = []
  description: String

  """The domains for the scope to be created"""
  domainIds: [ID] = []
  name: String
}

input AddScriptAttributeRequest {
  assetId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  typeId: ID!
  value: String!
}

type AddScriptAttributeType {
  """The asset that contains the added attribute."""
  asset: Asset

  """The attribute that has been added."""
  attribute: Attribute

  """The attributeTypesAssignedToAsset that contains the added attribute."""
  attributeTypeAssignedToAsset: AttributeTypeAssignedToAsset
  clientMutationId: String
}

input AddSingleValueListAttributeRequest {
  assetId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  typeId: ID!
  value: String!
}

type AddSingleValueListAttributeType {
  """The asset that contains the added attribute."""
  asset: Asset

  """The attribute that has been added."""
  attribute: Attribute

  """The attributeTypesAssignedToAsset that contains the added attribute."""
  attributeTypeAssignedToAsset: AttributeTypeAssignedToAsset
  clientMutationId: String
}

type AddStatusesMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The statuses that have been created."""
  statuses: [Status]
}

"""
The AddStatusesRequest Object: Contains all information for adding Statuses.
"""
input AddStatusesRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The names of the statuses that should be created"""
  names: [String]!
}

type AddStatusMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The status that has been created."""
  status: Status
}

input AddStatusRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  description: String
  name: String
}

input AddStringAttributeRequest {
  assetId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  typeId: ID!
  value: String!
}

type AddStringAttributeType {
  """The asset that contains the added attribute."""
  asset: Asset

  """The attribute that has been added."""
  attribute: Attribute

  """The attributeTypesAssignedToAsset that contains the added attribute."""
  attributeTypeAssignedToAsset: AttributeTypeAssignedToAsset
  clientMutationId: String
}

type AddTableauScheduleMutation {
  """The tableau server  asset"""
  asset: Asset
  clientMutationId: String
}

input AddTableauScheduleRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  cronExpression: String
  cronTimeZone: String

  """The tableau server asset id"""
  tableauServerId: ID!
}

type AddTableauServerCredentialMutation {
  """Foreign credential that was added."""
  catalogForeignCredential: TableauForeignCredential
  clientMutationId: String
}

input AddTableauServerCredentialRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  jobServer: String
  password: [Char]!
  serverAssetId: ID!

  """Tableau server url"""
  serviceUrl: String!
  tableauOnline: Boolean
  urlSiteName: String

  """Tableau user name"""
  user: String!
}

type AddToDataBasketMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The logged in user's data basket"""
  dataBasket: Asset
}

input AddToDataBasketRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  dataBasketItemsIds: [ID]!
}

type AddUserGroupMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The user group that was changed."""
  userGroup: UserGroup
}

input AddUserGroupRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  locallyManaged: Boolean
  name: String
}

type AddUserGroupsMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The list of user groups that were added."""
  userGroups: [UserGroup]
}

input AddUserGroupsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  names: [String]
}

type AddUserMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  licenseCounts(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): LicenseCounts

  """The user that has been created"""
  user: User
}

input AddUserRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  emailAddress: String!
  firstName: String
  gender: Gender
  lastName: String
  licenseType: LicenseType
  userGroupIds: [ID]
  userName: String!
}

type AddUsersMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  licenseCounts(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): LicenseCounts

  """The users that have been created"""
  users: [User]
}

input AddUsersRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  licenseType: LicenseType

  """The AddUserRequest objects"""
  requests: [AddUserRequest]

  """
  Passing the userGroupIds in the bulk request will overwrite any userGroupIds set in the single requests.
  """
  userGroupIds: [ID]
}

type AddUsersToGroupMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  licenseCounts(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): LicenseCounts

  """The list of users the group has been assigned to"""
  users: [User]
}

input AddUsersToUserGroupRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  userGroupId: ID!
  userIds: [ID]!
}

type AddUserToGroupsMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The list of user groups the user has been assigned to"""
  groups: [UserGroup]
  licenseCounts(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): LicenseCounts
}

input AddUserToUserGroupsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  userGroupIds: [ID]!
  userId: ID!
}

input AddViewAssignmentRule {
  assetTypeId: String
  communityId: String
  domainId: String
  domainTypeId: String
}

type AddViewMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The view that has been added"""
  view: View
}

type AddViewPermissionsMutation {
  clientMutationId: String

  """The view permissions that have been added."""
  viewPermissions: [ViewPermission]
}

input AddViewPermissionsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  resourceId: ID!
  userGroupIds: [ID]!
  userIds: [ID]!
}

input AddViewRequest {
  assignmentRules: [AddViewAssignmentRule]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  config: String
  default: Boolean
  description: String
  location: String!
  name: String
  originalViewId: ID
  preferred: Boolean
  sharingRules: [AddViewSharingRule]

  """
  The enumeration for a ViewType. Possible values are: DASHBOARD SEARCH
  ASSETTABLE COMMUNITYDOMAINTREE DOMAINTABLE DIAGRAM STATUSTABLE
  RELATIONTYPETABLE DOMAINTYPETABLE ASSETTYPETABLE ATTRIBUTETYPETABLE
  COMPLEXRELATIONTYPETABLE DATAQUALITYRULETABLE VALIDATIONRESULTTABLE SCOPETABLE
  ADVANCEDDATATYPETABLE DIAGRAMPICTURETABLE USERTABLE USERGROUPSTABLE TAGTABLE
  GLOBALROLETABLE RESOURCEROLETABLE GLOBALPERMISSIONSTABLE
  RESOURCEPERMISSIONSTABLE
  """
  type: String
  workingView: Boolean
}

input AddViewSharingRule {
  groupId: String
  roleId: String
  userId: String
}

type AdvancedDataType implements DataType & node {
  """The description of the Object"""
  description: String

  """The unique identifier"""
  id: ID

  """Logical data type of DataType"""
  logicalDataType: LogicalDataType

  """The Name of the Object"""
  name: String

  """Date/regex patterns used to determine Advanced Data Type"""
  patterns: [String]
}

type AlterViewMutation {
  clientMutationId: String

  """View to be altered"""
  view: View
}

"""The main root api type"""
type ApiType implements node {
  activities(
    """the type of the activity"""
    activityType: ActivityType

    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """The category of the change"""
    categories: [ActivityFilterCategory]

    """The id of the context."""
    contextId: String

    """The end date"""
    endDate: Long

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The ID of the user who performed the activity"""
    performedByUserId: String

    """The resource types of the changed resources"""
    resourceTypes: [ResourceType]

    """The start date"""
    startDate: Long

    """the task ID"""
    taskId: ID
  ): ActivityConnection
  advancedDataTypeTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  aggregations(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """Id of facet for whom aggregations needs to be calculated"""
    facetId: String

    """The query to narrow down facets results"""
    facetQuery: String

    """List of selected facets"""
    facets: [SearchRequestFacet]

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The query to execute general search"""
    query: String
  ): SearchResultFacetPathConnection
  allAssignmentKeys: [assignmentKey]

  """
  Lists the parent categories for application views, along with their associated view count.
  """
  applicationViewCategories: [ApplicationTypeWithViewCount]

  """Lists the views that belong to an application."""
  applicationViews(
    applicationTypes: [ApplicationType]

    """
    Filter on who the view is shared with, either the everyone group id or a role id
    """
    name: ID

    """
    Filter on who the view is shared with, either the everyone group id or a role id
    """
    sharedWithFilter: ID

    """The field on which we want to sort the views."""
    sortField: SharedViewSortField = SHARED_WITH

    """The order in which the views should be sorted."""
    sortOrder: SortOrder = ASC
  ): [View]
  asset(
    """The id of the asset to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): Asset

  """Asset Attributes"""
  assetAttributes(
    """The list of id of attribute types the found attributes should have. """
    typeIds: [ID]
  ): [Attribute]
  assetTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  assetType(
    """The id of the asset type to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): AssetType
  assetTypeExists(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The name of the assetType to check"""
    name: String
  ): Boolean
  assetTypeTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String

  """Finds AssetTypes according to the criteria specified as arguments"""
  assetTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    Whether only asset types with enabled (or disabled) display name should be
    returned. By default, both kinds of asset types are returned.
    """
    displayNameEnabled: Boolean

    """Indicates if we exclude meta or not.  By Default, meta is excluded."""
    excludeMeta: Boolean = true

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the asset types to find."""
    name: String

    """The match mode of the name"""
    nameMatchMode: MatchMode = ANYWHERE

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the parent of the AssetTypes we wish to find."""
    parentAssetTypeId: ID
  ): AssetTypeConnection
  assetTypesById(
    """The list of ids of the asset types to retrieve."""
    ids: [ID]!

    """Indicates the directive to include or skip."""
    if: Boolean

    """An optional filter on permissions"""
    permission: AssetPermission
  ): [AssetType]
  assets(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """The id of the community this asset should be in."""
    communityId: ID

    """The id of the domain this asset should be in."""
    domainId: ID

    """
    If true, the meta Assets are excluded in the results.  Default value is true
    """
    excludeMeta: Boolean = true

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The full name or display name of the asset to search for."""
    name: String

    """The match mode used to compare full name or display name."""
    nameMatchMode: MatchMode = ANYWHERE

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The field on which we would like the sorting to apply"""
    sortField: AssetSortField = DISPLAY_NAME

    """Specifies the order for the Assets. Can be either 'ASC' or 'DESC'"""
    sortOrder: SortOrder = ASC

    """The list of ids of the asset type these assets should have."""
    typeIds: [ID]

    """
    If true, also the children of the asset types in the typeId parameter will be considered.  Default value is true
    """
    typeInheritance: Boolean = true
  ): AssetConnection
  assetsById(
    """The list of ids of the assets to retrieve."""
    ids: [ID]!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): [Asset]
  assignedAssetTypeIds(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """The community ids for which we want the asset types"""
    communityIds: [String]

    """The domain ids for which we want the asset types"""
    domainIds: [String]

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    The view id, if passed we will do a 'best effort' to take the view filtering into account when searching for assetTypes.
    """
    viewId: ID
  ): [ID]
  assignedAssetTypes(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """The community ids for which we want the asset types"""
    communityIds: [ID]

    """The domain ids for which we want the asset types"""
    domainIds: [ID]

    """The excludeMeta argument, default: FALSE"""
    excludeMeta: Boolean = false

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The optional name filtering argument"""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    The view id, if passed we will do a 'best effort' to take the view filtering into account when searching for assetTypes.
    """
    viewId: ID
  ): [AssetType]
  assignedAttributeTypes(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The optional name filtering argument"""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    The view id, if passed we will do a 'best effort' to take the view filtering into account when searching for assetTypes.
    """
    viewId: ID
  ): AttributeTypeConnection
  assignedComplexRelationTypes(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    The view id, if passed we will do a 'best effort' to take the view filtering into account when searching for assetTypes.
    """
    viewId: ID
  ): ComplexRelationTypeConnection

  """Find datasource based on assigned assetId"""
  assignedEdgeDataSource(assetId: ID!): EdgeDataSource
  assignedRelationTypesForView(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The optional name filtering argument"""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    The view id, if passed we will do a 'best effort' to take the view filtering into account when searching for assetTypes.
    """
    viewId: ID
  ): AssignedRelationTypeConnection
  assignedStatuses(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    The view id, if passed we will do a 'best effort' to take the view filtering into account when searching for assetTypes.
    """
    viewId: ID
  ): StatusConnection
  assignment(
    """The id of the resource to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): Assignment
  assignments(
    """The id of the scope for which we want to find Assignments."""
    scopeId: ID
  ): [Assignment]
  attachment(
    """The id of the attachment to retrieve."""
    id: ID!
  ): Attachment
  attachments(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """The optional id of resource to get the comments from."""
    baseResourceId: ID

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String
    fileContentType: String
    fileName: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    scanState: String

    """
    The enumeration for a SortField. Possible values are: FILE_CONTENT_TYPE
    CREATED_BY FILE_NAME CREATED_ON BASE_RESOURCE_ID LAST_MODIFIED
    """
    sortField: String = "CREATED_ON"

    """Specifies the order for the attachments.  Can be either 'ASC or 'DESC"""
    sortOrder: String = "ASC"
    uploadDate: Long
    userId: ID
  ): AttachmentConnection
  attribute(
    """The id of the attribute to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): Attribute
  attributeType(
    """The id of the attribute type to retrieve."""
    id: ID

    """Indicates the directive to include or skip."""
    if: Boolean
  ): AttributeType
  attributeTypeExists(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The name of the attributeType to check"""
    name: String
  ): Boolean
  attributeTypeTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  attributeTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the attribute type to find."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    The enumeration for a SortField. Possible values are: NAME KIND STATISTICS_ENABLED IS_INTEGER ALLOWED_VALUES
    """
    sortField: String = "NAME"

    """
    Specifies the order for the attribute types.  Can be either 'ASC or 'DESC
    """
    sortOrder: String = "ASC"

    """
    Optional argument to filter out attributeTypes with statistics enabled on true or false
    """
    statisticsEnabled: Boolean
  ): AttributeTypeConnection
  attributeTypesById(
    """The list of ids of the attribute types to retrieve."""
    ids: [ID]!
  ): [AttributeType]
  attributes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """The id of the asset the attributes should be part of."""
    assetId: ID

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The list of id of attribute types the found attributes should have. """
    typeIds: [ID]
  ): AttributeConnection
  banner(type: BannerType): Banner
  breadcrumb(input: ID!): [NamedResourceReference]
  buildNumber: String

  """Tries to find business assets that match the text to search"""
  businessAssetMatcher(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    an optional list of ids of communities the business assets should belong to
    """
    communityIds: [String]

    """
    an optional list of ids of domains the business assets should belong to
    """
    domainIds: [String]

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    some text that will be analyzed in order to find matching business assets
    """
    textToMatch: String
  ): AssetConnection

  """Check if an edge capability exists"""
  capabilityExists(capabilityType: CapabilityType!, edgeDataSourceId: ID!): Boolean!
  checkAssetNames(
    """The ID of the domain in which we are looking for assets"""
    domainId: ID!

    """Indicates the directive to include or skip."""
    if: Boolean

    """The full name of the assets to find."""
    names: [String]!
  ): [Boolean]

  """
  Checks if an assetType for the given names exists. The result is a List of
  boolean values in the same order as the names passed as the argument. Each
  boolean indicates if an assetType with the given name at the same index exists or not.
  """
  checkAssetTypeNames(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The names of the assetTypes we would like to check."""
    names: [String]!
  ): [Boolean]
  checkAttributeTypeNames(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The names of the attribute type to find."""
    names: [String]!
  ): [Boolean]
  checkClassificationNames(classificationNames: [String]!): [Boolean]!

  """
  Checks if a Community for the given names exists. The result is a List of
  boolean values in the same order as the names passed as the argument. Each
  boolean indicates if a Community with the given name at the same index exists or not.
  """
  checkCommunityNames(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The names of the communities to find."""
    names: [String]!
  ): [Boolean]
  checkDomainNames(
    """The ID of the community in which we are looking for domains"""
    communityId: ID!

    """Indicates the directive to include or skip."""
    if: Boolean

    """The names of the domains to find."""
    names: [String]!
  ): [Boolean]

  """
  Checks if a domainType for the given names exists. The result is a List of
  boolean values in the same order as the names passed as the argument. Each
  boolean indicates if a domainType with the given name at the same index exists or not.
  """
  checkDomainTypeNames(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The names of the domainTypes we would like to check."""
    names: [String]!
  ): [Boolean]

  """
  Checks if a role with the given names exists. The result is a List of boolean
  values in the same order as the names passed as argument. Each boolean
  indicates if a role with the given name at the same index exists or not.
  """
  checkRoleNames(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The names of the roles we would like to check."""
    names: [String]!
  ): [Boolean]

  """
  Checks if a status for the given names exists. The result is a List of boolean
  values in the same order as the names passed as the argument. Each boolean
  indicates if a status with the given name at the same index exists or not.
  """
  checkStatusNames(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The names of the statuses we would like to check."""
    names: [String]!
  ): [Boolean]
  checkUserGroupNames(userGroupNames: [String]!): [Boolean]!
  classificationStewardship: ClassificationStewardshipType
  columnNamesFromCsv(input: InternalGetColumnNamesFromCsvRequest): [String]
  columnNamesFromExcel(input: InternalGetColumnNamesFromExcelRequest): [String]
  columnsMetadata: [ColumnMetadata]
  comment(
    """The id of the comment to retrieve."""
    id: ID!
  ): Comment
  comments(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """The optional id of resource to get the comments from."""
    baseResourceId: ID

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The optional id of the parent comment to get the replies from."""
    parentId: ID

    """
    A boolean value indicating whether we are looking for Root comments or not
    """
    rootComment: Boolean

    """
    Specifies the order for the comments (by creation date). Can be either 'ASC or 'DESC
    """
    sortOrder: String = "ASC"

    """The optional id of the user to get the comments from.."""
    userId: ID
  ): CommentConnection
  commentsMentioningUser: [Comment]
  communities(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """Whether meta domains should be excluded or not"""
    excludeMeta: Boolean = true

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the community to find."""
    name: String

    """The matchmode we should use for the name of the domain"""
    nameMatchMode: MatchMode = ANYWHERE

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The ID of the parent Community"""
    parentCommunityId: ID

    """The field on which we would like the sorting to apply"""
    sortField: CommunitySortField = NAME

    """Specifies the order for the attachments.  Can be either 'ASC or 'DESC"""
    sortOrder: String = "ASC"
  ): CommunityConnection
  communitiesById(
    """The list of ids of the communities to retrieve."""
    ids: [ID]!
  ): [Community]
  community(
    """The id of the community to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): Community
  communityDomainHierarchyOutput(
    communityId: ID

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    parentCommunityId: ID

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  communityDomainTreeOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]
    communityId: ID

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean
    limit: Int = -1
    offset: Int
    parentCommunityId: ID

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  complexRelation(
    """The id of the resource to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): ComplexRelation
  complexRelationOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]
    assetId: ID
    complexRelationTypeId: ID

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  complexRelationType(
    """The id of the asset type to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): ComplexRelationType
  complexRelationTypeAssignedToAsset(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """The id of the asset the complex relations should contain."""
    assetId: ID!

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """The id of the complex relation type the complex relations should have."""
    complexRelationTypeId: ID!

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): ComplexRelationTypeAssignedToAsset
  complexRelationTypeExists(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The name of the complexRelationType to check"""
    name: String
  ): Boolean
  complexRelationTypeTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  contextTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean
    level: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    parentAssetId: ID

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  currentUser: CurrentUser
  cursorAssets(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """The ids of the communities this asset should be in."""
    communityIds: [ID]

    """The ids of the domains this asset should be in."""
    domainIds: [ID]

    """
    If true, the meta Assets are excluded in the results.  Default value is true
    """
    excludeMeta: Boolean = true

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The full name or display name of the asset to search for."""
    name: String

    """The match mode used to compare full name or display name."""
    nameMatchMode: MatchMode = ANYWHERE

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The field on which we would like the sorting to apply"""
    sortField: AssetSortField = DISPLAY_NAME

    """Specifies the order for the Assets. Can be either 'ASC' or 'DESC'"""
    sortOrder: SortOrder = ASC

    """The list of ids of the asset statuses these assets should have."""
    statusIds: [ID]

    """The list of ids of the asset type these assets should have."""
    typeIds: [ID]

    """
    If true, also the children of the asset types in the typeId parameter will be considered.  Default value is true
    """
    typeInheritance: Boolean = true
  ): AssetConnection

  """
  Lists the views of type DASHBOARD that are public or shared with a role.
  """
  dashboardViews(
    """
    Filter on who the view is shared with, either the everyone group id or a role id
    """
    name: ID

    """
    Filter on who the view is shared with, either the everyone group id or a role id
    """
    sharedWithFilter: ID

    """The field on which we want to sort the views."""
    sortField: SharedViewSortField = SHARED_WITH

    """The order in which the views should be sorted."""
    sortOrder: SortOrder = ASC
  ): [View]

  """The user's data basket"""
  dataBasket: Asset

  """The content of the logged in user's data basket"""
  dataBasketContent(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): AssetConnection
  dataQualityRule(
    """The id of the resource to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): DataQualityRule
  dataQualityRuleTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String

  """
  Finds the dataqualityrules matching the criteria passed as arguments on this node.
  """
  dataQualityRules(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the data quality rules to find."""
    name: String

    """The matchmode to use when matching the name"""
    nameMatchMode: MatchMode

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The enumeration for a SortField. Possible values are: NAME"""
    sortField: DataQualityRuleSortField = NAME

    """
    Specifies the order for the data quality rules.  Can be either 'ASC or 'DESC
    """
    sortOrder: SortOrder = ASC
  ): DataQualityRuleConnection

  """Find databases for a given edge data source"""
  dataSourceDatabases(id: ID!, refresh: Boolean!): DataSourceDatabases
  dataTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the data type to find."""
    name: String

    """The name match mode"""
    nameMatchMode: MatchMode = ANYWHERE

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): DataTypeConnection

  """Get database configuration"""
  databaseConfiguration(id: ID!): DatabaseConfiguration

  """Get sampling support for database"""
  databaseDataSourceSamplingSupport(databaseId: ID!): Boolean!

  """Get profiling configuration"""
  databaseProfilingConfiguration(databaseId: ID!): DatabaseProfilingConfiguration

  """Get database profiling schemas"""
  databaseProfilingSchemas(databaseId: ID!): [ProfilingSchema]

  """Get database profiling schema rules"""
  databaseProfilingTableRule(schemaId: ID!): ProfilingTableRule

  """Find database schedule by asset id and job group name"""
  databaseScheduleConfiguration(assetId: ID!, jobGroupName: DatabaseJobGroups!): DatabaseSyncSchedule

  """Get database schemas by databaseAssetId"""
  databaseSchemas(id: ID!, refresh: Boolean): DatabaseIngestionSchemas
  defaultColumnNames(
    """The id of the view to retrieve the default column names for."""
    viewId: ID!
  ): Map

  """Retrieve the diagram picture corresponding to the given id."""
  diagramPicture(
    """the id of the Diagram Picture to look for"""
    diagramPictureId: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): DiagramPicture
  diagramPictureTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String

  """Lists the views of type DIAGRAM that are public or shared with a role."""
  diagramViews(
    """Filter on the user who last modified the view"""
    lastModifiedByFilter: ID

    """
    Filter on who the view is shared with, either the everyone group id or a role id
    """
    name: ID

    """
    Filter on who the view is shared with, either the everyone group id or a role id
    """
    sharedWithFilter: ID

    """The field on which we want to sort the views."""
    sortField: SharedViewSortField = SHARED_WITH

    """The order in which the views should be sorted."""
    sortOrder: SortOrder = ASC
  ): [View]
  displayGlobalCreateButton: Boolean
  domain(
    """The id of the domain to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): Domain
  domainById(
    """The list of ids of the domains to retrieve."""
    ids: [ID]!
  ): [Domain]
  domainTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1
    domainTypeIds: [ID]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  domainType(
    """The id of the domain type to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): DomainType
  domainTypeExists(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The name of the domainType to check"""
    name: String
  ): Boolean
  domainTypeTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  domainTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """Indicates whether META domainTypes should be excluded or not."""
    excludeMeta: Boolean = false

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the domain type to find."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): DomainTypeConnection
  domainTypesById(
    """The list of ids of the domain types to retrieve."""
    ids: [ID]!

    """An optional filter on permissions"""
    permission: AssetPermission
  ): [DomainType]
  domains(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """The ID of the community in which we are looking for domains"""
    communityId: ID

    """Whether meta domains should be excluded or not"""
    excludeMeta: Boolean = true

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the domain to find."""
    name: String

    """The matchmode we should use for the name of the domain"""
    nameMatchMode: MatchMode = ANYWHERE

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The ID of the domain type for which we want to limit to"""
    typeId: ID
  ): DomainConnection

  """Find datasource based on id"""
  edgeDataSource(id: ID!): EdgeDataSource

  """List datasource types available"""
  edgeDataSourceTypes: [String]

  """List datasource with at least 1 ingestion capability"""
  edgeDataSources(type: String): [EdgeDataSource]
  featureToggles: [FeatureToggleDefinitionType]
  findCsvIngestionPropertiesBySchemaId(
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): CsvIngestionProperties
  findExcelIngestionPropertiesBySchemaId(
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): ExcelIngestionProperties
  findJdbcIngestionPropertiesBySchemaId(
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): JdbcIngestionProperties
  findRelationTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name on which we try to find"""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): RelationTypeConnection
  findTailOfRelationTrace(
    """Indicates the directive to include or skip."""
    if: Boolean
    input: FindTailOfRelationTraceRequest
  ): [Asset]
  flatGlobalCreateAssetTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the asset types to find."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): [AssetType]
  flatGlobalCreateDomainTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the domain types to find."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): [DomainType]
  globalCreateAssetTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): [GlobalCreateAssetTypes]
  globalCreateDomainTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): [GlobalCreateDomainTypes]
  globalCreateEnabledWorkflows: [Workflow]
  globalRoleTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String

  """
  Lists the global views of type ASSETTABLE that are public or shared with a role.
  """
  globalViews(
    """
    Filter on who the view is shared with, either the everyone group id or a role id
    """
    name: ID

    """
    Filter on who the view is shared with, either the everyone group id or a role id
    """
    sharedWithFilter: ID

    """The field on which we want to sort the views."""
    sortField: SharedViewSortField = SHARED_WITH

    """The order in which the views should be sorted."""
    sortOrder: SortOrder = ASC
  ): [View]
  guidedStewardship: GuidedStewardshipType

  """Check if there are available datasource"""
  hasEdgeDataSources: Boolean!
  helpMenu: [HelpMenuItem]

  """A dummy hardcoded id for the api"""
  id: ID
  isFeatureToggleEnabled(
    """The name of the featureToggle to get the value from"""
    name: String
  ): Boolean
  jdbcDrivers(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """The name of the database to find."""
    databaseName: String

    """The version of the database to find."""
    databaseVersion: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): JdbcDriverConnection
  job(
    """The id of the job to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): Job
  jobs(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String
    createdBy: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The maximum visibility level the jobs should have."""
    maxVisibility: Int = 2147483647
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """Specifies the field on which the jobs should be sorted """
    sortField: String = "CREATED_ON"

    """Specifies the order for the jobs. """
    sortOrder: String = "DESC"

    """Specifies the list of states the job should have. """
    states: [String]

    """Specifies the list of types the job should be in."""
    types: [String]

    """
    The visibility filter of the jobs. True for visible, false for non-visible. Omit for all.
    """
    visible: Boolean
  ): JobConnection
  licenseCounts(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): LicenseCounts
  linkedAssets(
    """Indicates the directive to include or skip."""
    if: Boolean
    matchedExpression: String
    stringAttributeId: ID
    targetIds: [ID]
  ): [Asset]

  """The file names of the existing log files"""
  logFileNames: [String]
  mandatoryDataQualityMetrics(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): [DataQualityMetric]
  mostRecentlyViewedAssetTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean
    input: RecentlyViewedAssetTypesRequest

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): NavigationStatisticsAssetTypesDTOConnection
  organizationsWithScopes: [OrganizationWithScope]
  permittedCommunities(
    """Permission to check against."""
    permission: Permission
  ): [Community]

  """
  Retrieve the possible asset types for a list of Relation Types and a flag
  indicating  the AssetTypes should be source or target of the RelationType.
  """
  possibleAssetTypesForRelationTypes(
    """Indicates the directive to include or skip."""
    if: Boolean

    """the ids of the relation Types"""
    relationTypeIds: [ID]!

    """
    flags indicating the AssetTypes should be source or target of the RelationTypes
    """
    sources: [Boolean]!
  ): [AssetType]
  possibleComplexRelationTypesForDomainTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """the filters"""
    filters: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """the name"""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    The view id, if passed we will do a 'best effort' to take the view filtering into account when searching for assetTypes.
    """
    viewId: ID
  ): ComplexRelationTypeConnection

  """
  Retrieve the possible complex relation types as source of a list of Relation Types.
  """
  possibleComplexRelationTypesForRelationTypes(
    """Indicates the directive to include or skip."""
    if: Boolean

    """the ids of the Relation Types"""
    relationTypeIds: [ID]!
  ): [AssetType]

  """Retrieve the possible relation types between two asset types."""
  possibleRelationTypesForAssetTypes(
    """Indicates the directive to include or skip."""
    if: Boolean

    """the id of the source Asset Type"""
    sourceAssetTypeId: ID

    """the id of the target Asset Type"""
    targetAssetTypeId: ID
  ): [SuggestedRelationType]
  rating(
    """The id of the rating to retrieve."""
    id: ID!
  ): Rating
  recentlyViewed(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """The ids of the communities this asset should be in."""
    communityIds: [ID]

    """The ids of the domains this asset should be in."""
    domainIds: [ID]

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The full name or display name of the asset to search for."""
    name: String

    """The match mode used to compare full name or display name."""
    nameMatchMode: MatchMode = ANYWHERE

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The list of ids of the asset statuses these assets should have."""
    statusIds: [ID]

    """The list of ids of the asset type these assets should have."""
    typeIds: [ID]

    """
    If true, also the children of the asset types in the typeId parameter will be considered.  Default value is true
    """
    typeInheritance: Boolean = true
  ): AssetConnection
  recommender(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean
    input: RecommendationRequest

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): AssetConnection
  relation(
    """The id of the relation to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): Relation
  relationHierarchyOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean
    level: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    parentAssetId: ID

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  relationTraceEntries(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int
    includeComplexRelationTypes: Boolean = false

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    searchString: String
    targetAssetTypeId: ID
  ): [RelationTraceEntry]
  relationType(
    """The id of the relation type to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): RelationType
  relationTypeAssignedToAsset(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """The id of the asset the relations should start from."""
    assetId: ID!

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the relation type the relations should have."""
    relationTypeId: ID!

    """The id of the asset the attributes should be part of."""
    roleDirection: RelationTypeDirection!
  ): RelationTypeAssignedToAsset
  relationTypeExists(
    """The co-role of the argument to check"""
    coRole: String

    """Indicates the directive to include or skip."""
    if: Boolean

    """The role of the argument to check"""
    role: String

    """The ID of the source assetType"""
    sourceId: String

    """The ID of the target assetType"""
    targetId: String
  ): Boolean
  relationTypeTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  relationTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """The coRole of the relationTypes to find"""
    coRole: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The role of the relationTypes to find"""
    role: String

    """
    Logical operator used for filtering on role and coRole at the same time
    """
    roleCoRoleLogicalOperator: LogicalOperator = AND
  ): RelationTypeConnection
  relationTypesById(
    """The list of ids of the relation types to retrieve."""
    ids: [ID]!

    """
    If true, no exception will be thrown when relation type does not exist.
    """
    ignoreExceptionIfNotFound: Boolean = false
  ): [RelationType]
  relations(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    The optional formula for joining the source and target fields, can be AND or OR.  OR by default
    """
    formula: LogicalOperator = OR

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    id of relation type if we want to filter on relations of a certain type
    """
    relationTypeId: ID

    """The id of the source the relations should be part of."""
    sourceId: ID

    """The id of the target the relations should be part of."""
    targetId: ID
  ): RelationConnection
  removeAttributeTypeConfirmation(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The id of the type which is about to be remove."""
    typeId: ID!
  ): RemoveAttributeTypeConfirmation
  removeComplexRelationTypeConfirmation(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The id of the type which is about to be remove."""
    typeId: ID!
  ): RemoveComplexRelationTypeConfirmation
  removeRelationTypeConfirmation(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The id of the type which is about to be remove."""
    typeId: ID!
  ): RemoveRelationTypeConfirmation
  resourceRoleTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  responsibilities(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int
    includeInherited: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    ownerIds: [ID]
    resourceIds: [ID]
    roleIds: [ID]

    """
    The enumeration for a SortField. Possible values are: CREATED_BY CREATED_ON LAST_MODIFIED
    """
    sortField: String = "CREATED_ON"

    """Specifies the order for the attachments.  Can be either 'ASC or 'DESC"""
    sortOrder: String = "ASC"

    """
    The enumeration for a TypeMatchMode. Possible values are: ALL GLOBAL RESOURCE
    """
    type: String
  ): ResponsibilityConnection
  responsibility(
    """The id of the responsibility to retrieve."""
    id: ID!
  ): Responsibility
  role(
    """The id of the role to retrieve."""
    id: ID!
  ): Role
  roles(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """The description of the roles to find."""
    description: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    An optional boolean indicating whether we are looking for global (true) or resource (false) roles
    """
    global: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the roles to find."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): RoleConnection
  rolesById(
    """The list of ids of the roles to retrieve."""
    ids: [ID]!
  ): [Role]

  """s3 capabilities query."""
  s3EdgeCapabilities: [EdgeCapability]
  schemaPropertiesData(input: FindSchemaPropertiesForDatabaseRequest): SchemaPropertiesDataConnection
  scope(
    """The id of the resource to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): Scope
  scopeTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  scopes: [Scope]
  search(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String
    facets: [SearchRequestFacet]
    fields: [String]
    filter: SearchFilter!

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """If true, highlight functionality will be enabled."""
    highlight: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    order: SearchOrder!

    """If present, predefined set of filters will be applied"""
    predefinedFilter: ID

    """The actual query to execute"""
    searchQuery: String

    """If true, all the parents will be returned for each result element."""
    withParents: Boolean
  ): SearchResponseWithFacets
  searchAssets(
    """The ids of the communities this asset should be in."""
    communityIds: [ID]

    """The ids of the domains this asset should be in."""
    domainIds: [ID]

    """
    Although ignored in search, accepting this parameter is critical for supporting Relay paging
    """
    first: Int = 100

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The full name or display name of the asset to search for."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The list of ids of the asset type these assets should have."""
    typeIds: [ID]

    """
    If true, also the children of the asset types in the typeId parameter will be considered.  Default value is true
    """
    typeInheritance: Boolean = true
  ): AssetConnection

  """Return only existing attribute types"""
  searchAttributeTypesById(
    """The list of ids of the attribute types to retrieve."""
    ids: [ID]!
  ): [AttributeType]

  """
  Search configuration that relates to data and metamodel (non-administrative).
  """
  searchConfiguration: SearchConfiguration
  searchDomainsForCreateAsset(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """The assetTypeIds"""
    assetTypeIds: [ID]!

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the domain to find."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): DomainConnection
  searchElement: SearchResultElement

  """All fields (attribute types) where you can search"""
  searchField: SearchFieldTypeProvider
  searchPermittedCommunities(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the community to find."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """Permission to check against."""
    permission: Permission
  ): CommunityConnection
  searchPermittedCommunitiesForMove(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """The ID of the community that will be moved"""
    communityToMoveId: ID!

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the community to find."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """Permission to check against."""
    permission: Permission
  ): CommunityConnection
  searchPermittedDomains(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the domain to find."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """Permission to check against."""
    permission: Permission
  ): DomainConnection

  """Lists the views of type SEARCH that are public or shared with a role."""
  searchViews(
    """
    Filter on who the view is shared with, either the everyone group id or a role id
    """
    name: ID

    """
    Filter on who the view is shared with, either the everyone group id or a role id
    """
    sharedWithFilter: ID

    """The field on which we want to sort the views."""
    sortField: SharedViewSortField = SHARED_WITH

    """The order in which the views should be sorted."""
    sortOrder: SortOrder = ASC
  ): [View]
  serviceConfiguration: ServiceConfiguration
  siteTypeAssetPair(
    """The id of the Tableau Server Asset."""
    serverAssetId: ID!
  ): [SiteTypeAssetPair]
  status(
    """The id of the resource to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): Status
  statusExists(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The name of the status to check"""
    name: String
  ): Boolean
  statusTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  statuses(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String
    description: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): StatusConnection
  statusesById(
    """The list of ids of the statuses to retrieve."""
    ids: [ID]!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): [Status]
  systemActions: SystemActions
  systemInfo: SystemInfo
  tableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    ISO 8601 time offset to be applied for date filters (createdOn, lastModifiedOn). If not set, no offset is applied.
    """
    timeOffset: String

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String

  """Get table rules by schemaSyncId"""
  tableRules(databaseSchemaSyncId: ID!): [TableRule]

  """
  Lists the number of regular (not global or application) views of type
  ASSETTABLE or DOMAINTABLE that are public or shared with a role with a
  domain/community hierarchy.
  """
  tableViews(
    """Filter on community name or domain name"""
    organization: String

    """The order in which the results should be sorted."""
    sortOrder: SortOrder = ASC
  ): [CommunityOrDomainWithNumberOfViews]

  """
  Lists the regular (not global or application) views of type ASSETTABLE or
  DOMAINTABLE that are public or shared with a role and assigned to the given
  community or domain.
  """
  tableViewsForOrganization(
    communityId: ID
    domainId: ID

    """
    Filter on who the view is shared with, either the everyone group id or a role id
    """
    name: ID

    """
    Filter on who the view is shared with, either the everyone group id or a role id
    """
    sharedWithFilter: ID

    """The field on which we want to sort the views."""
    sortField: SharedViewSortField = SHARED_WITH

    """The order in which the views should be sorted."""
    sortOrder: SortOrder = ASC
  ): [View]
  tag(
    """The id of the tag to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): Tag
  tagTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  tags(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the tag to find."""
    name: String

    """The name match mode"""
    nameMatchMode: MatchMode = ANYWHERE

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): TagConnection
  targetDomains(
    """The name of the domain to find"""
    name: String
  ): [Domain]
  taskFormData(
    """the form type to be returned"""
    formPropertyType: String

    """The id of the workflow task."""
    taskId: ID!
  ): TaskFormData

  """
  Tests whether a connection can be established between a database or database schema and the JobServer
  """
  testInitialJdbcConnection(input: TestInitialJdbcConnectionRequest): ConnectionTestResult

  """
  Tests whether a connection can be established between a database or database
  schema and the JobServer when we are refreshing a data source
  """
  testRefreshingJdbcConnection(input: TestRefreshingJdbcConnectionRequest): ConnectionTestResult
  topLevelAssetTypes: [AssetType]
  topLevelCommunities: [Community]
  topLevelDomainTypes: [DomainType]
  uiConfiguration: UIConfiguration
  user(
    """The id of the user to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): User
  userGroup(
    """The id of the user group to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): UserGroup
  userGroups(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the user to find."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): UserGroupConnection
  userGroupsById(
    """The list of ids of the user groups to retrieve."""
    ids: [ID]!
  ): [UserGroup]
  userGroupsTableWithoutUserOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  userTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String
  users(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """The id of the group this user should belong to.."""
    groupId: ID

    """Indicates the directive to include or skip."""
    if: Boolean

    """If true, also disabled users will be included."""
    includeDisabled: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the user to find."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): UserConnection
  usersById(
    """The list of ids of the users to retrieve."""
    ids: [ID]!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): [User]
  usersOrGroupsById(
    """The list of ids of the user or usergroups to retrieve."""
    ids: [ID]!
  ): [UserOrUserGroup]
  usersOrUserGroups(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Whether to include system users and groups"""
    includeSystem: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The non-case-sensitive name to match users or user groups for."""
    name: String!

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): UserOrUserGroupConnection
  validationResultTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the view to retrieve the output for."""
    viewId: ID!
  ): String

  """
  Finds the validation results matching the criteria passed as arguments on this node.
  """
  validationResults(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    The identifier of the asset for which we are trying to find validation results.
    """
    assetId: ID

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    Indicates we want to find the ValidationResults related to the most recent execution
    """
    mostRecentExecution: Boolean

    """
    Indicates we want to find the ValidationResults related to the most recent job
    """
    mostRecentJob: Boolean

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    Indicates we want to find the ValidationResults that have a positive/negative outcome
    """
    result: Boolean
  ): ValidationResultConnection
  version: String
  view(
    """The id of the view to retrieve."""
    id: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): View
  views(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The location the views should have."""
    location: String!

    """The name the views should have."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the resource we should be looking the views for."""
    resourceId: ID

    """The field on which we want to sort the views."""
    sortField: ViewSortField = NAME

    """The order in which the views should be sorted."""
    sortOrder: SortOrder = ASC

    """
    The enumeration for a ViewType. Possible values are: DASHBOARD SEARCH
    ASSETTABLE COMMUNITYDOMAINTREE DOMAINTABLE DIAGRAM STATUSTABLE
    RELATIONTYPETABLE DOMAINTYPETABLE ASSETTYPETABLE ATTRIBUTETYPETABLE
    COMPLEXRELATIONTYPETABLE DATAQUALITYRULETABLE VALIDATIONRESULTTABLE
    SCOPETABLE ADVANCEDDATATYPETABLE DIAGRAMPICTURETABLE USERTABLE
    USERGROUPSTABLE TAGTABLE GLOBALROLETABLE RESOURCEROLETABLE
    GLOBALPERMISSIONSTABLE RESOURCEPERMISSIONSTABLE
    """
    type: String = "ASSETTABLE"
  ): ViewConnection
  workflowApiV2Compatible(
    """The id of workflow to check api v2 compatibility."""
    workflowId: ID!
  ): Boolean
  workflowDefinition(
    """The id of the workflow definition to retrieve."""
    id: ID!
  ): WorkflowDefinition
  workflowDefinitions(
    """Represents the search criteria to find workflow definitions."""
    input: FindWorkflowDefinitionsRequest
  ): WorkflowDefinitionConnection
  workflowInstances(
    """
    The ID of the business item that should be contained by the searched workflows
    """
    businessItemId: ID

    """
    The display name of the business item that should be contained by the searched workflows
    """
    businessItemName: String

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The ID of the parent workflow instance"""
    parentWorkflowInstanceId: ID

    """The field on which we would like the sorting to apply"""
    sortField: WorkflowInstanceSortField = START_DATE

    """Specifies the order for the instances. Can be either 'ASC' or 'DESC'"""
    sortOrder: SortOrder = ASC

    """The ID of the workflow definition"""
    workflowDefinitionId: ID
  ): WorkflowInstanceConnection
  workflowStartEvents: [NamedDescribedWorkflowStartEventType]
  workflowStartFormJsonModel(
    """The id of the workflow definition."""
    workflowDefinitionId: ID!
  ): String
  workflowTask(
    """The id of the workflow task to retrieve."""
    id: ID!
  ): WorkflowTask
  workflowTasks(
    """Represents the search criteria to find workflow tasks."""
    input: FindWorkflowTasksRequest
  ): WorkflowTaskConnection
  workflowTasksById(
    """The list of ids of the workflow tasks to retrieve."""
    ids: [ID]!
  ): [WorkflowTask]
  workflows(
    """Represents the search criteria to find the workflows"""
    input: FindWorkflowsRequest
  ): [Workflow]
  workflowsById(
    """The list of ids of the workflows to retrieve."""
    ids: [ID]!
  ): [Workflow]
}

"""
The enumeration for a ApplicationType. Possible values are: BUSINESS_GLOSSARY
REFERENCE_DATA CATALOG DATA_HELPDESK POLICY_MANAGER STEWARDSHIP
"""
enum ApplicationType {
  BUSINESS_GLOSSARY
  CATALOG
  DATA_HELPDESK
  POLICY_MANAGER
  REFERENCE_DATA
  STEWARDSHIP
}

type ApplicationTypeWithViewCount implements node {
  id: ID
  name: String
  nbViews: Int
}

"""
The enumeration for a ArticulationOperation. Possible values are: ADD SET
"""
enum ArticulationOperation {
  ADD
  SET
}

"""
The ArticulationRule type.  Contains all the ArticulationRule information
"""
type ArticulationRule implements node {
  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The operation of the ArticulationRule"""
  operation: ArticulationOperation

  """
  The resource of the ArticulationRule.  This can be a NamedResourceReference sourced by AttributeType or a Status
  """
  resource: NamedResourceReference

  """The scope of the articulationRule"""
  score: Double

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

input ArticulationRuleRequest {
  attributeTypeId: ID

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The id of the articulation rule that should be provided on change."""
  id: ID
  operation: ArticulationOperation!
  score: Float!
  statusId: ID
}

type Asset implements WithWorkflowTasks & node {
  allClassesForAsset: [ClassificationClass]

  """The articulation score of this Asset"""
  articulationScore: Double

  """Asset Attributes"""
  assetAttributes(
    """The list of id of attribute types the found attributes should have. """
    typeIds: [ID]
  ): [Attribute]
  assignedStatuses(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): [Status]
  assignment(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): Assignment
  attachments(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String
    fileContentType: String
    fileName: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    scanState: String

    """
    The enumeration for a SortField. Possible values are: FILE_CONTENT_TYPE
    CREATED_BY FILE_NAME CREATED_ON BASE_RESOURCE_ID LAST_MODIFIED
    """
    sortField: String = "CREATED_ON"

    """Specifies the order for the attachments.  Can be either 'ASC or 'DESC"""
    sortOrder: String = "ASC"
    uploadDate: Long
    userId: ID
  ): AttachmentConnection
  attributeRelationAndComplexRelationTypesAssignedToAsset: [node]
  attributeTypeAssignedToAsset(
    """
    The id of the attribute type for which we want the AttributeTypeAssignedToAsset
    """
    attributeTypeId: String!
  ): AttributeTypeAssignedToAsset
  attributeTypesAssignedToAsset: [AttributeTypeAssignedToAsset]
  attributes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """The id of the asset the attributes should be part of."""
    assetId: ID

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The list of id of attribute types the found attributes should have. """
    typeIds: [ID]
  ): AttributeConnection

  """The average rating of this Asset"""
  avgRating: Double
  breadcrumb: [NamedResourceReference]
  breadcrumbRelations(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): [AssetBreadcrumb]

  """Returns business context of table asset."""
  businessContext: BusinessContext

  """Catalog foreign credential query."""
  catalogForeignCredential: ForeignCredential

  """Relations table with catalog view location"""
  catalogViewRelationTypeAssignedToAsset(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The id of the relation type the relations should have."""
    relationTypeId: String

    """The enumeration for a role assigned to asset."""
    roleDirection: RelationTypeDirection
  ): CatalogViewRelationTypeAssignedToAsset

  """Data for chart rendering."""
  chartData(chartType: ChartType): [ChartData]
  classesForAsset: [ClassificationClass]
  comments(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The optional id of the parent comment to get the replies from."""
    parentId: ID

    """
    A boolean value indicating whether we are looking for Root comments or not
    """
    rootComment: Boolean

    """
    Specifies the order for the comments (by creation date). Can be either 'ASC or 'DESC
    """
    sortOrder: String = "ASC"

    """The optional id of the user to get the comments from.."""
    userId: ID
  ): CommentConnection
  complexRelationTypeAssignedToAsset(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """The id of the complex relation type the complex relations should have."""
    complexRelationTypeId: ID!

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): ComplexRelationTypeAssignedToAsset
  complexRelationTypesAssignedToAsset: [ComplexRelationTypeAssignedToAsset]

  """Retrieve the number of DiagramPictures for the given asset."""
  countDiagramPicturesForAsset(
    """the id of the Asset"""
    assetId: ID

    """Indicates the directive to include or skip."""
    if: Boolean
  ): Long
  crawlers(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): CrawlerConnection

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The rating of this Asset according to the current user"""
  currentUserRating: Rating

  """Data profiling relation"""
  dataProfilingRelationTypeAssignedToAsset(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The id of the relation type the relations should have."""
    relationTypeId: String!

    """The enumeration for a role assigned to asset."""
    roleDirection: RelationTypeDirection!
  ): DataProfilingRelationTypeAssignedToAsset

  """Samples of data."""
  dataSample: DataSample

  """Top data sets matching the asset"""
  dataSetMatches(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): AssetConnection

  """Data type matches for given asset."""
  dataTypeMatches: [DataTypeMatch]

  """The display name of this Asset"""
  displayName: String

  """The Domain of the Asset."""
  domain: Domain

  """
  Indicates whether or not this Asset should be excluded from auto hyperlinking.
  """
  excludedFromAutoHyperlinking: Boolean

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """Finds the most recent validation job for the selected Asset"""
  mostRecentValidationJob: Job

  """The Name of the Object"""
  name: String

  """The Parent of the Asset."""
  parent: Asset
  ratingDistribution(
    """The count of maximum number of stars which can be used for rating"""
    chunks: Int!
  ): [RatingDistribution]
  ratings(limit: Int, offset: Int, sortOrder: SortOrder = DESC): RatingConnection

  """The ratings count of this Asset"""
  ratingsCount: Int
  relationTypeAssignedToAsset(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The id of the relation type the relations should have."""
    relationTypeId: ID!

    """The id of the asset the attributes should be part of."""
    roleDirection: RelationTypeDirection!
  ): RelationTypeAssignedToAsset
  relationTypesAssignedToAsset: [RelationTypeAssignedToAsset]
  relations(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    id of relation type if we want to filter on relations of a certain type
    """
    relationTypeId: ID
  ): RelationConnection
  responsibilities(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int
    includeInherited: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    ownerIds: [ID]
    roleIds: [ID]

    """
    The enumeration for a SortField. Possible values are: CREATED_BY CREATED_ON LAST_MODIFIED
    """
    sortField: String = "CREATED_ON"

    """Specifies the order for the attachments.  Can be either 'ASC or 'DESC"""
    sortOrder: String = "ASC"

    """
    The enumeration for a TypeMatchMode. Possible values are: ALL GLOBAL RESOURCE
    """
    type: String
  ): ResponsibilityConnection

  """s3 configuration query."""
  s3Configuration: S3Configuration

  """s3 foreign credential query."""
  s3ForeignCredential: S3ForeignCredential

  """s3 schedule query."""
  s3Schedule: Schedule
  siteTypeAssetPair: [SiteTypeAssetPair]

  """The Status of the Asset"""
  status: Status

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean

  """tableau schedule query."""
  tableauSchedule: TableauSchedule
  tags: [Tag]

  """
  Returns technical data type struct attribute value in json format for this asset.
  """
  technicalDataTypeAsJson(
    """Id of the technical data type attribute assigned to this asset."""
    technicalDataTypeAttributeId: ID!
  ): StructAsJsonResult

  """
  Returns information about technical lineage configuration and if technical lineage can be accessed for current asset.
  """
  technicalLineageConfig: TechnicalLineageConfig

  """The AssetType of the Asset"""
  type: AssetType

  """
  Finds the validation results matching the criteria passed as arguments on this node.
  """
  validationResults(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    Indicates we want to find the ValidationResults related to the most recent execution
    """
    mostRecentExecution: Boolean

    """
    Indicates we want to find the ValidationResults related to the most recent job
    """
    mostRecentJob: Boolean

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    Indicates we want to find the ValidationResults that have a positive/negative outcome
    """
    result: Boolean
  ): ValidationResultConnection

  """Returns the validation status of an asset"""
  validationStatus: ValidationStatus
  viewPermissions(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int
    includeInherited: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): ViewPermissionConnection
  views(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The location the views should have."""
    location: String!

    """The name the views should have."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The field on which we want to sort the views."""
    sortField: ViewSortField = NAME

    """The order in which the views should be sorted."""
    sortOrder: SortOrder = ASC

    """
    The enumeration for a ViewType. Possible values are: DASHBOARD SEARCH
    ASSETTABLE COMMUNITYDOMAINTREE DOMAINTABLE DIAGRAM STATUSTABLE
    RELATIONTYPETABLE DOMAINTYPETABLE ASSETTYPETABLE ATTRIBUTETYPETABLE
    COMPLEXRELATIONTYPETABLE DATAQUALITYRULETABLE VALIDATIONRESULTTABLE
    SCOPETABLE ADVANCEDDATATYPETABLE DIAGRAMPICTURETABLE USERTABLE
    USERGROUPSTABLE TAGTABLE GLOBALROLETABLE RESOURCEROLETABLE
    GLOBALPERMISSIONSTABLE RESOURCEPERMISSIONSTABLE
    """
    type: String = "ASSETTABLE"
  ): ViewConnection
  workflowTasks(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): WorkflowTaskConnection
  workflows: [Workflow]
}

type AssetAssignmentRule implements node {
  """the asset type that this workflow configuration applies to"""
  assetType: NamedResourceReference

  """the community this workflow definition applies to"""
  community: NamedResourceReference

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """the domain this workflow definition applies to"""
  domain: NamedResourceReference

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """the status this workflow definition applies to"""
  status: NamedResourceReference

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type AssetBreadcrumb {
  """acronym for the asset."""
  acronym: String

  """UUID of the asset"""
  assetId: ID

  """The Name of the Object"""
  assetName: String

  """icon code for the asset."""
  iconCode: String

  """selected symbol type"""
  symbolType: String
}

type AssetConnection {
  edges: [AssetEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type AssetEdge {
  cursor: String!
  node: Asset
}

"""The enumeration for a AssetPermission. Possible values are: CREATE"""
enum AssetPermission {
  CREATE
}

type AssetReference implements node {
  """The displayName of the asset"""
  displayName: String

  """The unique identifier"""
  id: ID

  """The Name of the Object"""
  name: String
  resourceType: ResourceType
}

"""
The enumeration for a SortField. Possible values are: NAME DISPLAY_NAME
"""
enum AssetSortField {
  DISPLAY_NAME
  NAME
}

type AssetType implements node {
  assignableComplexRelationTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): AssignableComplexRelationTypeConnection
  assignableRelationTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): AssignableRelationTypeConnection
  assignedAttributeTypes(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The optional name filtering argument"""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    The view id, if passed we will do a 'best effort' to take the view filtering into account when searching for assetTypes.
    """
    viewId: ID
  ): AttributeTypeConnection
  assignments: [Assignment]
  breadcrumb: [NamedResourceReference]

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The description of the Object"""
  description: String
  directAssignments: [Assignment]
  displayNameEnabled: Boolean
  hasDirectAssignments: Boolean
  hasSpecializedTypeWithInheritedAssignment: Boolean

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The main role"""
  mainRole: Role

  """The Name of the Object"""
  name: String
  parent: AssetType
  ratingEnabled: Boolean
  subTypes(
    """
    When set to true, the parent node will be included in the result. Otherwise only the subtypes will be returned
    """
    includeParent: Boolean = false
  ): [AssetType]
  symbolData: SymbolData

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type AssetTypeConnection {
  edges: [AssetTypeEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type AssetTypeEdge {
  cursor: String!
  node: AssetType
}

"""
The enumeration for a AssetTypeSymbolType. Possible values are: NONE ICON_CODE ACRONYM_CODE
"""
enum AssetTypeSymbolType {
  ACRONYM_CODE
  ICON_CODE
  NONE
}

type AssignableComplexRelationType {
  complexRelationType: ComplexRelationType
  matchingLegTypesIds: [ID]
}

type AssignableComplexRelationTypeConnection {
  edges: [AssignableComplexRelationTypeEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type AssignableComplexRelationTypeEdge {
  cursor: String!
  node: AssignableComplexRelationType
}

type AssignableRelationType {
  direction: RelationTypeDirection
  relationType: RelationType
}

type AssignableRelationTypeConnection {
  edges: [AssignableRelationTypeEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type AssignableRelationTypeEdge {
  cursor: String!
  node: AssignableRelationType
}

type AssignedAttributeType implements AssignedCharacteristicType & node {
  attributeType: AttributeType

  """The unique identifier"""
  id: ID
  max: Int
  min: Int
  readOnly: Boolean

  """
  System set to true means that characteristic type cannot be unassigned.
  """
  system: Boolean
}

interface AssignedCharacteristicType {
  """The unique identifier"""
  id: ID
  max: Int
  min: Int
  readOnly: Boolean

  """
  System set to true means that characteristic type cannot be unassigned.
  """
  system: Boolean
}

type AssignedComplexRelationType implements AssignedCharacteristicType & node {
  complexRelationType: ComplexRelationType

  """The unique identifier"""
  id: ID
  matchingLegTypesIds: [ID]
  max: Int
  min: Int
  readOnly: Boolean

  """
  System set to true means that characteristic type cannot be unassigned.
  """
  system: Boolean
}

type AssignedRelationType implements AssignedCharacteristicType & node {
  """The unique identifier"""
  id: ID
  max: Int
  min: Int
  readOnly: Boolean
  relationType: RelationType
  roleDirection: RelationTypeDirection

  """
  System set to true means that characteristic type cannot be unassigned.
  """
  system: Boolean
}

type AssignedRelationTypeConnection {
  edges: [AssignedRelationTypeEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type AssignedRelationTypeEdge {
  cursor: String!
  node: AssignedRelationType
}

type Assignment implements node {
  articulationRules: [ArticulationRule]
  assetType: NamedResourceReference
  characteristicTypes: [AssignedCharacteristicType]

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long
  dataQualityRules: [NamedDescribedResourceReference]
  defaultStatusId: ID
  domainTypes: [NamedDescribedResourceReference]

  """Returns whether an assignment has articulation rules"""
  hasArticulationRules: Boolean

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  scope: NamedDescribedResourceReference
  statuses: [NamedDescribedResourceReference]

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
  validationRules: [ValidationRuleReference]
}

type assignmentKey {
  assetTypeId: ID
  assetTypeName: String
  assignmentId: ID
  scopeId: ID
}

type AssignScopeToOrganizationMutation {
  clientMutationId: String
}

input AssignScopeToOrganizationRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  organizationId: ID!
  scopeId: ID!
}

type Attachment implements node {
  antivirusVersion: String
  baseResourceId: ID

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long
  fileContentType: String
  fileId: ID
  fileName: String

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  lastScanDate: Long
  scanMessage: String
  scanState: String

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type AttachmentConnection {
  edges: [AttachmentEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type AttachmentEdge {
  cursor: String!
  node: Attachment
}

interface Attribute {
  asset: Asset
  createdBy: User
  createdOn: Long
  id: ID
  lastModifiedBy: User
  lastModifiedOn: Long
  system: Boolean
  type: AttributeType
}

type AttributeConnection {
  edges: [AttributeEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

input AttributeDefinition {
  attributeTypeId: ID!
  value: AttributeValue!
}

type AttributeEdge {
  cursor: String!
  node: Attribute
}

"""
The enumeration for a AttributeKind. Possible values are: BOOLEAN STRING NUMERIC
DATE SINGLE_VALUE_LIST MULTI_VALUE_LIST SCRIPT
"""
enum AttributeKind {
  BOOLEAN
  DATE
  MULTI_VALUE_LIST
  NUMERIC
  SCRIPT
  SINGLE_VALUE_LIST
  STRING
}

interface AttributeType {
  description: String
  id: ID
  name: String
  system: Boolean
}

type AttributeTypeAssignedToAsset implements node {
  """The assigned attribute type for this group"""
  assignedAttributeType: AssignedAttributeType

  """the attributes of the group"""
  attributes: [Attribute]
  id: ID

  """the maximum cardinality"""
  max: Int

  """the minimum cardinality"""
  min: Int
}

type AttributeTypeConnection {
  edges: [AttributeTypeEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type AttributeTypeEdge {
  cursor: String!
  node: AttributeType
}

input AttributeValue {
  booleanValue: Boolean
  doubleValue: Double
  longValue: Long
  stringList: [String]
  stringValue: String
}

type Banner {
  """banner is dismissed"""
  dismissed: Boolean

  """The unique identifier"""
  id: ID

  """banner content"""
  message: String

  """banner type"""
  type: BannerType
}

"""
The enumeration for a BannerType. Possible values are: TOP_BANNER BOTTOM_BANNER
"""
enum BannerType {
  BOTTOM_BANNER
  TOP_BANNER
}

type BaseDataType implements DataType & node {
  """The description of the Object"""
  description: String

  """The unique identifier"""
  id: ID

  """Logical data type of DataType"""
  logicalDataType: LogicalDataType

  """The Name of the Object"""
  name: String
}

type BooleanAttribute implements Attribute & node {
  asset: Asset
  booleanValue: Boolean
  createdBy: User
  createdOn: Long

  """The unique identifier"""
  id: ID
  lastModifiedBy: User
  lastModifiedOn: Long
  system: Boolean
  type: AttributeType
}

type BooleanAttributeType implements AttributeType & node {
  description: String

  """The unique identifier"""
  id: ID
  name: String

  """Indicates whether statistics are enabled or not"""
  statisticsEnabled: Boolean
  system: Boolean
}

input BulkChangeAttributeRequest {
  assetIds: [ID]
  attributeTypeId: ID

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  values: [AttributeValue]
}

type BulkChangeAttributesMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The job bulk changing the attributes."""
  job: Job
}

type BulkValidationMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The Job (a reference to the async validation process.)"""
  job: Job
}

type BusinessContext implements node {
  asset: Asset
  assetTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String

  """The assigned relation type"""
  assignedRelationType: AssignedRelationType
  businessContextForView(
    """Location of the view for which business context should be returned."""
    location: String
  ): BusinessContextForView

  """
  the maximum relation occurrences that can be added for the relation type before reaching minimum cardinality
  """
  cardinalityLimit: Int
  id: ID

  """Role direction for instance of assignedRelationType"""
  instanceRoleDirection: RelationTypeDirection

  """The view for table asset business context"""
  view: View
}

type BusinessContextForView {
  assetTableOutput(
    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String

  """The view for table asset business context."""
  view: View
}

"""
The enumeration for a BusinessItemType. Possible values are: ASSET DOMAIN COMMUNITY
"""
enum BusinessItemType {
  ASSET
  COMMUNITY
  DOMAIN
}

type CancelJob {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The updated job"""
  job: Job
}

input CancelJobRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The id of the job to cancel."""
  jobId: ID!

  """An optional message to specify the reason for cancelling."""
  message: String
}

"""
The enumeration for a CapabilityType. Possible values are: DATA_QUALITY JDBC_INGESTION JDBC_PROFILING LINEAGE OTHER S3
"""
enum CapabilityType {
  DATA_QUALITY
  JDBC_INGESTION
  JDBC_PROFILING
  LINEAGE
  OTHER
  S3
}

type CatalogForeignCredential implements ForeignCredential & node {
  id: ID
  serviceIdentifier: String
  user: String
}

type CatalogViewRelationTypeAssignedToAsset implements node {
  asset: Asset
  assetTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String

  """The assigned relation type"""
  assignedRelationType: AssignedRelationType

  """
  the maximum relation occurrences that can be added for the relation type before reaching minimum cardinality
  """
  cardinalityLimit: Int
  id: ID

  """Role direction for instance of assignedRelationType"""
  instanceRoleDirection: RelationTypeDirection

  """the maximum cardinality"""
  max: Int

  """the minimum cardinality"""
  min: Int

  """The view for the asset data profiling"""
  view: View
}

type ChangeAdvancedDataTypeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The advanced data type that has been changed."""
  dataType: AdvancedDataType
}

input ChangeAdvancedDataTypeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  description: String
  id: ID!
  name: String
  patterns: [String] = []
}

type ChangeAssetMutation {
  """The api"""
  api: ApiType

  """The asset that has been changed"""
  asset: Asset
  clientMutationId: String

  """The (new) domain of the asset."""
  domain: Domain
}

input ChangeAssetRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  displayName: String
  domainId: ID
  excludedFromAutoHyperlinking: Boolean
  id: ID!

  """The new full name for the asset."""
  name: String
  statusId: ID
  typeId: ID
}

type ChangeAssetsMutation {
  """The api"""
  api: ApiType

  """The asset that have been modified."""
  assets: [Asset]
  clientMutationId: String
}

input ChangeAssetsRequest {
  assetIds: [ID]!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The new display name for the assets."""
  displayName: String
  domainId: ID

  """The new full name for the assets."""
  name: String
  statusId: ID
  typeId: ID
}

type ChangeAssetTypeMutation {
  """The api"""
  api: ApiType

  """The asset type that has been created."""
  assetType: AssetType
  clientMutationId: String

  """The parent of the asset type"""
  parent: node
}

"""
The ChangeAssetTypeRequest Object: Contains all information for changing AssetTypes.
"""
input ChangeAssetTypeRequest {
  """The acronym code of the assetType that should be created"""
  acronymCode: String

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The color of the assetType that should be created"""
  color: String
  description: String

  """
  Flag indicating whether display name should be enabled for assets of this asset type
  """
  displayNameEnabled: Boolean

  """The code of the icon of the assetType that should be created"""
  iconCode: String
  id: ID!
  name: String
  parentAssetTypeId: ID

  """
  Flag indicating whether rating should be enabled for assets of this asset type
  """
  ratingEnabled: Boolean

  """The symbolType of the assetType that should be created"""
  symbolType: AssetTypeSymbolType
}

type ChangeAssignmentMutation {
  """The api"""
  api: ApiType

  """The Assignment that has been modified."""
  assignment: Assignment
  clientMutationId: String
}

input ChangeAssignmentRequest {
  """The ArticulationRules."""
  articulationRules: [ArticulationRuleRequest]
  assignmentId: ID!

  """The CharacteristicTypes."""
  characteristicTypes: [CharacteristicTypeAssignmentReference]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The IDs of the DataQualityRules."""
  dataQualityRuleIds: [ID]

  """The ID of the default Status."""
  defaultStatusId: ID

  """The IDs of the DomainTypes."""
  domainTypeIds: [ID]

  """The IDs of the Statuses."""
  statusIds: [ID]

  """The IDs of the ValidationRules."""
  validationRuleIds: [ID]
}

input ChangeAttributeOperation {
  attributeId: ID
  operation: ChangeAttributeOperationType!
  value: AttributeValue
}

"""
The enumeration for a ChangeAttributeOperationType. Possible values are: ADD DELETE REPLACE UPDATE
"""
enum ChangeAttributeOperationType {
  ADD
  DELETE
  REPLACE
  UPDATE
}

type ChangeAttributesMutation {
  """The api"""
  api: ApiType

  """The asset with the updated attributes"""
  asset: Asset
  clientMutationId: String
}

input ChangeAttributesRequest {
  assetId: ID
  attributeTypeId: ID

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  values: [AttributeValue]
}

type ChangeAttributeTypeMutation {
  """The api"""
  api: ApiType

  """The attribute type that has been added."""
  attributeType: AttributeType
  clientMutationId: String
}

input ChangeAttributeTypeRequest {
  allowedValues: [String]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  description: String
  id: ID!
  isInteger: Boolean
  language: String
  name: String
  statisticsEnabled: Boolean
}

input ChangeBooleanAttributeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
  value: Boolean!
}

type ChangeBooleanAttributeType {
  """The asset that contains the changed attribute."""
  asset: Asset

  """The changed attribute."""
  attribute: Attribute
  clientMutationId: String
}

type ChangeBusinessContextTableDefaultView {
  clientMutationId: String
  relationTypeAssignedToAsset: RelationTypeAssignedToAsset
}

input ChangeBusinessContextTableViewRequest {
  assetId: String!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  context: String!
}

type ChangeBusinessContextTableWorkingView {
  clientMutationId: String
  relationTypeAssignedToAsset: RelationTypeAssignedToAsset
}

type ChangeCatalogTableDefaultView {
  clientMutationId: String
  relationTypeAssignedToAsset: RelationTypeAssignedToAsset
}

type ChangeCatalogTableWorkingView {
  clientMutationId: String
  relationTypeAssignedToAsset: RelationTypeAssignedToAsset
}

type ChangeCommentMutation {
  """the asset temporary"""
  asset: Asset
  clientMutationId: String

  """The comment that has been changed"""
  comment: Comment

  """the parent of the comment"""
  parent: node
}

input ChangeCommentRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  content: String
  id: ID!
  mentionedUsers: [ID]
}

type ChangeCommunityMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The community that has been changed."""
  community: Community
}

input ChangeCommunityRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  description: String
  id: ID!
  name: String
  parentId: ID
  removeScopeOverlapOnMove: Boolean
}

type ChangeComplexRelationMutation {
  clientMutationId: String

  """The relation that has been added."""
  complexRelation: ComplexRelation

  """
  the parent asset, only available when the complexRelationTypeAssignedToAssetId
  was passed to the changeComplexRelation call
  """
  complexRelationTypeAssignedToAsset: ComplexRelationTypeAssignedToAsset

  """
  the parent asset, only available when the parentAssetId was passed to the changeComplexRelation call
  """
  parentAsset: Asset
}

input ChangeComplexRelationRequest {
  """the attributes for the complex relation"""
  attributes: [ComplexRelationAttributeRequest]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The ID of the ComplexRelation we would like to change"""
  id: ID!

  """the legs for the complex relation"""
  legs: [ComplexRelationLegRequest]

  """The ID of the parent Asset we  would like in the return type"""
  parentAssetId: ID
}

input ChangeComplexRelationTableViewRequest {
  assetId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  complexRelationTypeId: ID!
  content: String!
}

type ChangeComplexRelationTableWorkingView {
  """The updated complex relation group"""
  assetComplexRelationGroup: ComplexRelationTypeAssignedToAsset
  clientMutationId: String
}

type ChangeComplexRelationTypeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The complex relation type"""
  complexRelationType: ComplexRelationType
}

input ChangeComplexRelationTypeRequest {
  """The acronym code of the complexRelationType that should be created"""
  acronymCode: String

  """The attribute types of the complex relation type."""
  attributeTypes: [ComplexRelationAttributeTypeRequest]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The color of the complexRelationType"""
  color: String
  description: String

  """The code of the icon of the complexRelationType that should be created"""
  iconCode: String
  id: ID!

  """The legs of the complex relation type."""
  legTypes: [ComplexRelationLegTypeRequest]
  name: String

  """The symbolType of the complexRelationType that should be created"""
  symbolType: AssetTypeSymbolType
}

type ChangeDatabaseMutation {
  clientMutationId: String

  """The database configuration"""
  databaseConfiguration: DatabaseConfiguration
}

input ChangeDatabaseRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The community id"""
  communityId: ID

  """the database description"""
  description: String

  """the edge datasource id"""
  edgeDataSourceId: ID

  """the database id"""
  id: ID!

  """the database name"""
  name: String

  """the owners of the database"""
  ownerIds: [ID]

  """The parent system id"""
  parentSystemId: ID
}

type ChangeDataProfilingTableDefaultView {
  clientMutationId: String
  relationTypeAssignedToAsset: RelationTypeAssignedToAsset
}

type ChangeDataProfilingTableWorkingView {
  clientMutationId: String
  relationTypeAssignedToAsset: RelationTypeAssignedToAsset
}

type ChangeDataQualityRuleMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The data quality rule that has been modified."""
  dataQualityRule: DataQualityRule
}

input ChangeDataQualityRuleRequest {
  categorizationRelationTypeId: ID

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  dataQualityMetrics: [DataQualityMetricRequest]
  description: String
  id: ID!
  name: String
  relationTraceEntries: [RelationTraceEntryRequest]
}

input ChangeDateAttributeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
  value: Long!
}

type ChangeDateAttributeType {
  """The asset that contains the changed attribute."""
  asset: Asset

  """The changed attribute."""
  attribute: Attribute
  clientMutationId: String
}

type ChangeDefaultComplexRelationTableView {
  """The updated complex relation group"""
  assetComplexRelationGroup: ComplexRelationTypeAssignedToAsset
  clientMutationId: String
}

type ChangeDefaultRelationTableView {
  clientMutationId: String

  """The updated relation group"""
  relationTypeAssignedToAsset: RelationTypeAssignedToAsset
}

type ChangeDiagramPictureMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The diagram picture."""
  diagramPicture: DiagramPicture
}

"""The change diagram picture request object."""
input ChangeDiagramPictureRequest {
  """The id of the Asset for which the Diagram Picture was taken"""
  assetId: ID

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The configuration of the Diagram Picture"""
  config: String

  """The flag to indicate if the picture is the default one"""
  default: Boolean

  """The description of the Diagram Picture"""
  description: String

  """The id of the DiagramPicture that was changed"""
  id: ID

  """The name of the Diagram Picture"""
  name: String

  """The flag to indicate if the picture should be pinned or not"""
  preferred: Boolean

  """The sharing rules"""
  sharingRules: [SharingRuleRequest]

  """The svg of the Diagram Picture"""
  svg: String
}

type ChangeDomainMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The domain that has been changed."""
  domain: Domain
}

input ChangeDomainRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  communityId: ID
  description: String
  excludedFromAutoHyperlinking: Boolean
  id: ID!
  name: String
  removeScopeOverlapOnMove: Boolean
  typeId: ID
}

type ChangeDomainTypeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The domain type."""
  domainType: DomainType

  """The parent of the domain type."""
  parent: node
}

input ChangeDomainTypeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  description: String
  id: ID!
  name: String

  """The ID of the parent DomainType."""
  parentDomainTypeId: ID
}

type ChangeJobsVisibilities {
  """The api"""
  api: ApiType
  clientMutationId: String
}

input ChangeJobsVisibilitiesRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The ids of the jobs to change the visibility for."""
  jobIds: [ID]!

  """The new visibility for the jobs. True for visible jobs."""
  visibility: Boolean!
}

type ChangeJobVisibility {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The updated job"""
  job: Job
}

input ChangeJobVisibilityRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The id of the job to change the visibility for."""
  jobId: ID!

  """The new visibility for the job. True for a visible job."""
  visibility: Boolean!
}

type ChangeMultiAttributesMutation {
  """The api"""
  api: ApiType

  """The asset with the updated attributes"""
  asset: Asset
  clientMutationId: String
}

input ChangeMultiValueListAttributeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
  value: [String]
}

type ChangeMultiValueListAttributeType {
  """The asset that contains the changed attribute."""
  asset: Asset

  """The changed attribute."""
  attribute: Attribute
  clientMutationId: String
}

input ChangeNumericAttributeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
  value: Double!
}

type ChangeNumericAttributeType {
  """The asset that contains the changed attribute."""
  asset: Asset

  """The changed attribute."""
  attribute: Attribute
  clientMutationId: String
}

type ChangeRatingMutation {
  """The asset to which changed rating is assigned."""
  asset: Asset
  clientMutationId: String

  """The rating that has been changed."""
  rating: Rating
}

"""The request object to change rating"""
input ChangeRatingRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """Id of the rating"""
  id: ID!

  """New rating value"""
  rating: Float!

  """New review value"""
  review: String
}

type ChangeRelationMutation {
  clientMutationId: String

  """The relation that has been changed."""
  relation: Relation
}

input ChangeRelationRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  endingDate: Long
  id: String!
  sourceId: ID
  startingDate: Long
  targetId: ID
}

input ChangeRelationTableViewRequest {
  assetId: String!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  content: String!
  relationTypeId: String!
  roleDirection: RelationTypeDirection!
}

type ChangeRelationTableWorkingView {
  clientMutationId: String

  """The updated relation group"""
  relationTypeAssignedToAsset: RelationTypeAssignedToAsset
}

type ChangeRelationTypeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The co-role of the relation type"""
  coRole: String

  """The description of the relation type."""
  description: String

  """The relation type that has been modified."""
  relationType: RelationType

  """The role of the relation type."""
  role: String
}

input ChangeRelationTypeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  coRole: String
  description: String
  id: ID!
  role: String
  sourceType: ID
  targetType: ID
}

type ChangeRoleMutation {
  clientMutationId: String

  """The roles that was changed."""
  role: Role
}

input ChangeRoleRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The description of the role to change."""
  description: String

  """The id of the role to change."""
  id: ID!

  """The name of the role to change."""
  name: String
}

type ChangeS3ConfigurationMutation {
  clientMutationId: String

  """The updated S3 configuration"""
  s3Configuration: S3Configuration
}

input ChangeS3ConfigurationRequest {
  """Access key id"""
  accessKey: String

  """Edge capability id"""
  capabilityId: ID

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!

  """Job Server instance"""
  jobServer: String

  """IAM Role"""
  role: String

  """Secret access key"""
  secretAccessKey: [Char]
}

type ChangeS3CrawlerMutation {
  """The api"""
  api: ApiType

  """The S3 File System asset"""
  asset: Asset
  clientMutationId: String
}

type ChangeS3ForeignCredentialMutation {
  clientMutationId: String

  """The updated S3 credentials."""
  s3ForeignCredential: S3ForeignCredential
}

input ChangeS3ForeignCredentialRequest {
  """
  the asset type id for to define if is it s3 filesystem or tableau server or...
  """
  assetTypeId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!

  """Secret key"""
  password: [Char]!

  """IAM Role"""
  role: String

  """Access key"""
  user: String!
}

type ChangeS3ScheduleMutation {
  clientMutationId: String

  """The updated S3 configuration"""
  s3Schedule: Schedule
}

input ChangeS3ScheduleRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  cronExpression: String
  cronJson: String
  cronTimeZone: String

  """The S3 File System asset id"""
  fileSystemAssetId: ID!
}

type ChangeScopeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """Updated scope"""
  scope: Scope
}

input ChangeScopeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The changed list of Community IDs of the Scope"""
  communityIds: [ID]
  description: String

  """The changed list of Domain IDs of the Scope"""
  domainIds: [ID]
  id: ID!
  name: String
}

input ChangeScriptAttributeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
  value: String!
}

type ChangeScriptAttributeType {
  """The asset that contains the changed attribute."""
  asset: Asset

  """The changed attribute."""
  attribute: Attribute
  clientMutationId: String
}

input ChangeSingleValueListAttributeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
  value: String!
}

type ChangeSingleValueListAttributeType {
  """The asset that contains the changed attribute."""
  asset: Asset

  """The changed attribute."""
  attribute: Attribute
  clientMutationId: String
}

type ChangeStatusMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The status that has been modified."""
  status: Status
}

input ChangeStatusRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  description: String
  id: ID!
  name: String
}

input ChangeStringAttributeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
  value: String!
}

type ChangeStringAttributeType {
  """The asset that contains the changed attribute."""
  asset: Asset

  """The changed attribute."""
  attribute: Attribute
  clientMutationId: String
}

type ChangeTableauScheduleMutation {
  clientMutationId: String

  """The updated tableau sever configuration"""
  tableauSchedule: TableauSchedule
}

input ChangeTableauScheduleRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  cronExpression: String
  cronTimeZone: String

  """The tableau server asset id"""
  tableauServerId: ID!
}

type ChangeTableauServerCredentialMutation {
  """Foreign credential that was changed."""
  catalogForeignCredential: TableauForeignCredential
  clientMutationId: String
}

input ChangeTableauServerCredentialRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
  jobServer: String
  password: [Char]!

  """Tableau server url"""
  serviceUrl: String!
  tableauOnline: Boolean
  urlSiteName: String

  """Tableau user name"""
  user: String!
}

type ChangeTagMutation {
  """The tag that has been changed."""
  Tag: Tag
  clientMutationId: String
  currentView: CurrentView
}

"""The request object to change tag"""
input ChangeTagRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """Id of the tag"""
  id: ID!

  """Current view location"""
  location: String

  """New name value"""
  name: String

  """Current view type"""
  viewType: String
}

type ChangeUserAvatarMutation {
  clientMutationId: String

  """The user that has been changed"""
  user: User
}

input ChangeUserAvatarRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The file name, this file name overrides the file name  in the headers"""
  fileName: String

  """The id of the user to change the avatar for"""
  id: ID!
}

type ChangeUserEnabledMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
  licenseCounts(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): LicenseCounts

  """The user that has been changed"""
  user: User
}

input ChangeUserEnabledRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """A flag indicating whether we should enable or disable the user"""
  enabled: Boolean!

  """The id of the user that we want to enable or disable"""
  userId: ID!
}

type ChangeUserGroupMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The user group that was changed."""
  userGroup: UserGroup
}

input ChangeUserGroupRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
  locallyManaged: Boolean
  name: String
}

type ChangeUserMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  licenseCounts(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): LicenseCounts

  """The user that has been changed"""
  user: User
}

input ChangeUserRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  email: String
  firstName: String
  gender: Gender
  id: ID!
  lastName: String
  licenseType: LicenseType
  username: String
}

input ChangeViewAssignmentRule {
  assetTypeId: String
  communityId: String
  domainId: String
  domainTypeId: String
}

type ChangeViewMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The view that has been changed"""
  view: View
}

input ChangeViewRequest {
  assignmentRules: [ChangeViewAssignmentRule]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  config: String
  default: Boolean
  description: String
  id: ID!
  location: String!
  name: String
  preferred: Boolean
  resourceId: ID
  sharingRules: [ChangeViewSharingRule]
  touchView: Boolean
  workingView: Boolean
  workingview: Boolean
}

input ChangeViewSharingRule {
  groupId: String
  roleId: String
  userId: String
}

type ChangeVisibilityForFinishedJobs {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
}

input ChangeVisibilityForFinishedJobsRequest {
  """
  If true, the jobs for all users are changed (only works as a sysadmin). If
  false, only the jobs of the current user are changed.
  """
  allUsers: Boolean = false

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The new visibility for the finished jobs. True for visible."""
  visibility: Boolean!
}

type ChangeWorkflowDefinitionMutation {
  clientMutationId: String

  """The workflow definition that has been changed."""
  workflowDefinition: WorkflowDefinition
}

input ChangeWorkflowDefinitionRequest {
  """The type of the business item corresponding to the workflow."""
  businessItemResourceType: WorkflowBusinessItemType

  """Whether the candidate user check for the workflow should be enabled."""
  candidateUserCheckEnabled: Boolean

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The configuration variables."""
  configurationVariables: Map
  description: String

  """Whether the workflow definition should be enabled."""
  enable: Boolean

  """Defines the number of times a resource workflow is able to be start."""
  exclusivity: WorkflowExclusivity

  """Whether the workflow is accessible from the global create menu."""
  globalCreate: Boolean

  """Whether the workflow should be accessible by the guest user."""
  guestUserAccessible: Boolean
  id: ID!
  name: String

  """
  The list of IDs identifying the roles allowing to reassign the workflow.
  """
  reassignRoleIds: [ID]

  """Whether the workflow should be accessible by the registered user."""
  registeredUserAccessible: Boolean

  """The list of workflow start event types."""
  startEvents: [WorkflowStartEventType]

  """The start label of the workflow."""
  startLabel: String

  """The list of IDs identifying the roles allowing to start the workflow."""
  startRoleIds: [ID]

  """The list of IDs identifying the roles allowing to stop the workflow."""
  stopRoleIds: [ID]
}

"""Built-in Char as Character"""
scalar Char

type CharacteristicConfiguration {
  """Label of the single characteristic for display configuration"""
  label: String

  """Id of the single characteristic for display configuration"""
  resourceIdentifier: String

  """
  CharacteristicType, one of:[ATTRIBUTE_TYPE, RELATION_TYPE, ROLE_TYPE, TAGS]
  """
  type: CharacteristicType

  """Flag if characteristic should be visible on result tile"""
  visible: Boolean
}

input CharacteristicConfigurationInput {
  """Label of the single characteristic for display configuration"""
  label: String

  """Id of the single characteristic for display configuration."""
  resourceIdentifier: String

  """
  CharacteristicType, one of: [ATTRIBUTE_TYPE, RELATION_TYPE, ROLE_TYPE, TAGS]
  """
  type: CharacteristicType!

  """Flag if characteristic should be visible on result tile"""
  visible: Boolean
}

"""
The enumeration for a CharacteristicType. Possible values are: ATTRIBUTE_TYPE RELATION_TYPE ROLE_TYPE TAGS
"""
enum CharacteristicType {
  ATTRIBUTE_TYPE
  RELATION_TYPE
  ROLE_TYPE
  TAGS
}

input CharacteristicTypeAssignmentReference {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
  max: Int
  min: Int! = 0
  type: ResourceType
}

type ChartData implements node {
  chartType: ChartType

  """The unique identifier"""
  id: ID
  value: String
}

"""The enumeration for a ChartType. Possible values are: HISTOGRAM BAR"""
enum ChartType {
  BAR
  HISTOGRAM
}

type Classification implements node {
  """UUID of this classification"""
  id: ID

  """Name of classification"""
  name: String
}

type ClassificationClass implements node {
  """UUID of classification"""
  classificationId: String

  """UUID of this entity"""
  id: ID

  """Predicted class"""
  label: String

  """
  Value from [0, 100] that indicates how big are chances that this class is correct one
  """
  percentage: String
  status: ClassificationClassStatus
}

input ClassificationClassRequest {
  id: ID
  label: String
}

"""
The enumeration for a ClassificationClassStatus. Possible values are: ACCEPTED SUGGESTED REJECTED
"""
enum ClassificationClassStatus {
  ACCEPTED
  REJECTED
  SUGGESTED
}

type ClassificationStewardshipAsset implements node {
  """Asset type details"""
  assetType: ClassificationStewardshipAssetType

  """UUID of the asset"""
  id: ID

  """Asset name"""
  name: String
}

type ClassificationStewardshipAssetConnection {
  edges: [ClassificationStewardshipAssetEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type ClassificationStewardshipAssetEdge {
  cursor: String!
  node: ClassificationStewardshipAsset
}

input ClassificationStewardshipAssetsRequest {
  """Id of asset type"""
  assetTypeId: ID

  """Limit"""
  limit: Int = 100

  """Name of asset"""
  name: String

  """Offset"""
  offset: Int = 0
}

type ClassificationStewardshipAssetType implements node {
  """UUID of the asset type"""
  id: ID

  """Symbol data details of asset type"""
  symbolData: ClassificationStewardshipSymbolData
}

type ClassificationStewardshipClassification implements node {
  """UUID of the classification"""
  id: ID

  """Classification name"""
  name: String
}

type ClassificationStewardshipData implements node {
  """Classified columns count"""
  columnsCount: Long

  """User who created this classification"""
  createdBy: ClassificationStewardshipUser

  """Classification creation date"""
  createdOn: Long

  """Data attributes"""
  dataAttributes: [ClassificationStewardshipAsset]

  """Data concepts"""
  dataConcepts: [ClassificationStewardshipAsset]

  """UUID of the classification in this response"""
  id: ID

  """User who last modified this classification"""
  lastModifiedBy: ClassificationStewardshipUser

  """Classification last modification date"""
  lastModifiedOn: Long

  """Classification name"""
  name: String

  """TBD"""
  precision: Long

  """True if user manually created this classification, false otherwise"""
  userDefined: Boolean
}

type ClassificationStewardshipDataConnection {
  edges: [ClassificationStewardshipDataEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type ClassificationStewardshipDataEdge {
  cursor: String!
  node: ClassificationStewardshipData
}

input ClassificationStewardshipDataRequest {
  """Filter field"""
  filterField: ClassificationStewardshipFilterField

  """Filter query"""
  filterQuery: String

  """Limit"""
  limit: Int = 100

  """Offset"""
  offset: Int = 0

  """Sort field"""
  sortField: ClassificationStewardshipSortField = NAME

  """Sort order"""
  sortOrder: ClassificationStewardshipSortOrder = ASC
}

type ClassificationStewardshipDetailsData implements node {
  """Columns"""
  columns: [ClassificationStewardshipAsset]

  """Data attributes"""
  dataAttributes: [ClassificationStewardshipAsset]

  """Data concepts"""
  dataConcepts: [ClassificationStewardshipAsset]

  """UUID of the classification in this response"""
  id: ID

  """Classification name"""
  name: String

  """Total columns classified by this classification"""
  totalColumns: Long
}

input ClassificationStewardshipDetailsDataRequest {
  """Id of classification"""
  classificationId: ID
}

"""
The enumeration for a ClassificationStewardshipFilterField. Possible values are:
ID NAME DATA_CONCEPT DATA_ATTRIBUTE CREATOR MODIFIER
"""
enum ClassificationStewardshipFilterField {
  CREATOR
  DATA_ATTRIBUTE
  DATA_CONCEPT
  ID
  MODIFIER
  NAME
}

type ClassificationStewardshipMergeClassificationsMutation {
  clientMutationId: String
}

input ClassificationStewardshipMergeClassificationsRequest {
  """The UUIDs of classifications that will be merged"""
  classificationToMergeIds: [String]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """Target classification name"""
  targetClassificationName: String
}

type ClassificationStewardshipRemoveClassificationsMutation {
  clientMutationId: String
}

input ClassificationStewardshipRemoveClassificationsRequest {
  """The UUIDs of classifications to remove"""
  classificationsIds: [String]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
}

type ClassificationStewardshipSetMatchesMutation {
  clientMutationId: String

  """Updated classification data"""
  row: ClassificationStewardshipData
}

input ClassificationStewardshipSetMatchesRequest {
  """The UUID of asset type"""
  assetTypeId: String

  """The UUIDs of assets that will be used to add classification matches"""
  assetsIds: [String]

  """The UUID of classification"""
  classificationId: String

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
}

"""
The enumeration for a ClassificationStewardshipSortField. Possible values are:
NAME DATA_CONCEPT DATA_ATTRIBUTE CREATOR CREATED_ON COLUMNS_COUNT MODIFIER MODIFIED_ON
"""
enum ClassificationStewardshipSortField {
  COLUMNS_COUNT
  CREATED_ON
  CREATOR
  DATA_ATTRIBUTE
  DATA_CONCEPT
  MODIFIED_ON
  MODIFIER
  NAME
}

"""
The enumeration for a ClassificationStewardshipSortOrder. Possible values are: ASC DESC
"""
enum ClassificationStewardshipSortOrder {
  ASC
  DESC
}

type ClassificationStewardshipSymbolData {
  """the short name that is displayed on the icon"""
  acronym: String

  """the color that is used for the icon"""
  color: String

  """the icon code of specific asset type"""
  icon: String

  """
  the symbol type of the asset type. Can be [NONE, ICON_CODE, ACRONYM_CODE]
  """
  symbolType: String
}

"""The main root classification stewardship type"""
type ClassificationStewardshipType implements node {
  assets(input: ClassificationStewardshipAssetsRequest): ClassificationStewardshipAssetConnection
  data(input: ClassificationStewardshipDataRequest): ClassificationStewardshipDataConnection
  detailsData(input: ClassificationStewardshipDetailsDataRequest): ClassificationStewardshipDetailsData

  """A dummy hardcoded id for the classification stewardship"""
  id: ID
}

type ClassificationStewardshipUpdateClassificationMutation {
  clientMutationId: String

  """Updated classification data"""
  updatedClassification: ClassificationStewardshipClassification
}

input ClassificationStewardshipUpdateClassificationRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The UUID of the classification which should be updated"""
  id: String

  """Classification name to update"""
  name: String
}

type ClassificationStewardshipUser implements node {
  """Url of user avatar"""
  avatarUrl: String

  """First name"""
  firstName: String

  """UUID of the user"""
  id: ID

  """Last name"""
  lastName: String

  """Username"""
  username: String
}

"""
The enumeration for a CollectionUpdateStrategy. Possible values are: SET MERGE
"""
enum CollectionUpdateStrategy {
  MERGE
  SET
}

input ColumnInput {
  """List of the characteristic configurations."""
  characteristicConfigurations: [CharacteristicConfigurationInput]

  """Id of the column."""
  id: String
}

type ColumnLayout implements TabLayout {
  id: String
  tabLayoutColumns: [TabLayoutColumn]
  type: TabLayoutType
}

input ColumnLayoutInput {
  """Id of the tab"""
  id: String

  """List of columns."""
  tabLayoutColumns: [ColumnInput]

  """Type of the column layout."""
  type: TabLayoutType
}

type ColumnMetadata {
  """The formatting of the column"""
  formatting: String

  """The Id of the column"""
  id: String

  """The name of the column"""
  name: String
}

type Comment implements node {
  baseResourceId: ID
  baseResourceNaturalIdentifier: String
  comments(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    Specifies the order for the comments (by creation date). Can be either 'ASC or 'DESC
    """
    sortOrder: String = "ASC"

    """The optional id of the user to get the comments from.."""
    userId: ID
  ): CommentConnection
  content: String

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  mentionedUsers: [User]
  parent: CommentParent

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type CommentConnection {
  edges: [CommentEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type CommentEdge {
  cursor: String!
  node: Comment
}

union CommentParent = Asset | Comment | Community | Domain

type Community implements WithWorkflowTasks & node {
  attachments(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String
    fileContentType: String
    fileName: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    scanState: String

    """
    The enumeration for a SortField. Possible values are: FILE_CONTENT_TYPE
    CREATED_BY FILE_NAME CREATED_ON BASE_RESOURCE_ID LAST_MODIFIED
    """
    sortField: String = "CREATED_ON"

    """Specifies the order for the attachments.  Can be either 'ASC or 'DESC"""
    sortOrder: String = "ASC"
    uploadDate: Long
    userId: ID
  ): AttachmentConnection
  breadcrumb: [NamedResourceReference]

  """Subcommunities or domains of this community."""
  children(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): [CommunityOrDomain]
  comments(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The optional id of the parent comment to get the replies from."""
    parentId: ID

    """
    A boolean value indicating whether we are looking for Root comments or not
    """
    rootComment: Boolean

    """
    Specifies the order for the comments (by creation date). Can be either 'ASC or 'DESC
    """
    sortOrder: String = "ASC"

    """The optional id of the user to get the comments from.."""
    userId: ID
  ): CommentConnection

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The description of the Object"""
  description: String

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The main role"""
  mainRole: Role

  """The Name of the Object"""
  name: String
  parent: Community
  parentId: ID

  """
  The list of resources that are either ancestors or children of the community, and that have restricted view permissions
  """
  relatedResourcesWithDefinedViewPermission: [CommunityOrDomain]
  responsibilities(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int
    includeInherited: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    ownerIds: [ID]
    roleIds: [ID]

    """
    The enumeration for a SortField. Possible values are: CREATED_BY CREATED_ON LAST_MODIFIED
    """
    sortField: String = "CREATED_ON"

    """Specifies the order for the attachments.  Can be either 'ASC or 'DESC"""
    sortOrder: String = "ASC"

    """
    The enumeration for a TypeMatchMode. Possible values are: ALL GLOBAL RESOURCE
    """
    type: String
  ): ResponsibilityConnection

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
  viewPermissions(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int
    includeInherited: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): ViewPermissionConnection
  views(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The location the views should have."""
    location: String!

    """The name the views should have."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The field on which we want to sort the views."""
    sortField: ViewSortField = NAME

    """The order in which the views should be sorted."""
    sortOrder: SortOrder = ASC

    """
    The enumeration for a ViewType. Possible values are: DASHBOARD SEARCH
    ASSETTABLE COMMUNITYDOMAINTREE DOMAINTABLE DIAGRAM STATUSTABLE
    RELATIONTYPETABLE DOMAINTYPETABLE ASSETTYPETABLE ATTRIBUTETYPETABLE
    COMPLEXRELATIONTYPETABLE DATAQUALITYRULETABLE VALIDATIONRESULTTABLE
    SCOPETABLE ADVANCEDDATATYPETABLE DIAGRAMPICTURETABLE USERTABLE
    USERGROUPSTABLE TAGTABLE GLOBALROLETABLE RESOURCEROLETABLE
    GLOBALPERMISSIONSTABLE RESOURCEPERMISSIONSTABLE
    """
    type: String = "ASSETTABLE"
  ): ViewConnection
  workflowTasks(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): WorkflowTaskConnection
  workflows: [Workflow]
}

type CommunityConnection {
  edges: [CommunityEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type CommunityEdge {
  cursor: String!
  node: Community
}

union CommunityOrDomain = Community | Domain

type CommunityOrDomainWithNumberOfViews {
  id: ID
  name: String
  nbViews: Int
  parent: Organization
}

"""
The enumeration for a SortField. Possible values are: NAME CREATED_BY CREATED_ON LAST_MODIFIED
"""
enum CommunitySortField {
  CREATED_BY
  CREATED_ON
  LAST_MODIFIED
  NAME
}

type ComplexRelation implements node {
  """Asset Attributes"""
  assetAttributes(
    """The list of id of attribute types the found attributes should have. """
    typeIds: [ID]
  ): [Attribute]
  attributes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """The id of the asset the attributes should be part of."""
    assetId: ID

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The list of id of attribute types the found attributes should have. """
    typeIds: [ID]
  ): AttributeConnection

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  legs: [ComplexRelationLeg]

  """The Name of the Object"""
  name: String

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
  type: ComplexRelationType
}

input ComplexRelationAttributeRequest {
  attributeTypeId: ID!
  value: [String]
}

type ComplexRelationAttributeType implements node {
  """The attribute type this ComplexRelationAttributeType is referring to."""
  attributeType: AttributeType

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The maximum cardinality of this leg"""
  max: Int

  """The minimum cardinality of this leg"""
  min: Int

  """
  A boolean indicator indicating if this ComplexRelationAttributeType is readOnly or not
  """
  readOnly: Boolean

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

input ComplexRelationAttributeTypeRequest {
  attributeTypeId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID
  max: Int
  min: Int! = 0
}

type ComplexRelationLeg implements node {
  asset: NamedDescribedResourceReference
  assetReference: AssetReference
  assetType: NamedDescribedResourceReference
  coRole: String

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  role: String

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

input ComplexRelationLegRequest {
  assetId: ID!
  legTypeId: ID!
}

type ComplexRelationLegType implements node {
  """The asset type this complex relation leg type is targeting."""
  assetType: AssetType

  """The co role of this complexRelationLeg"""
  coRole: String

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The maximum cardinality of this leg"""
  max: Int

  """The minimum cardinality of this leg"""
  min: Int

  """The id of the relation type that is created for the leg type"""
  relationTypeId: ID

  """The role of this complexRelationLeg"""
  role: String

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

input ComplexRelationLegTypeRequest {
  assetTypeId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  coRole: String
  id: ID
  max: Int
  min: Int! = 0
  role: String!
}

type ComplexRelationType {
  """The ComplexRelationAttributeTypes linked to this ComplexRelationType"""
  attributeTypes: [ComplexRelationAttributeType]

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The description of the Object"""
  description: String

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The complexRelationType legs"""
  legTypes: [ComplexRelationLegType]

  """The Name of the Object"""
  name: String
  symbolData: SymbolData

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type ComplexRelationTypeAssignedToAsset implements node {
  assetTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String

  """The assigned complex relation type for this group"""
  assignedComplexRelationType: AssignedComplexRelationType

  """
  the maximum complex relations occurrences  that can be added for the complex
  relation type before reaching minimum cardinality
  """
  cardinalityLimit: Int
  id: ID

  """the maximum cardinality"""
  max: Int

  """the minimum cardinality"""
  min: Int

  """The view for the relation table"""
  view: View
}

type ComplexRelationTypeConnection {
  edges: [ComplexRelationTypeEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type ComplexRelationTypeEdge {
  cursor: String!
  node: ComplexRelationType
}

input ComputeDataSetSimilaritiesInput {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
}

type ComputeDataSetSimilaritiesMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
}

input ComputeRecommenderModelInput {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  useCase: RecommendationUseCase
}

type ComputeRecommenderModelMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
}

type ConnectionStringParameter implements node {
  """The unique identifier"""
  id: ID
  label: String!
  parameter: String!
  required: Boolean
}

input ConnectionStringParameterInput {
  label: String!
  parameter: String!
  required: Boolean!
}

type ConnectionTestResult {
  """The reason why a connection failed (available in case of failure only)"""
  failureReason: String

  """Tells if a connection test is successful or not"""
  successful: Boolean
}

type CopyGlobalAssignmentMutation {
  """The api"""
  api: ApiType

  """The original assetType for which this assignment was created"""
  assetType: AssetType

  """The assignment based on the previous unscoped (global) assignment"""
  assignment: Assignment
  clientMutationId: String
}

"""
Creates a new Assignment for the given assetType and for the optional scope. 
This assignment will contain all info of the unscoped assignment of the given asset type.
"""
input CopyGlobalAssignmentRequest {
  """The ID of the AssetType."""
  assetTypeId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The ID of the Scope."""
  scopeId: ID
}

type CopyViewMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The view that has been changed"""
  viewEdge: ViewEdge
}

type Crawler implements node {
  """The domain assigned to the crawler"""
  domain: Domain

  """The unique identifier of the crawler"""
  id: ID

  """The paths targeted for crawling"""
  includePaths: [CrawlerIncludePath]

  """The name of the crawler"""
  name: String
}

type CrawlerConnection {
  edges: [CrawlerEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type CrawlerEdge {
  cursor: String!
  node: Crawler
}

"""An input object representing an Include path"""
type CrawlerIncludePath {
  excludePatterns: [String]
  path: String!
}

"""An input object representing an Include path"""
input CrawlerIncludePathRequest {
  excludePatterns: [String]
  path: String!
}

type CsvIngestionProperties implements node {
  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long
  detectAdvancedDataTypes: Boolean
  escape: Char
  executeProfiling: Boolean
  extractDataSample: Boolean

  """The unique identifier"""
  id: ID
  jobServer: String

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  quote: Char
  schema: Asset!
  separator: Char

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type CurrentUser implements node {
  """Retrieve the applicable business qualifers for given asset."""
  applicableBusinessQualifiers(
    """the id of the Asset to look for"""
    assetId: ID!

    """the json template diagram specifying the relations to look for"""
    diagramTemplate: String!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): [Asset]

  """Get the total number of tasks open for the user."""
  assignedTaskCount: Long

  """The current view at the given location"""
  currentView(
    """The location for the view"""
    location: String

    """The id of the resource we should be looking the views for."""
    resourceId: ID

    """
    The enumeration for a ViewType. Possible values are: DASHBOARD SEARCH
    ASSETTABLE COMMUNITYDOMAINTREE DOMAINTABLE DIAGRAM STATUSTABLE
    RELATIONTYPETABLE DOMAINTYPETABLE ASSETTYPETABLE ATTRIBUTETYPETABLE
    COMPLEXRELATIONTYPETABLE DATAQUALITYRULETABLE VALIDATIONRESULTTABLE
    SCOPETABLE ADVANCEDDATATYPETABLE DIAGRAMPICTURETABLE USERTABLE
    USERGROUPSTABLE TAGTABLE GLOBALROLETABLE RESOURCEROLETABLE
    GLOBALPERMISSIONSTABLE RESOURCEPERMISSIONSTABLE
    """
    type: String = "ASSETTABLE"
  ): CurrentView
  hitsForCategories(
    """The actual query to execute"""
    query: String!
  ): [QuickSearchResultForCategoriesHits]
  hitsForFilters(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The actual query to execute"""
    query: String!
  ): QuickSearchResultForFilterHitsConnection

  """A dummy hardcoded-id representing the current user."""
  id: ID

  """
  Determines whether this current user is an authenticated SAML user or not.
  """
  isAuthenticatedSAMLUser: Boolean
  jobs(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String
    createdBy: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The maximum visibility level the jobs should have."""
    maxVisibility: Int = 2147483647
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """Specifies the field on which the jobs should be sorted """
    sortField: String = "CREATED_ON"

    """Specifies the order for the jobs. """
    sortOrder: String = "DESC"

    """Specifies the list of states the job should have. """
    states: [String]

    """Specifies the list of types the job should be in."""
    types: [String]

    """
    The visibility filter of the jobs. True for visible, false for non-visible. Omit for all.
    """
    visible: Boolean
  ): JobConnection
  notifications(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): NotificationConnection

  """The permissions for the current user."""
  permissions(
    """Indicates the directive to include or skip."""
    if: Boolean

    """The id of the current resource."""
    resourceId: String
  ): [String]
  recentAssetTypes(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): [AssetType]
  recentWorkflows(
    """
    Optional limit argument.  Limits the numbers of results.  Default value is 10
    """
    limit: Int = 10
  ): [Workflow]

  """The recently visited views ordered by visit time."""
  recentlyVisitedViews(
    """A list of locations the current user is interested in."""
    locations: [String]
  ): [View]

  """
  Whether the current user is subscribed to scheduled maintenance notifications.
  """
  subscribedToMaintenanceNotifications: Boolean
  topResults(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The actual query to execute"""
    query: String!

    """the height of the user avatar"""
    userAvatarHeight: Int!

    """the width of the user avatar"""
    userAvatarWidth: Int!
  ): QuickSearchResultForTopResultsConnection

  """The actual user data"""
  user: User

  """The views visible for the user."""
  views(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The location the views should have."""
    location: String

    """Indicates if only current user's views are returned."""
    myViewsOnly: Boolean

    """The name the views should have."""
    name: String

    """Describes when the provided name is considered as matching."""
    nameMatchMode: MatchMode = EXACT

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """Indicates the view is preferred."""
    preferred: Boolean

    """The id of the resource we should be looking the views for."""
    resourceId: ID

    """The field on which we want to sort the views."""
    sortField: ViewSortField = NAME

    """The order in which the views should be sorted."""
    sortOrder: SortOrder = ASC

    """
    The enumeration for a ViewType. Possible values are: DASHBOARD SEARCH
    ASSETTABLE COMMUNITYDOMAINTREE DOMAINTABLE DIAGRAM STATUSTABLE
    RELATIONTYPETABLE DOMAINTYPETABLE ASSETTYPETABLE ATTRIBUTETYPETABLE
    COMPLEXRELATIONTYPETABLE DATAQUALITYRULETABLE VALIDATIONRESULTTABLE
    SCOPETABLE ADVANCEDDATATYPETABLE DIAGRAMPICTURETABLE USERTABLE
    USERGROUPSTABLE TAGTABLE GLOBALROLETABLE RESOURCEROLETABLE
    GLOBALPERMISSIONSTABLE RESOURCEPERMISSIONSTABLE
    """
    type: String = "ASSETTABLE"

    """Indicates if working views are returned."""
    workingViews: Boolean
  ): ViewConnection
  visibleJobCountsByStatus(
    """The number of jobs to count."""
    mostRecentJobLimit: Int = 100
  ): JobCountByStatus
}

type CurrentView implements node {
  advancedDataTypeTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  assetTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  assetTypeTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  attributeTypeTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  communityDomainHierarchyOutput(
    communityId: ID

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    parentCommunityId: ID
  ): String
  communityDomainTreeOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]
    communityId: ID

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean
    limit: Int = -1
    offset: Int
    parentCommunityId: ID
  ): String
  complexRelationOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]
    assetId: ID
    complexRelationTypeId: ID

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  complexRelationTypeTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  contextTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean
    level: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    parentAssetId: ID
  ): String
  dataQualityRuleTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  diagramPictureTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  domainTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1
    domainTypeIds: [ID]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  domainTypeTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  globalRoleTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String

  """A dummy hardcoded-id representing the current view and location."""
  id: ID
  permissionTableOutput: String
  relationHierarchyOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean
    level: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    parentAssetId: ID
  ): String
  relationTypeTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  resourceRoleTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String

  """Retrieve the diagram corresponding to the given asset and the view."""
  resultDiagram(
    """the id of the Asset to look for"""
    assetId: ID!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): String
  scopeTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  statusTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  tableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """
    ISO 8601 time offset to be applied for date filters (createdOn, lastModifiedOn). If not set, no offset is applied.
    """
    timeOffset: String
  ): String
  tagTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  userGroupsTableWithoutUserOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  userTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String
  validationResultTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String

  """Actual view data."""
  view: View
}

type Database implements node {
  """The asset id of that database"""
  assetId: ID

  """The id of the database"""
  id: ID

  """The database name"""
  name: String
}

type DatabaseConfiguration implements node {
  """The edge data source associated"""
  edgeDataSource: EdgeDataSource

  """Does the edge data source exist"""
  edgeDataSourceExist: Boolean

  """The id of the database configuration"""
  id: ID
}

type DatabaseIngestionSchemas implements node {
  """The id of the database"""
  databaseId: ID

  """The unique identifier"""
  id: ID

  """The list of schemas"""
  schemas: [Schema]

  """The database synchronization status"""
  status: String

  """An optional status message"""
  statusMessage: String
}

"""
The enumeration for a DatabaseJobGroups. Possible values are: INGESTION PROFILING LINEAGE
"""
enum DatabaseJobGroups {
  INGESTION
  LINEAGE
  PROFILING
}

type DatabaseProfilingConfiguration implements node {
  """The id of the database profiling configuration"""
  id: ID

  """Define the kind of profiling"""
  profilingType: ProfilingType

  """Run profiling after ingestion is done"""
  runAfterIngestion: Boolean

  """The sample size when using push down sampling"""
  sampleSize: Int
}

type DatabaseSyncSchedule implements node {
  """The cron expression"""
  cronExpression: String

  """The cron expression in json"""
  cronJson: String

  """The cron time zone"""
  cronTimeZone: String

  """The id of the schedule configuration"""
  id: ID

  """The cron last run"""
  lastRunTimeStamp: Long

  """The cron next run"""
  nextRunDateLongValue: Long
}

type DataProfilingRelationTypeAssignedToAsset implements node {
  asset: Asset
  assetTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String

  """The assigned relation type"""
  assignedRelationType: AssignedRelationType
  id: ID

  """Role direction for instance of assignedRelationType"""
  instanceRoleDirection: RelationTypeDirection

  """The view for the asset data profiling"""
  view: View
}

"""
The enumeration for a DataQualityCountOperation. Possible values are: Sum
Minimum Maximum Average Median BooleanAnd BooleanOr
"""
enum DataQualityCountOperation {
  Average
  BooleanAnd
  BooleanOr
  Maximum
  Median
  Minimum
  Sum
}

type DataQualityMetric implements node {
  attributeType: NamedDescribedResourceReference
  countOperation: String

  """The unique identifier"""
  id: ID
  isMandatory: Boolean
}

"""
The DataQualityMetricRequest object, contains the metric data for a DataQuality request.
"""
input DataQualityMetricRequest {
  """The ID of an AttributeType"""
  attributeTypeId: ID!

  """The CountOperation that should be used."""
  countOperation: DataQualityCountOperation
}

type DataQualityRule implements node {
  """The Categorization relation type"""
  categorizationRelationType: ResourceReference

  """The list of data quality metrics"""
  dataQualityMetrics: [DataQualityMetric]

  """The description of the Object"""
  description: String

  """The unique identifier"""
  id: ID

  """The Name of the Object"""
  name: String

  """The RelationTrace field"""
  relationTrace: RelationTrace
}

type DataQualityRuleConnection {
  edges: [DataQualityRuleEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type DataQualityRuleEdge {
  cursor: String!
  node: DataQualityRule
}

"""The enumeration for a SortField. Possible values are: NAME"""
enum DataQualityRuleSortField {
  NAME
}

type DataSample implements node {
  """The unique identifier"""
  id: ID
  value: String
  viewPermitted: Boolean
}

type DataSourceDatabases implements node {
  """The list of databases that belong to the edge datasource"""
  databases: [Database]

  """The unique identifier"""
  id: ID

  """Tell whether or not the list is available"""
  status: String

  """A status message to display to the user"""
  statusMessage: String
}

interface DataType {
  """The description of the Object"""
  description: String

  """The unique identifier"""
  id: ID

  """The Name of the Object"""
  name: String
}

type DataTypeConnection {
  edges: [DataTypeEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type DataTypeEdge {
  cursor: String!
  node: DataType
}

type DataTypeMatch {
  """Name of data type"""
  name: String

  """Percentage match of data type and asset"""
  percentage: Float
}

type DateAttribute implements Attribute & node {
  asset: Asset
  createdBy: User
  createdOn: Long

  """The unique identifier"""
  id: ID
  lastModifiedBy: User
  lastModifiedOn: Long
  longValue: Long
  system: Boolean
  type: AttributeType
}

type DateAttributeType implements AttributeType & node {
  description: String

  """The unique identifier"""
  id: ID
  name: String
  system: Boolean
}

type DiagramPicture implements node {
  assetId: ID
  config: String

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long
  default: Boolean

  """The description of the Object"""
  description: String

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The Name of the Object"""
  name: String
  originalViewId: ID
  preferred: Boolean
  sharingRules: [SharingRule]
  svg: String

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type DismissBannerMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
}

input DismissBannerRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
}

type Domain implements WithWorkflowTasks & node {
  attachments(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String
    fileContentType: String
    fileName: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    scanState: String

    """
    The enumeration for a SortField. Possible values are: FILE_CONTENT_TYPE
    CREATED_BY FILE_NAME CREATED_ON BASE_RESOURCE_ID LAST_MODIFIED
    """
    sortField: String = "CREATED_ON"

    """Specifies the order for the attachments.  Can be either 'ASC or 'DESC"""
    sortOrder: String = "ASC"
    uploadDate: Long
    userId: ID
  ): AttachmentConnection
  breadcrumb: [NamedResourceReference]
  comments(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The optional id of the parent comment to get the replies from."""
    parentId: ID

    """
    A boolean value indicating whether we are looking for Root comments or not
    """
    rootComment: Boolean

    """
    Specifies the order for the comments (by creation date). Can be either 'ASC or 'DESC
    """
    sortOrder: String = "ASC"

    """The optional id of the user to get the comments from.."""
    userId: ID
  ): CommentConnection
  community: Community
  communityId: ID

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The description of the Object"""
  description: String
  excludedFromAutoHyperlinking: Boolean

  """The unique identifier"""
  id: ID

  """
  Determines if the current user is allowed to create the given asset types in the Domain node we're currently on
  """
  isAllowedToCreate(
    """The assetType IDs we want to check for create permissions"""
    assetTypeIds: [ID]!

    """Indicates the directive to include or skip."""
    if: Boolean
  ): Boolean

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The Name of the Object"""
  name: String

  """
  The list of communities that are ancestors of the domain, and that have restricted view permissions
  """
  relatedResourcesWithDefinedViewPermission: [Community]
  responsibilities(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int
    includeInherited: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
    ownerIds: [ID]
    roleIds: [ID]

    """
    The enumeration for a SortField. Possible values are: CREATED_BY CREATED_ON LAST_MODIFIED
    """
    sortField: String = "CREATED_ON"

    """Specifies the order for the attachments.  Can be either 'ASC or 'DESC"""
    sortOrder: String = "ASC"

    """
    The enumeration for a TypeMatchMode. Possible values are: ALL GLOBAL RESOURCE
    """
    type: String
  ): ResponsibilityConnection

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
  type: DomainType
  viewPermissions(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int
    includeInherited: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): ViewPermissionConnection
  views(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The location the views should have."""
    location: String!

    """The name the views should have."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The field on which we want to sort the views."""
    sortField: ViewSortField = NAME

    """The order in which the views should be sorted."""
    sortOrder: SortOrder = ASC

    """
    The enumeration for a ViewType. Possible values are: DASHBOARD SEARCH
    ASSETTABLE COMMUNITYDOMAINTREE DOMAINTABLE DIAGRAM STATUSTABLE
    RELATIONTYPETABLE DOMAINTYPETABLE ASSETTYPETABLE ATTRIBUTETYPETABLE
    COMPLEXRELATIONTYPETABLE DATAQUALITYRULETABLE VALIDATIONRESULTTABLE
    SCOPETABLE ADVANCEDDATATYPETABLE DIAGRAMPICTURETABLE USERTABLE
    USERGROUPSTABLE TAGTABLE GLOBALROLETABLE RESOURCEROLETABLE
    GLOBALPERMISSIONSTABLE RESOURCEPERMISSIONSTABLE
    """
    type: String = "ASSETTABLE"
  ): ViewConnection
  workflowTasks(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): WorkflowTaskConnection
  workflows: [Workflow]
}

type DomainAssignmentRule implements node {
  """the community this workflow definition applies to"""
  community: NamedResourceReference

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """the domain type that this workflow definition applies to"""
  domainType: NamedResourceReference

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type DomainConnection {
  edges: [DomainEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type DomainEdge {
  cursor: String!
  node: Domain
}

type DomainType implements node {
  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The description of the Object"""
  description: String

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The main role"""
  mainRole: Role

  """The Name of the Object"""
  name: String
  parent: DomainType
  subTypes(
    """
    When set to true, the parent node will be included in the result. Otherwise only the subtypes will be returned
    """
    includeParent: Boolean = false
  ): [DomainType]

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type DomainTypeConnection {
  edges: [DomainTypeEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type DomainTypeEdge {
  cursor: String!
  node: DomainType
}

"""Built-in Double"""
scalar Double

type DropdownValue implements node {
  """The unique identifier"""
  id: ID

  """the parents"""
  parents: [String]

  """the dropDownValue text"""
  text: String
}

type EdgeCapability implements node {
  capabilityId: ID
  capabilityName: String

  """The unique identifier"""
  id: ID
  siteId: ID
}

type EdgeDataSource implements node {
  """The assets that use this datasource"""
  assets: [Asset]

  """The datasource description"""
  description: String

  """The id of the datasource"""
  id: ID

  """The datasource name"""
  name: String

  """The edge siteId of the datasource"""
  siteId: String

  """The type of datasource: JDBC, S3_INGESTION"""
  type: String
}

"""
The contents of the created assignment between an edge data source and an asset
"""
type EdgeDataSourceToAssetMutation {
  clientMutationId: String

  """The edge data source assigned to the asset"""
  edgeDataSource: EdgeDataSource
}

type ExcelIngestionProperties implements node {
  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long
  detectAdvancedDataTypes: Boolean
  executeProfiling: Boolean
  extractDataSample: Boolean

  """The unique identifier"""
  id: ID
  jobServer: String

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  schema: Asset!

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type ExportComplexRelationsToCSV {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The actual job running the export."""
  job: Job
}

input ExportComplexRelationsToCSVRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  complexRelationTypeId: String!
  domainId: String
  escape: String
  fileName: String
  includeHeaderRow: Boolean
  quote: String
  removeFormatting: Boolean
  separator: String
  storeAsAttachment: Boolean
  supportRoundtrip: Boolean
}

type ExportComplexRelationsToExcel {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The actual job running the export."""
  job: Job
}

input ExportComplexRelationsToExcelRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  complexRelationTypeId: String!
  domainId: String
  fileName: String
  includeHeaderRow: Boolean
  removeFormatting: Boolean
  sheetName: String
  storeAsAttachment: Boolean
  supportRoundtrip: Boolean
  xlsx: Boolean
}

type ExportDiagramToPDFMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  id: String
}

input ExportDiagramToPDFRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  svg: String
}

type ExportsUsersMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The Job (a reference to the async export process.)"""
  job: Job
}

"""The export users request object."""
input ExportUsersRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
}

type ExportViewToCSV {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The actual job running the export."""
  job: Job
}

input ExportViewToCSVRequest {
  """
  Additional (temporary) filters in an object form. They will be added to the filters present in the view.
  """
  additionalFilters: [Filter]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  escape: String
  fileName: String
  includeHeaderRow: Boolean
  quote: String
  removeFormatting: Boolean
  separator: String
  storeAsAttachment: Boolean
  supportRoundtrip: Boolean

  """
  ISO 8601 time offset to be applied for date filters (createdOn, lastModifiedOn). If not set, no offset is applied.
  """
  timeOffset: String
  viewId: String!
}

type ExportViewToExcel {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The actual job running the export."""
  job: Job
}

input ExportViewToExcelRequest {
  """
  Additional (temporary) filters in an object form. They will be added to the filters present in the view.
  """
  additionalFilters: [Filter]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  fileName: String
  includeHeaderRow: Boolean
  removeFormatting: Boolean
  sheetName: String
  storeAsAttachment: Boolean
  supportRoundtrip: Boolean

  """
  ISO 8601 time offset to be applied for date filters (createdOn, lastModifiedOn). If not set, no offset is applied.
  """
  timeOffset: String
  viewId: String!
  xlsx: Boolean
}

type FeatureToggleDefinitionType implements node {
  """The description of the feature toggle"""
  description: String

  """A dummy random  id for the featureToggles"""
  id: ID

  """The name of the feature toggle"""
  name: String

  """The spelexpression used to retrieve the value of the feature toggle"""
  spelExpression: String

  """The type of feature toggle"""
  type: String

  """The feature toggle value true|false"""
  value: Boolean
}

input Field {
  path: String
}

type FileInfo implements node {
  contentType: String

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The description of the Object"""
  description: String
  fileExtension: String
  fileId: String
  fileName: String
  fileSize: Long

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The Name of the Object"""
  name: String

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

input Filter {
  field: Field
  inheritance: Boolean
  metaIncluded: Boolean = false
  operator: FilterOperator
  values: [String]
}

"""
The enumeration for a FilterOperator. Possible values are: NOT_IN IN NOT_EQUALS
EQUALS STARTS_WITH STARTS_WITH_DIGIT NOT_STARTS_WITH ENDS_WITH NOT_ENDS_WITH
CONTAINS NOT_CONTAINS EXISTS NOT_EXISTS GREATER LESS GREATER_OR_EQUALS
LESS_OR_EQUALS LAST_DAYS
"""
enum FilterOperator {
  CONTAINS
  ENDS_WITH
  EQUALS
  EXISTS
  GREATER
  GREATER_OR_EQUALS
  IN
  LAST_DAYS
  LESS
  LESS_OR_EQUALS
  NOT_CONTAINS
  NOT_ENDS_WITH
  NOT_EQUALS
  NOT_EXISTS
  NOT_IN
  NOT_STARTS_WITH
  STARTS_WITH
  STARTS_WITH_DIGIT
}

"""
The enumeration for a FindSchemaPropertiesFilterField. Possible values are: NAME
"""
enum FindSchemaPropertiesFilterField {
  NAME
}

input FindSchemaPropertiesForDatabaseRequest {
  """Id of database"""
  databaseId: ID

  """Filter field"""
  filterField: FindSchemaPropertiesFilterField

  """Filter query"""
  filterQuery: String

  """Limit"""
  limit: Int = 100

  """Offset"""
  offset: Int = 0

  """Sort field"""
  sortField: FindSchemaPropertiesSortField = NAME

  """Sort order"""
  sortOrder: FindSchemaPropertiesSortOrder = ASC
}

"""
The enumeration for a FindSchemaPropertiesSortField. Possible values are: NAME HARVEST_DQ_INFO
"""
enum FindSchemaPropertiesSortField {
  HARVEST_DQ_INFO
  NAME
}

"""
The enumeration for a FindSchemaPropertiesSortOrder. Possible values are: ASC DESC
"""
enum FindSchemaPropertiesSortOrder {
  ASC
  DESC
}

input FindTailOfRelationTraceRequest {
  applyRelationTraceOnTarget: Boolean = true
  assetsToApplyTraceOnIds: [ID]!
  relationTraceEntries: [inputFindRelationTraceEntry]!
  relationTypeId: ID!
}

input FindWorkflowDefinitionsRequest {
  assetId: [ID]
  communityId: [ID]
  description: String
  domainId: [ID]
  enabled: Boolean
  global: Boolean
  limit: Int = 50
  name: String
  offset: Int = 0
  sortOrder: SortOrder
}

input FindWorkflowsRequest {
  assetIds: [ID]!
}

input FindWorkflowTasksRequest {
  """The ID of the business item."""
  businessItemId: ID

  """The part of the name of the business item."""
  businessItemName: String

  """The type of the business item."""
  businessItemType: BusinessItemType

  """
  The creation date of the task. It is the timestamp (in UTC time standard)
  """
  createDate: Long

  """The part of the task description."""
  description: String

  """The due date of the task. It is the timestamp (in UTC time standard)"""
  dueDate: Long

  """
  The maximum number of results to retrieve. If not set, the default limit will be used.
  """
  limit: Int

  """
  The first result to retrieve. If not set, results will be retrieved starting from row 0.
  """
  offset: Int

  """The field on which the results are sorted. On due date by default."""
  sortField: SortField

  """The sorting order."""
  sortOrder: SortOrder

  """The title/name of the task."""
  title: String

  """The task type."""
  type: String

  """
  The ID of the user for which the tasks need to be returned. If empty, the current logged in user will be used.
  """
  userId: ID

  """
  The type of relation between user and searched tasks. This could be either set
  to search for all the tasks the user is permitted to view or just those
  assigned to the user.
  """
  workflowTaskUserRelation: WorkflowTaskUserRelation
}

interface ForeignCredential {
  id: ID
  serviceIdentifier: String
  user: String
}

type FormProperty implements node {
  """the asset type"""
  assetType: AssetType

  """the type of datetime"""
  dateTimeType: String

  """the default dropdown values"""
  defaultDropdownValues: [DropdownValue]

  """A field indicating if the formproperty is default or not"""
  defaultFromResource: Boolean

  """the enumeration values of the form property"""
  enumValues: [DropdownValue]

  """The unique identifier"""
  id: ID

  """the default dropdown values for a multi"""
  multiDefaultDropdownValues: [ResourceTypedDropdownValues]

  """the proposed values of a multi dropdown value"""
  multiProposedDropdownValues: [ResourceTypedDropdownValues]

  """A field indicating wether the formproperty is multiValue or not"""
  multiValue: Boolean

  """the name of the form property"""
  name: String

  """the id of form property"""
  propertyId: String

  """the proposed dropdown values"""
  proposedDropdownValues: [DropdownValue]

  """A field indicating if the formproperty is proposedFixed or not"""
  proposedFixed: Boolean

  """A field indicating if the formproperty is required or not"""
  required: Boolean

  """the type of the form property"""
  type: String

  """the value of the form property"""
  value: String

  """A field indicating if the formproperty is writeable"""
  writable: Boolean
}

"""The enumeration for a Gender. Possible values are: MALE FEMALE UNKNOWN"""
enum Gender {
  FEMALE
  MALE
  UNKNOWN
}

type GlobalCreateAssetTypes {
  assetTypes: [AssetType]
  topLevelAssetType: AssetType
}

type GlobalCreateDomainTypes {
  domainTypes: [DomainType]
  topLevelDomainType: DomainType
}

"""The main root guided stewardship type"""
type GuidedStewardshipType implements node {
  """A dummy hardcoded id for the guided stewardship"""
  id: ID
  physicalDataConnector: PhysicalDataConnectorType
}

type HelpMenuItem {
  """The index of the HelpMenuItem, determines the order of the menu items"""
  index: Int

  """The name of the HelpMenuItem"""
  name: String

  """
  Indicates wheter this menuItem should be shown only to Admin users, or to everybody.
  """
  showAdminOnly: Boolean

  """The URL of the HelpMenuItem"""
  url: String
}

input ImportCsvInJobInput {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  request: InternalImportCsvInJobRequest
}

type ImportCsvInJobOutput {
  clientMutationId: String
  job: Job
}

input ImportExcelInJobInput {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  request: InternalImportExcelInJobRequest
}

type ImportExcelInJobOutput {
  clientMutationId: String
  job: Job
}

input ImportParameters {
  assetStrategy: ResourceOperationStrategy
  attributeStrategy: CollectionUpdateStrategy
  deleteNonExistingAssets: Boolean
  enableWorkflows: Boolean
  relationStrategy: CollectionUpdateStrategy
  resourceTypeParameters: [ResourceTypeParameters]
  responsibilityStrategy: CollectionUpdateStrategy
}

input inputFindRelationTraceEntry {
  relationTypeId: ID!
  roleDirection: Boolean!
}

input InternalGetColumnNamesFromCsvRequest {
  escape: Char
  fileId: String
  ignoreLeadingWhitespace: Boolean
  quote: Char
  separator: Char
  strictQuotes: Boolean
}

input InternalGetColumnNamesFromExcelRequest {
  fileId: String
  sheetIndex: Int
  sheetName: String
}

input InternalImportCsvInJobRequest {
  """
  <i>The batchSize parameter is now deprecated and is ignored during command execution.</i>
  """
  batchSize: Int

  """
  Delete the file from the Collibra Platform if the import / synchronization job
  is successful. <b>The default value</b> is <code>false</code><p><b>NOTE:</b>
  if the file corresponds to an attachment, the attachment will be deleted.
  """
  deleteFile: Boolean

  """
  The delimiter character used to escape separator or quote character. <b>The default value</b> is <code>'\\'</code>.
  """
  escape: Char

  """
  The <code>id</code> of uploaded file.<p><b>NOTE:</b> if this field is used, <code>file</code> should not be set.
  """
  fileId: String

  """
  The name of the file to upload. If set, then also <code>file</code> should be
  provided.<p><b>NOTE:</b> if this field is used, <code>fileId</code> should not be set.
  """
  fileName: String

  """
  Whether the first row of the imported CSV file is the header. <b>The default value</b> is <code>false</code>.
  """
  headerRow: Boolean

  """
  Whether whitespace characters before quotes should be ignored. <b>The default value</b> is <code>false</code>.
  """
  ignoreLeadingWhitespace: Boolean
  importParameters: ImportParameters

  """
  The delimiter character used for quoted entries. <b>The default value</b>  is <code>'"'</code>.
  """
  quote: Char

  """
  Whether the import Result should be persisted or forgotten. <b>The default
  value</b> is <code>false</code>.<p>If <code>true</code>, the result of the
  import simulation will be available at the end of the job but no change will
  be applied to the DGC.
  """
  saveResult: Boolean

  """
  Whether job status notification should be sent. <b>The default value</b> is <code>false</code>.
  """
  sendNotification: Boolean

  """
  The delimiter character used to separate entries. <b>The default value</b> is <code>';'</code>.
  """
  separator: Char

  """
  Whether the import should be triggered as a simulation. <b>The default
  value</b> is <code>false</code>.<p>If <code>true</code>, the result of the
  import simulation will be available at the end of the job but no change will
  be applied to the DGC.
  """
  simulation: Boolean

  """
  Whether the characters outside quotes should be ignored. <b>The default value</b> is <code>false</code>.
  """
  strictQuotes: Boolean

  """
  The template that should be used for parsing and importing the contents of the CSV file.
  
  <br/><p>There is one placeholder currently supported:<ul>     <li><b>${x}</b>
  - refers to the n-th column in the CSV file, e.g. ${1}, ${2},
  ...)</li></ul><p>Example of a correct JSON template:</p>
  <pre>
  [
    {
      "resourceType": "Asset",
      "identifier": {
        "name": "${1}",
        "domain": {
          "name": "${2}",
          "community": {
            "name": "Some Community"
          }
        }
      },
      "attributes" : {
        "00000000-0000-0000-0000-000000003115" : [ {
          "value" : "${3}" 
        } ],
        "00000000-0000-0000-0000-000000000222" : [ {
          "value" : "${4}"
        } ]
      }
    }
  ]
  </pre>
  """
  template: String
}

input InternalImportExcelInJobRequest {
  """
  <i>The batchSize parameter is now deprecated and is ignored during command execution.</i>
  """
  batchSize: Int

  """
  Delete the file from the Collibra Platform if the import / synchronization job
  is successful. <b>The default value</b> is <code>false</code><p><b>NOTE:</b>
  if the file corresponds to an attachment, the attachment will be deleted.
  """
  deleteFile: Boolean

  """
  The <code>id</code> of uploaded file.<p><b>NOTE:</b> if this field is used, <code>file</code> should not be set.
  """
  fileId: String

  """
  The name of the file to upload. If set, then also <code>file</code> should be
  provided.<p><b>NOTE:</b> if this field is used, <code>fileId</code> should not be set.
  """
  fileName: String

  """
  Whether the first row of the imported Excel sheet is the header. <b>The default value</b> is <code>false</code>.
  """
  headerRow: Boolean
  importParameters: ImportParameters

  """
  Whether the import Result should be persisted or forgotten. <b>The default
  value</b> is <code>false</code>.<p>If <code>true</code>, the result of the
  import simulation will be available at the end of the job but no change will
  be applied to the DGC.
  """
  saveResult: Boolean

  """
  Whether job status notification should be sent. <b>The default value</b> is <code>false</code>.
  """
  sendNotification: Boolean

  """
  The index of the Excel sheet.
  
  <br/><p>If the index is <code>null</code> and <code>sheetName</code> is
  <code>null</code>, the first sheet of the workbook will be used for the
  import.<br/><p>If the index is <code>null</code> and <code>sheetName</code> is
  not <code>null</code>, the sheet with the name specified by value of
  <code>sheetName</code> will be used for the import.
  """
  sheetIndex: Int

  """
  The name of the Excel sheet.
  
  <br/><p>If the name is <code>null</code> and <code>sheetIndex</code> is
  <code>null</code>, the first sheet of the workbook will be used for the
  import.<br/><p>If the name is <code>null</code> and <code>sheetIndex</code> is
  not <code>null</code>, the sheet with the index specified by value of
  <code>sheetIndex</code> will be used for the import.
  """
  sheetName: String

  """
  Whether the import should be triggered as a simulation. <b>The default
  value</b> is <code>false</code>.<p>If <code>true</code>, the result of the
  import simulation will be available at the end of the job but no change will
  be applied to the DGC.
  """
  simulation: Boolean

  """
  The template that should be used for parsing and importing the contents of the Excel file.
  
  <br/><p>There is one placeholder currently supported:<ul>     <li><b>${x}</b>
  - refers to the n-th column in the Excel file, e.g. ${1}, ${2},
  ...)</li></ul><p>Example of a correct JSON template:</p>
  <pre>
  [
    {
      "resourceType": "Asset",
      "identifier": {
        "name": "${1}",
        "domain": {
          "name": "${2}",
          "community": {
            "name": "Some Community"
          }
        }
      },
      "attributes" : {
        "00000000-0000-0000-0000-000000003115" : [ {
          "value" : "${3}" 
        } ],
        "00000000-0000-0000-0000-000000000222" : [ {
          "value" : "${4}"
        } ]
      }
    }
  ]
  </pre>
  """
  template: String
}

type JdbcDriver implements node {
  connectionString: String
  connectionStringParameters: [ConnectionStringParameter]!

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long
  databaseName: String
  databaseVersion: String
  driver: String

  """The unique identifier"""
  id: ID
  jdbcDriverFiles: [JdbcDriverFile]!

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type JdbcDriverConnection {
  edges: [JdbcDriverEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type JdbcDriverEdge {
  cursor: String!
  node: JdbcDriver
}

type JdbcDriverFile implements node {
  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The description of the Object"""
  description: String
  fileName: String
  fileType: String

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The Name of the Object"""
  name: String

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

input JdbcDriverRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  connectionString: String!
  connectionStringParameters: [ConnectionStringParameterInput]!
  databaseName: String!
  databaseVersion: String!
  driver: String!
}

type JdbcIngestionProperties implements node {
  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long
  cronExpression: String
  cronTimeZone: String
  detectAdvancedDataTypes: Boolean
  executeProfiling: Boolean
  extractDataSample: Boolean

  """The unique identifier"""
  id: ID
  jdbcDriver: JdbcDriver!
  jdbcProperties: Map!
  jobServer: String

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  schema: Asset!

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
  tablesToSkip: [String]
  user: String
}

type Job implements node {
  cancelable: Boolean

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long
  endDate: Long

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  message: String

  """The Name of the Object"""
  name: String
  progressPercentage: Double
  startDate: Long

  """the state of a job"""
  state: JobState

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
  type: String
  user: User
  visibility: Int
}

type JobConnection {
  edges: [JobEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type JobCountByStatus {
  canceled: Int
  cancelling: Int
  completed: Int
  error: Int
  running: Int
  waiting: Int
}

type JobEdge {
  cursor: String!
  node: Job
}

"""
The enumeration for a JobState. Possible values are: WAITING RUNNING CANCELING COMPLETED CANCELED ERROR
"""
enum JobState {
  CANCELED
  CANCELING
  COMPLETED
  ERROR
  RUNNING
  WAITING
}

input LayoutDefinitionInput {
  """Configuration of the column layout"""
  columnLayout: ColumnLayoutInput

  """Id of the layout (tab)."""
  id: String

  """Label of the layout (tab)."""
  label: String
}

type LicenseCount {
  """The number of available seats"""
  available: Int

  """The number of given seats"""
  given: Int

  """The licenseType for this count"""
  licenseType: LicenseType

  """The number of given seats to enabled users """
  occupied: Int

  """The percentage of available seats"""
  percentageAvailable: Float

  """The number of seats in the license file"""
  total: Int
}

type LicenseCounts {
  """The number of concurrent users in the license file"""
  legacyUsers: Int

  """The licenseCount for a given LicenseType"""
  licenseCount(
    """The licenseType for which we want a count"""
    licenseType: LicenseType
  ): LicenseCount
}

"""
The enumeration for a LicenseType. Possible values are: CONSUMER AUTHOR
"""
enum LicenseType {
  AUTHOR
  CONSUMER
}

"""
The enumeration for a LogicalDataType. Possible values are: TEXT DECIMAL_NUMBER
WHOLE_NUMBER DATE TIME DATE_TIME BOOLEAN GEO ARRAY N_A
"""
enum LogicalDataType {
  ARRAY
  BOOLEAN
  DATE
  DATE_TIME
  DECIMAL_NUMBER
  GEO
  N_A
  TEXT
  TIME
  WHOLE_NUMBER
}

"""The enumeration for a LogicalOperator. Possible values are: AND OR"""
enum LogicalOperator {
  AND
  OR
}

"""Long type"""
scalar Long

type MakeRootCommunityMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The community that has been turned into a root community."""
  community: Community
}

input MakeRootCommunityRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

"""Built-in Map"""
scalar Map

"""
The enumeration for a MatchMode. Possible values are: START END ANYWHERE EXACT
"""
enum MatchMode {
  ANYWHERE
  END
  EXACT
  START
}

type MergeTagsMutation {
  clientMutationId: String
  currentView: CurrentView
}

"""Tags to be merge"""
input MergeTagsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """Id of the tag to be replaced"""
  fromId: ID!

  """Current view location"""
  location: String

  """Id of the replacement tag"""
  toId: ID!

  """Current view type"""
  viewType: String
}

type MoveAssetsMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The actual job running the move of the assets."""
  job: Job
}

input MoveAssetsRequest {
  assetIds: [ID]!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  domainId: ID!
}

input MultiChangeAttributeRequest {
  assetId: ID!
  attributeTypeId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  operations: [ChangeAttributeOperation]
}

type MultiValueListAttribute implements Attribute & node {
  asset: Asset
  createdBy: User
  createdOn: Long

  """The unique identifier"""
  id: ID
  lastModifiedBy: User
  lastModifiedOn: Long
  system: Boolean
  type: AttributeType
  valueList: [String]
}

type MultiValueListAttributeType implements AttributeType & node {
  """Lists the allowed values"""
  allowedValues: [String]
  description: String

  """The unique identifier"""
  id: ID
  name: String
  system: Boolean
}

type Mutation {
  """Accept class for column"""
  acceptClass(input: AcceptClassContributor): AcceptColumnMutation
  addAdvancedDataType(input: AddAdvancedDataTypeRequest): AddAdvancedDataTypeMutation
  addAsset(input: AddAssetRequest): AddAssetMutation
  addAssetType(input: AddAssetTypeRequest): AddAssetTypeMutation

  """Add asset type assignment rule for workflow definition."""
  addAssetTypeAssignmentRule(input: AddAssetTypeAssignmentRuleRequest): AddAssetTypeAssignmentRuleMutation
  addAssetTypes(input: AddAssetTypesRequest): AddAssetTypesMutation
  addAssetWithContent(input: AddAssetWithContentRequest): AddAssetWithContentMutation
  addAssets(input: AddAssetsRequest): AddAssetsMutation
  addAssignment(input: AddAssignmentRequest): AddAssignmentMutation
  addAttachment(input: AddAttachmentRequest): AddAttachmentMutation
  addAttributeType(input: AddAttributeTypeRequest): AddAttributeTypeMutation
  addBooleanAttribute(input: AddBooleanAttributeRequest): AddBooleanAttributeType

  """Add classification to asset"""
  addClassification(input: AddClassificationContributor): AddClassMutation
  addComment(input: AddCommentRequest): AddCommentMutation
  addCommunities(input: AddCommunitiesRequest): AddCommunitiesMutation
  addCommunity(input: AddCommunityRequest): AddCommunityMutation
  addComplexRelation(input: AddComplexRelationRequest): AddComplexRelationMutation
  addComplexRelationType(input: AddComplexRelationTypeRequest): AddComplexRelationTypeMutation
  addCrawler(input: AddCrawlerRequest): AddS3CrawlerMutation
  addDataQualityRule(input: AddDataQualityRuleRequest): AddDataQualityRuleMutation
  addDatabase(input: AddDatabaseRequest): AddDatabaseMutation
  addDateAttribute(input: AddDateAttributeRequest): AddDateAttributeType

  """Add diagram picture."""
  addDiagramPicture(input: AddDiagramPictureRequest): AddDiagramPictureMutation
  addDomain(input: AddDomainRequest): AddDomainMutation
  addDomainType(input: AddDomainTypeRequest): AddDomainTypeMutation

  """Add domain type assignment rule for workflow definition."""
  addDomainTypeAssignmentRule(input: AddDomainTypeAssignmentRuleRequest): AddDomainTypeAssignmentRuleMutation
  addDomainTypes(input: AddDomainTypesRequest): AddDomainTypesMutation
  addDomains(input: AddDomainsRequest): AddDomainsMutation
  addEdgeDataSourceToAsset(input: AddEdgeDataSourceToAssetRequest): EdgeDataSourceToAssetMutation
  addFile(input: AddFileRequest): AddFileMutation
  addJdbcDriver(input: JdbcDriverRequest): AddJdbcDriverMutation
  addMultiValueListAttribute(input: AddMultiValueListAttributeRequest): AddMultiValueListAttributeType
  addNewClassifications(input: AddClassificationsRequest): AddNewClassificationsMutation
  addNumericAttribute(input: AddNumericAttributeRequest): AddNumericAttributeType

  """Add new rating for asset"""
  addRating(input: AddRatingRequest): AddRatingMutation
  addRelation(input: AddRelationRequest): AddRelationMutation
  addRelationType(input: AddRelationTypeRequest): AddRelationTypeMutation
  addRelations(input: AddRelationsRequest): AddRelationsMutation
  addResponsibilities(input: AddResponsibilitiesRequest): AddResponsibilitiesMutation
  addRoles(input: AddRolesRequest): AddRolesMutation

  """Register an instance of S3 File System in Catalog"""
  addS3CatalogForeignCredential(input: AddS3ForeignCredentialRequest): AddS3ForeignCredentialMutation

  """Add schedule configuration of S3 File System in Catalog"""
  addS3Schedule(input: AddS3ScheduleRequest): AddS3ScheduleMutation
  addSchemaFromCsvFile(input: AddSchemaFromCsvFileRequest): AddSchemaFromCsvFileMutation
  addSchemaFromExcelFile(input: AddSchemaFromExcelFileRequest): AddSchemaFromExcelFileMutation
  addSchemaFromJdbc(input: AddSchemaFromJdbcRequest): AddSchemaFromJdbcMutation
  addScope(input: AddScopeRequest): AddScopeMutation
  addScriptAttribute(input: AddScriptAttributeRequest): AddScriptAttributeType
  addSingleValueListAttribute(input: AddSingleValueListAttributeRequest): AddSingleValueListAttributeType
  addStatus(input: AddStatusRequest): AddStatusMutation
  addStatuses(input: AddStatusesRequest): AddStatusesMutation
  addStringAttribute(input: AddStringAttributeRequest): AddStringAttributeType

  """add schedule configuration of tableau server in Catalog"""
  addTableauSchedule(input: AddTableauScheduleRequest): AddTableauScheduleMutation
  addTableauServerCredential(input: AddTableauServerCredentialRequest): AddTableauServerCredentialMutation
  addToDataBasket(input: AddToDataBasketRequest): AddToDataBasketMutation
  addUser(input: AddUserRequest): AddUserMutation

  """Adds a user group. Returns the API object and the client mutation ID."""
  addUserGroup(input: AddUserGroupRequest): AddUserGroupMutation

  """
  Adds multiple user groups. Returns the API object, and the client mutation ID.
  """
  addUserGroups(input: AddUserGroupsRequest): AddUserGroupsMutation
  addUserToGroups(input: AddUserToUserGroupsRequest): AddUserToGroupsMutation
  addUsers(input: AddUsersRequest): AddUsersMutation
  addUsersToGroup(input: AddUsersToUserGroupRequest): AddUsersToGroupMutation
  addView(input: AddViewRequest): AddViewMutation
  addViewPermissions(input: AddViewPermissionsRequest): AddViewPermissionsMutation
  alterView(input: ChangeViewRequest): AlterViewMutation
  assignScopeToOrganization(input: AssignScopeToOrganizationRequest): AssignScopeToOrganizationMutation
  bulkChangeAttributes(input: BulkChangeAttributeRequest): BulkChangeAttributesMutation

  """An async call to validate a bunch of assets.  Returns a Job"""
  bulkValidate(input: ValidateInJobRequest): BulkValidationMutation
  cancelJob(input: CancelJobRequest): CancelJob
  changeAdvancedDataType(input: ChangeAdvancedDataTypeRequest): ChangeAdvancedDataTypeMutation
  changeAsset(input: ChangeAssetRequest): ChangeAssetMutation
  changeAssetType(input: ChangeAssetTypeRequest): ChangeAssetTypeMutation
  changeAssets(input: ChangeAssetsRequest): ChangeAssetsMutation
  changeAssignment(input: ChangeAssignmentRequest): ChangeAssignmentMutation
  changeAttributeType(input: ChangeAttributeTypeRequest): ChangeAttributeTypeMutation
  changeAttributes(input: ChangeAttributesRequest): ChangeAttributesMutation
  changeBooleanAttribute(input: ChangeBooleanAttributeRequest): ChangeBooleanAttributeType
  changeBusinessContextDefaultView(input: ChangeBusinessContextTableViewRequest): ChangeBusinessContextTableDefaultView
  changeBusinessContextWorkingView(input: ChangeBusinessContextTableViewRequest): ChangeBusinessContextTableWorkingView
  changeCatalogTableDefaultView(input: ChangeRelationTableViewRequest): ChangeCatalogTableDefaultView
  changeCatalogTableWorkingView(input: ChangeRelationTableViewRequest): ChangeCatalogTableWorkingView
  changeComment(input: ChangeCommentRequest): ChangeCommentMutation
  changeCommunity(input: ChangeCommunityRequest): ChangeCommunityMutation
  changeComplexRelation(input: ChangeComplexRelationRequest): ChangeComplexRelationMutation
  changeComplexRelationTableWorkingView(input: ChangeComplexRelationTableViewRequest): ChangeComplexRelationTableWorkingView
  changeComplexRelationType(input: ChangeComplexRelationTypeRequest): ChangeComplexRelationTypeMutation
  changeCrawler(input: UpdateCrawlerRequest): ChangeS3CrawlerMutation
  changeDataProfilingTableDefaultView(input: ChangeRelationTableViewRequest): ChangeDataProfilingTableDefaultView
  changeDataProfilingTableWorkingView(input: ChangeRelationTableViewRequest): ChangeDataProfilingTableWorkingView
  changeDataQualityRule(input: ChangeDataQualityRuleRequest): ChangeDataQualityRuleMutation
  changeDatabase(input: ChangeDatabaseRequest): ChangeDatabaseMutation
  changeDateAttribute(input: ChangeDateAttributeRequest): ChangeDateAttributeType
  changeDefaultComplexRelationTableView(input: ChangeComplexRelationTableViewRequest): ChangeDefaultComplexRelationTableView
  changeDefaultRelationTableView(input: ChangeRelationTableViewRequest): ChangeDefaultRelationTableView

  """Change an existing diagram picture."""
  changeDiagramPicture(input: ChangeDiagramPictureRequest): ChangeDiagramPictureMutation
  changeDomain(input: ChangeDomainRequest): ChangeDomainMutation
  changeDomainType(input: ChangeDomainTypeRequest): ChangeDomainTypeMutation
  changeJobVisibility(input: ChangeJobVisibilityRequest): ChangeJobVisibility
  changeJobsVisibilities(input: ChangeJobsVisibilitiesRequest): ChangeJobsVisibilities
  changeMultiValueListAttribute(input: ChangeMultiValueListAttributeRequest): ChangeMultiValueListAttributeType
  changeNumericAttribute(input: ChangeNumericAttributeRequest): ChangeNumericAttributeType

  """Change rating for asset"""
  changeRating(input: ChangeRatingRequest): ChangeRatingMutation
  changeRelation(input: ChangeRelationRequest): ChangeRelationMutation
  changeRelationTableWorkingView(input: ChangeRelationTableViewRequest): ChangeRelationTableWorkingView
  changeRelationType(input: ChangeRelationTypeRequest): ChangeRelationTypeMutation
  changeRole(input: ChangeRoleRequest): ChangeRoleMutation

  """Change configuration of S3 File System in Catalog"""
  changeS3CatalogConfiguration(input: ChangeS3ConfigurationRequest): ChangeS3ConfigurationMutation

  """Register an instance of S3 File System in Catalog"""
  changeS3CatalogForeignCredential(input: ChangeS3ForeignCredentialRequest): ChangeS3ForeignCredentialMutation

  """Change schedule configuration of S3 File System in Catalog"""
  changeS3Schedule(input: ChangeS3ScheduleRequest): ChangeS3ScheduleMutation
  changeScope(input: ChangeScopeRequest): ChangeScopeMutation
  changeScriptAttribute(input: ChangeScriptAttributeRequest): ChangeScriptAttributeType
  changeSingleValueListAttribute(input: ChangeSingleValueListAttributeRequest): ChangeSingleValueListAttributeType
  changeStatus(input: ChangeStatusRequest): ChangeStatusMutation
  changeStringAttribute(input: ChangeStringAttributeRequest): ChangeStringAttributeType

  """Change schedule configuration of tableau server in Catalog"""
  changeTableauSchedule(input: ChangeTableauScheduleRequest): ChangeTableauScheduleMutation
  changeTableauServerCredential(input: ChangeTableauServerCredentialRequest): ChangeTableauServerCredentialMutation

  """Change tag"""
  changeTag(input: ChangeTagRequest): ChangeTagMutation
  changeUser(input: ChangeUserRequest): ChangeUserMutation
  changeUserAvatar(input: ChangeUserAvatarRequest): ChangeUserAvatarMutation
  changeUserEnabled(input: ChangeUserEnabledRequest): ChangeUserEnabledMutation

  """
  Changes a user group. Returns the API object, the client mutation ID and the user group that was changed.
  """
  changeUserGroup(input: ChangeUserGroupRequest): ChangeUserGroupMutation
  changeView(input: ChangeViewRequest): ChangeViewMutation
  changeVisibilityForFinishedJobs(input: ChangeVisibilityForFinishedJobsRequest): ChangeVisibilityForFinishedJobs

  """Change workflow definition."""
  changeWorkflowDefinition(input: ChangeWorkflowDefinitionRequest): ChangeWorkflowDefinitionMutation

  """Start classification job"""
  classify(input: RegisterClassifyContributor): RegisterClassifyMutation
  computeDataSetSimilarities(input: ComputeDataSetSimilaritiesInput): ComputeDataSetSimilaritiesMutation
  computeRecommenderModel(input: ComputeRecommenderModelInput): ComputeRecommenderModelMutation
  copyGlobalAssignment(input: CopyGlobalAssignmentRequest): CopyGlobalAssignmentMutation
  copyView(input: ChangeViewRequest): CopyViewMutation
  dismissBanner(input: DismissBannerRequest): DismissBannerMutation
  exportComplexRelationsToCSV(input: ExportComplexRelationsToCSVRequest): ExportComplexRelationsToCSV
  exportComplexRelationsToExcel(input: ExportComplexRelationsToExcelRequest): ExportComplexRelationsToExcel
  exportDiagramToPDF(input: ExportDiagramToPDFRequest): ExportDiagramToPDFMutation

  """An async call to export users to a CSV file.  Returns a Job"""
  exportUsers(input: ExportUsersRequest): ExportsUsersMutation
  exportViewToCSV(input: ExportViewToCSVRequest): ExportViewToCSV
  exportViewToExcel(input: ExportViewToExcelRequest): ExportViewToExcel

  """Start CSV import job"""
  importCsvInJob(input: ImportCsvInJobInput): ImportCsvInJobOutput

  """Start Excel import job"""
  importExcelInJob(input: ImportExcelInJobInput): ImportExcelInJobOutput
  makeRootCommunity(input: MakeRootCommunityRequest): MakeRootCommunityMutation
  mergeClassifications(input: ClassificationStewardshipMergeClassificationsRequest): ClassificationStewardshipMergeClassificationsMutation

  """Merge tags"""
  mergeTags(input: MergeTagsRequest): MergeTagsMutation
  moveAssets(input: MoveAssetsRequest): MoveAssetsMutation
  multiAttributeChange(input: MultiChangeAttributeRequest): ChangeMultiAttributesMutation
  profileDatabase(input: ProfileDatabaseRequest): ProfileDatabaseMutation
  refreshCsvSchema(input: RefreshCsvSchemaRequest): RefreshCsvSchemaMutation
  refreshExcelSchema(input: RefreshExcelSchemaRequest): RefreshExcelSchemaMutation
  refreshJdbcSchema(input: RefreshJdbcSchemaRequest): RefreshJdbcSchemaMutation

  """Register an instance of S3 File System in Catalog"""
  registerS3FileSystem(input: RegisterS3FileSystemRequest): RegisterS3FileSystemMutation

  """Register an instance of Tableau Server in Catalog"""
  registerTableauServer(input: RegisterTableauServerRequest): RegisterTableauServerMutation

  """Reject class for column"""
  rejectClass(input: RejectClassContributor): RejectColumnMutation

  """Release quarantined attachments in a job."""
  releaseAttachments(input: ReleaseAttachmentsInput): ReleaseAttachmentsMutation
  removeAdvancedDataTypes(input: RemoveAdvancedDataTypesRequest): RemoveAdvancedDataTypesMutation
  removeAllRatings(input: RemoveAllRatingsRequest): RemoveAllRatingsMutation
  removeAsset(input: RemoveAssetRequest): RemoveAssetMutation
  removeAssetType(input: RemoveAssetTypeRequest): RemoveAssetTypeMutation
  removeAssets(input: RemoveAssetsRequest): RemoveAssetsMutation
  removeAssignment(input: RemoveAssignmentRequest): RemoveAssignmentMutation
  removeAttachment(input: RemoveAttachmentRequest): RemoveAttachmentMutation
  removeAttribute(input: RemoveAttributeRequest): RemoveAttributeMutation
  removeAttributeType(input: RemoveAttributeTypeRequest): RemoveAttributeTypeMutation
  removeClassifications(input: ClassificationStewardshipRemoveClassificationsRequest): ClassificationStewardshipRemoveClassificationsMutation
  removeComment(input: RemoveCommentRequest): RemoveCommentMutation
  removeCommunity(input: RemoveCommunityRequest): RemoveCommunityMutation
  removeComplexRelation(input: RemoveComplexRelationRequest): RemoveComplexRelationMutation
  removeComplexRelationType(input: RemoveComplexRelationTypeRequest): RemoveComplexRelationTypeMutation
  removeConfiguredBanner(input: RemoveConfiguredBannerRequest): RemoveConfiguredBannerMutation
  removeCrawler(input: RemoveCrawlerRequest): RemoveS3CrawlerMutation
  removeDataQualityRule(input: RemoveDataQualityRuleRequest): RemoveDataQualityRuleMutation

  """Remove diagram picture."""
  removeDiagramPicture(input: RemoveDiagramPictureRequest): RemoveDiagramPictureMutation
  removeDomain(input: RemoveDomainRequest): RemoveDomainMutation
  removeDomainType(input: RemoveDomainTypeRequest): RemoveDomainTypeMutation
  removeDomains(input: RemoveDomainsRequest): RemoveDomainsMutation
  removeFromDataBasket(input: RemoveFromDataBasketRequest): RemoveFromDataBasketMutation
  removeJdbcDriver(input: RemoveJdbcDriverRequest): RemoveJdbcDriverMutation
  removeOrganizationFromScopes(input: RemoveOrganisationFromScopesRequest): RemoveOrganizationFromScopesMutation
  removeProfilingTableRule(input: RemoveProfilingTableRuleRequest): RemoveProfilingTableRuleMutation
  removeRating(input: RemoveRatingRequest): RemoveRatingMutation
  removeRelation(input: RemoveRelationRequest): RemoveRelationMutation
  removeRelationType(input: RemoveRelationTypeRequest): RemoveRelationTypeMutation
  removeRelations(input: RemoveRelationsRequest): RemoveRelationsMutation
  removeResponsibility(input: RemoveResponsibilityRequest): RemoveResponsibilityMutation
  removeRole(input: RemoveRoleRequest): RemoveRoleMutation
  removeS3Schedule(input: RemoveS3ScheduleRequest): RemoveS3ScheduleMutation
  removeScheduleConfiguration(input: RemoveScheduleConfigurationRequest): RemoveScheduleConfigurationMutation
  removeScope(input: RemoveScopeRequest): RemoveScopeMutation
  removeStatus(input: RemoveStatusRequest): RemoveStatusMutation
  removeTableauSchedule(input: RemoveTableauScheduleRequest): RemoveTableauScheduleMutation
  removeTag(input: RemoveTagRequest): RemoveTagMutation
  removeTags(input: RemoveTagsRequest): RemoveTagsMutation

  """A call to remove a single user"""
  removeUser(input: RemoveUserRequest): RemoveUserMutation
  removeUserFromGroups(input: RemoveUserFromUserGroupsRequest): RemoveUserFromGroupsMutation

  """An async call to remove a user groups in batch. Returns a Job"""
  removeUserGroups(input: RemoveUserGroupsRequest): RemoveUserGroupsMutation

  """An async call to remove a bunch of users.  Returns a Job"""
  removeUsers(input: RemoveUsersRequest): RemoveUsersMutation
  removeUsersFromGroup(input: RemoveUsersFromUserGroupRequest): RemoveUsersFromGroupMutation
  removeView(input: RemoveViewRequest): RemoveViewMutation
  removeViewPermission(input: RemoveViewPermissionRequest): RemoveViewPermissionMutation
  removeWorkflowAssignmentRule(input: RemoveWorkflowAssignmentRuleRequest): RemoveWorkflowAssignmentRuleMutation
  removeWorkflowDefinition(input: RemoveWorkflowDefinitionRequest): RemoveWorkflowDefinitionMutation
  replaceRelations(input: ReplaceRelationsRequest): ReplaceRelationsMutation
  requestPasswordReset(input: ResetPasswordRequest): RequestPasswordResetMutation
  requestSampleData(input: RequestSampleDataRequest): RequestSampleDataMutation
  resetComplexRelationTableWorkingView(input: ResetComplexRelationTableWorkingViewRequest): ResetComplexRelationTableView
  resetRelationTableWorkingView(input: ResetRelationTableWorkingViewRequest): ResetRelationTableWorkingView
  restoreDefaultConfiguration(input: RestoreDefaultConfigurationRequest): RestoreDefaultConfigurationMutation
  saveDatabaseProfilingConfiguration(input: SaveDatabaseProfilingConfigurationRequest): SaveDatabaseProfilingConfigurationMutation
  saveJdbcIngestionProperties(input: SaveJdbcIngestionPropertiesRequest): SaveJdbcIngestionPropertiesMutation

  """
  Search configuration that relates to data and metamodel (non-administrative).
  """
  searchConfiguration(input: SetSearchConfigurationRequest): SetSearchConfigurationMutation
  setConfiguredBanner(input: SetConfiguredBannerRequest): SetConfiguredBannerMutation
  setLicenseTypeForUsers(input: SetLicenseTypeRequest): SetLicenseTypeForUsersMutation
  setMatches(input: ClassificationStewardshipSetMatchesRequest): ClassificationStewardshipSetMatchesMutation
  setProfilingTableRule(input: SetProfilingTableRuleRequest): SetProfilingTableRuleMutation
  setScheduleConfiguration(input: SetScheduleConfigurationRequest): SetScheduleConfigurationMutation
  setServiceConfiguration(input: SetServiceConfigurationRequest): SetServiceConfigurationMutation
  setSubscribedToMaintenanceNotifications(input: SetSubscribedToMaintenanceNotificationsRequest): SetSubscribedToMaintenanceNotificationsMutation
  setTableRules(input: SetTableRulesRequest): SetTableRulesMutation

  """Set tags for asset"""
  setTagsForAsset(input: SetAssetTagsRequest): SetTagsForAssetMutation
  setTagsForAssets(input: SetTagsForAssetsRequest): SetTagsForAssetsMutation
  setUserGroupsForUsers(input: SetUserGroupsForUsersRequest): SetUserGroupsForUsersMutation
  stitchTableauAssets(input: StitchTableauAssetsRequest): StitchTableauAssetsMutation
  submitFeedback(input: SubmitFeedbackRequest): SubmitFeedbackMutation
  synchronizeDatabase(input: SynchronizeDatabaseRequest): SynchronizeDatabaseMutation
  synchronizeS3FileSystem(input: SynchronizeS3FileSystemRequest): SynchronizeS3FileSystemMutation
  synchronizeTableauServer(input: SynchronizeTableauServerRequest): SynchronizeTableauServerMutation
  toggleVirusScan(enabled: Boolean): Boolean
  touchView(input: TouchViewRequest): TouchViewMutation
  triggerDqSchemasSynchronization(input: TriggerDqSchemasRequest): TriggerDqSchemasMutation
  triggerLineageHarvester(input: TriggerLineageHarvesterRequest): TriggerLineageHarvesterMutation
  unStitchTableauAssets(input: UnStitchTableauAssetsRequest): UnStitchTableauAssetsMutation
  updateClassification(input: ClassificationStewardshipUpdateClassificationRequest): ClassificationStewardshipUpdateClassificationMutation
  updateColumnDataAttribute(input: PhysicalDataConnectorChangeColumnAttributeRequest): PhysicalDataConnectorColumnDataAttributeMutation
  updateJdbcDriver(input: UpdateJdbcDriverRequest): UpdateJdbcDriverMutation
  updateResponsibilities(input: UpdateResponsibilitiesRequest): UpdateResponsibilitiesMutation
  updateRolesPermissions(input: UpdateRolesPermissionsRequest): UpdateRolesPermissionsMutation
  updateSchemaHarvestDQInfo(input: UpdateSchemaHarvestDqInfoRequest): SchemaPropertiesUpdateHarvestDQInfoMutation

  """
  Cancels the workflow instance identified by the given ID with provided reason.
  """
  workflowInstanceCancel(input: WorkflowInstanceCancelInput): WorkflowInstanceCancelPayload

  """Cancels the workflow task with the specified ID with a reason."""
  workflowTaskCancel(input: WorkflowTaskCancelInput): WorkflowTaskCancelPayload

  """Reassigns a task to the given users, groups and roles."""
  workflowTaskReassign(input: WorkflowTaskReassignInput): WorkflowTaskReassignPayload

  """Cancels workflow tasks in a job."""
  workflowTasksCancel(input: WorkflowTasksCancelInput): WorkflowTasksCancelPayload
}

type NamedDescribedResourceReference implements node {
  """The description of the Object"""
  description: String

  """The unique identifier"""
  id: ID

  """The Name of the Object"""
  name: String
  resourceType: ResourceType
}

type NamedDescribedWorkflowStartEventType implements node {
  """The description of the event"""
  description: String

  """The event type"""
  eventType: String

  """The unique identifier"""
  id: ID

  """The name of the event"""
  name: String
}

type NamedResourceReference implements node {
  """The unique identifier"""
  id: ID

  """The Name of the Object"""
  name: String
  resourceType: ResourceType
}

type NavigationStatisticsAssetTypesDTO {
  """acronym for the asset."""
  acronymCode: String

  """UUID of the asset"""
  assetId: ID

  """name for the asset."""
  assetName: String

  """certification flag if exist for the asset."""
  certified: Boolean

  """color of the asset."""
  color: String

  """description for the asset."""
  description: String

  """icon code for the asset."""
  iconCode: String

  """last viewed time ."""
  lastViewedDate: Long

  """type which is TE all the time as we are selecting terms."""
  resourceType: String

  """symbol type of the asset."""
  symbolType: String
}

type NavigationStatisticsAssetTypesDTOConnection {
  edges: [NavigationStatisticsAssetTypesDTOEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type NavigationStatisticsAssetTypesDTOEdge {
  cursor: String!
  node: NavigationStatisticsAssetTypesDTO
}

interface node {
  id: ID
}

type Notification implements node {
  """True if this notification is closable by the user. Otherwise false."""
  closable: Boolean

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The duration (in milliseconds) for which this notification is visible."""
  duration: Long

  """True if this notification is enabled. Otherwise false."""
  enabled: Boolean

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The notification level"""
  level: NotificationLevel

  """The actual (optional) message for the notification."""
  message: String

  """
  True if this notification will be removed automatically on restart. Otherwise false.
  """
  removeOnRestart: Boolean

  """The (optional) list of roles the user must have to see this message."""
  roles: [String]

  """The source of the notification"""
  source: NotificationSource

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean

  """The title for the notification."""
  title: String

  """The timestamp from when this notification is visible."""
  visibleFrom: Long
}

type NotificationConnection {
  edges: [NotificationEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type NotificationEdge {
  cursor: String!
  node: Notification
}

"""
The enumeration for a NotificationLevel. Possible values are: INFO WARN ERROR
"""
enum NotificationLevel {
  ERROR
  INFO
  WARN
}

"""
The enumeration for a NotificationSource. Possible values are: SYSTEM CLOUD_ADMIN ADMIN
"""
enum NotificationSource {
  ADMIN
  CLOUD_ADMIN
  SYSTEM
}

type NumericAttribute implements Attribute & node {
  asset: Asset
  createdBy: User
  createdOn: Long
  doubleValue: Double

  """The unique identifier"""
  id: ID
  lastModifiedBy: User
  lastModifiedOn: Long
  system: Boolean
  type: AttributeType
}

type NumericAttributeType implements AttributeType & node {
  description: String

  """The unique identifier"""
  id: ID

  """Indicates whether this number is an integer or not"""
  isInteger: Boolean
  name: String

  """Indicates whether statistics are enabled or not"""
  statisticsEnabled: Boolean
  system: Boolean
}

type Organization implements node {
  id: ID
  name: String
}

union OrganizationModel = Community | Domain

type OrganizationWithScope {
  organization: OrganizationModel
  scopes: [Scope]
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

"""
The enumeration for a PasswordResetMode. Possible values are: SEND_LINK GENERATE SPECIFY
"""
enum PasswordResetMode {
  GENERATE
  SEND_LINK
  SPECIFY
}

"""
The enumeration for a Permission. Possible values are: EDGE EDGE_SITE_CONNECT
EDGE_SITE_MANAGE EDGE_SITE_ADMINISTER EDGE_INTEGRATION_CAPABILITY_MANAGE
EDGE_VIEW_CONNECTIONS_AND_CAPABILITIES ASSET_GRID_ADMINISTRATION ATTACHMENT_ADD
ATTACHMENT_CHANGE ATTACHMENT_REMOVE COMMENT_ADD COMMENT_CHANGE COMMENT_REMOVE
RATING_ADD RATING_CHANGE RATING_REMOVE COMMUNITY_ADD COMMUNITY_CHANGE
COMMUNITY_REMOVE COMMUNITY_CONFIGURE_EXTERNAL_SYSTEM
COMMUNITY_RESPONSIBILITY_ADD COMMUNITY_RESPONSIBILITY_CHANGE
COMMUNITY_RESPONSIBILITY_REMOVE DOMAIN_ADD DOMAIN_CHANGE DOMAIN_REMOVE
DOMAIN_RESPONSIBILITY_ADD DOMAIN_RESPONSIBILITY_CHANGE
DOMAIN_RESPONSIBILITY_REMOVE WORKFLOW_MANAGE ASSET_ADD ASSET_CHANGE ASSET_REMOVE
ASSET_STATUS_CHANGE ASSET_TYPE_CHANGE ASSET_TAG_CHANGE ASSET_ATTRIBUTE_ADD
ASSET_ATTRIBUTE_CHANGE ASSET_ATTRIBUTE_REMOVE ASSET_RESPONSIBILITY_ADD
ASSET_RESPONSIBILITY_CHANGE ASSET_RESPONSIBILITY_REMOVE VIEW_PERMISSIONS_CHANGE
BUSINESS_SEMANTICS_GLOSSARY REFERENCE_DATA_MANAGER DATA_STEWARDSHIP_MANAGER
SYSTEM_ADMINISTRATION USER_ADMINISTRATION WORKFLOW_ADMINISTRATION DATA_HELPDESK
POLICY_MANAGER DATA_DICTIONARY CATALOG WORKFLOW_MANAGE_ALL
WORKFLOW_MESSAGE_EVENTS_USE VIEW_PERMISSIONS_VIEW_ALL VIEW_MANAGE VIEW_SHARE
VIEW_MANAGE_ALL ADVANCED_DATA_TYPE_ADD ADVANCED_DATA_TYPE_EDIT
ADVANCED_DATA_TYPE_REMOVE TAGS_VIEW TAGS_MANAGE VALIDATION_EXECUTION ACCESS_DATA
VIEW_SAMPLES RELATION_TYPE_ADD RELATION_TYPE_REMOVE RELATION_TYPE_CHANGE
REGISTER_PROFILING_INFORMATION REPORTING_DOWNLOAD_INSIGHTS_DATA
REPORTING_VIEW_INSIGHTS_REPORTS INSIGHTS_VIEW INSIGHTS_EDIT INSIGHTS_ADMIN
TECHNICAL_LINEAGE LOGS_VIEW RESOURCE_MANAGE_ALL CONFIGURATION_VIEW
CONFIGURATION_EDIT BACKSTORE_VIEW BACKSTORE_EDIT ASSESSMENTS
"""
enum Permission {
  ACCESS_DATA
  ADVANCED_DATA_TYPE_ADD
  ADVANCED_DATA_TYPE_EDIT
  ADVANCED_DATA_TYPE_REMOVE
  ASSESSMENTS
  ASSET_ADD
  ASSET_ATTRIBUTE_ADD
  ASSET_ATTRIBUTE_CHANGE
  ASSET_ATTRIBUTE_REMOVE
  ASSET_CHANGE
  ASSET_GRID_ADMINISTRATION
  ASSET_REMOVE
  ASSET_RESPONSIBILITY_ADD
  ASSET_RESPONSIBILITY_CHANGE
  ASSET_RESPONSIBILITY_REMOVE
  ASSET_STATUS_CHANGE
  ASSET_TAG_CHANGE
  ASSET_TYPE_CHANGE
  ATTACHMENT_ADD
  ATTACHMENT_CHANGE
  ATTACHMENT_REMOVE
  BACKSTORE_EDIT
  BACKSTORE_VIEW
  BUSINESS_SEMANTICS_GLOSSARY
  CATALOG
  COMMENT_ADD
  COMMENT_CHANGE
  COMMENT_REMOVE
  COMMUNITY_ADD
  COMMUNITY_CHANGE
  COMMUNITY_CONFIGURE_EXTERNAL_SYSTEM
  COMMUNITY_REMOVE
  COMMUNITY_RESPONSIBILITY_ADD
  COMMUNITY_RESPONSIBILITY_CHANGE
  COMMUNITY_RESPONSIBILITY_REMOVE
  CONFIGURATION_EDIT
  CONFIGURATION_VIEW
  DATA_DICTIONARY
  DATA_HELPDESK
  DATA_STEWARDSHIP_MANAGER
  DOMAIN_ADD
  DOMAIN_CHANGE
  DOMAIN_REMOVE
  DOMAIN_RESPONSIBILITY_ADD
  DOMAIN_RESPONSIBILITY_CHANGE
  DOMAIN_RESPONSIBILITY_REMOVE
  EDGE
  EDGE_INTEGRATION_CAPABILITY_MANAGE
  EDGE_SITE_ADMINISTER
  EDGE_SITE_CONNECT
  EDGE_SITE_MANAGE
  EDGE_VIEW_CONNECTIONS_AND_CAPABILITIES
  INSIGHTS_ADMIN
  INSIGHTS_EDIT
  INSIGHTS_VIEW
  LOGS_VIEW
  POLICY_MANAGER
  RATING_ADD
  RATING_CHANGE
  RATING_REMOVE
  REFERENCE_DATA_MANAGER
  REGISTER_PROFILING_INFORMATION
  RELATION_TYPE_ADD
  RELATION_TYPE_CHANGE
  RELATION_TYPE_REMOVE
  REPORTING_DOWNLOAD_INSIGHTS_DATA
  REPORTING_VIEW_INSIGHTS_REPORTS
  RESOURCE_MANAGE_ALL
  SYSTEM_ADMINISTRATION
  TAGS_MANAGE
  TAGS_VIEW
  TECHNICAL_LINEAGE
  USER_ADMINISTRATION
  VALIDATION_EXECUTION
  VIEW_MANAGE
  VIEW_MANAGE_ALL
  VIEW_PERMISSIONS_CHANGE
  VIEW_PERMISSIONS_VIEW_ALL
  VIEW_SAMPLES
  VIEW_SHARE
  WORKFLOW_ADMINISTRATION
  WORKFLOW_MANAGE
  WORKFLOW_MANAGE_ALL
  WORKFLOW_MESSAGE_EVENTS_USE
}

type PhoneNumber implements node {
  """The unique identifier"""
  id: ID
  phoneNumber: String

  """The type of phone number"""
  type: PhoneType
}

"""
The enumeration for a PhoneType. Possible values are: FAX MOBILE OTHER PAGER PRIVATE WORK
"""
enum PhoneType {
  FAX
  MOBILE
  OTHER
  PAGER
  PRIVATE
  WORK
}

type PhysicalDataConnectorAsset implements node {
  """Type of this asset"""
  assetType: PhysicalDataConnectorAssetType

  """Classifications list"""
  classesForAsset: [PhysicalDataConnectorClassification]

  """UUID of this asset"""
  id: ID

  """Name of this asset"""
  name: String
}

type PhysicalDataConnectorAssetType implements node {
  """Acronym of this type of asset"""
  acronym: String

  """Color of this type of asset"""
  color: String

  """Icon of this type of asset"""
  icon: String

  """UUID of this asset type"""
  id: ID

  """Symbol of this type of asset"""
  symbolType: String
}

input PhysicalDataConnectorChangeColumnAttributeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The UUID of the column to update"""
  columnId: String!

  """The UUID of the data attribute to set, null to remove"""
  dataAttributeId: String
}

type PhysicalDataConnectorClassification implements node {
  """UUID of classification"""
  classificationId: String

  """UUID of this match classification"""
  id: ID

  """Label of classification"""
  label: String

  """Percentage of classification"""
  percentage: String

  """Status of classification"""
  status: String
}

type PhysicalDataConnectorColumnDataAttributeMutation {
  clientMutationId: String

  """Updated column data"""
  row: PhysicalDataConnectorData
}

type PhysicalDataConnectorContext implements node {
  """Data domain in the context"""
  dataDomain: PhysicalDataConnectorAsset

  """Data entity in the context"""
  dataEntity: PhysicalDataConnectorAsset

  """UUID of this context"""
  id: ID
}

type PhysicalDataConnectorData implements node {
  """Asset"""
  asset: PhysicalDataConnectorAsset

  """Context"""
  context: PhysicalDataConnectorContext

  """Data Attribute"""
  dataAttribute: PhysicalDataConnectorDataAttribute

  """True if asset has children, false otherwise"""
  hasChildren: Boolean

  """UUID of the asset in this response"""
  id: ID
}

type PhysicalDataConnectorDataAttribute implements node {
  """UUID of this data attribute"""
  id: ID

  """Name of this data attribute"""
  name: String
}

input PhysicalDataConnectorDataAttributesRequest {
  """Id of data domain"""
  dataDomainId: ID

  """Id of data entity"""
  dataEntityId: ID

  """Limit"""
  limit: Int

  """Name of data entity"""
  name: String

  """Offset"""
  offset: Int
}

type PhysicalDataConnectorDataConnection {
  edges: [PhysicalDataConnectorDataEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

input PhysicalDataConnectorDataDomainsRequest {
  """Id of data entity"""
  dataEntityId: ID

  """Limit"""
  limit: Int

  """Name of data domain"""
  name: String

  """Offset"""
  offset: Int
}

type PhysicalDataConnectorDataEdge {
  cursor: String!
  node: PhysicalDataConnectorData
}

input PhysicalDataConnectorDataEntitiesRequest {
  """Id of data domain"""
  dataDomainId: ID

  """Limit"""
  limit: Int

  """Name of data entity"""
  name: String

  """Offset"""
  offset: Int
}

input PhysicalDataConnectorDataRequest {
  """Limit"""
  limit: Int = 100

  """Offset"""
  offset: Int = 0

  """Id of parent"""
  parentId: ID
}

"""The main root physical data connector type"""
type PhysicalDataConnectorType implements node {
  data(input: PhysicalDataConnectorDataRequest): PhysicalDataConnectorDataConnection
  dataAttributes(input: PhysicalDataConnectorDataAttributesRequest): PhysicalDataConnectorDataConnection
  dataDomains(input: PhysicalDataConnectorDataDomainsRequest): PhysicalDataConnectorDataConnection
  dataEntities(input: PhysicalDataConnectorDataEntitiesRequest): PhysicalDataConnectorDataConnection

  """A dummy hardcoded id for the physical data connector"""
  id: ID
}

type ProfileDatabaseMutation {
  clientMutationId: String

  """The database profiling job"""
  job: Job
}

input ProfileDatabaseRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """the database asset id"""
  databaseId: ID!
}

type ProfilingSchema {
  """The asset id of the schema asset"""
  assetId: String

  """Does the schema has rules assigned to it"""
  hasRules: Boolean

  """The name of the schema"""
  name: String
}

type ProfilingTableRule {
  """A list of tables to exclude"""
  exclude: String

  """A list of tables to include"""
  include: String

  """Define the kind of profiling"""
  profilingType: ProfilingType

  """The sample size when using push down sampling"""
  sampleSize: Int
}

input ProfilingTableRuleInput {
  """A list of tables to exclude"""
  exclude: String

  """A list of tables to include"""
  include: String

  """The kind of profiling to run"""
  profilingType: ProfilingType!

  """The sample size when using push down sampling"""
  sampleSize: Int
}

"""
The enumeration for a ProfilingType. Possible values are: FULL SAMPLE NONE
"""
enum ProfilingType {
  FULL
  NONE
  SAMPLE
}

type Query {
  api: ApiType
  node(id: ID): node
}

type QuickSearchResultForCategoriesHits {
  hitsCount: Int
  type: String
}

type QuickSearchResultForFilterHits {
  hitsCount: Int
  view: View
}

type QuickSearchResultForFilterHitsConnection {
  edges: [QuickSearchResultForFilterHitsEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type QuickSearchResultForFilterHitsEdge {
  cursor: String!
  node: QuickSearchResultForFilterHits
}

type QuickSearchResultForTopResults implements node {
  avatarUrl: String
  id: ID
  name: String
  symbolData: SymbolData
  type: String
}

type QuickSearchResultForTopResultsConnection {
  edges: [QuickSearchResultForTopResultsEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type QuickSearchResultForTopResultsEdge {
  cursor: String!
  node: QuickSearchResultForTopResults
}

type Rating implements node {
  asset: Asset
  comments(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int

    """The optional id of the parent comment to get the replies from."""
    parentId: ID

    """
    A boolean value indicating whether we are looking for Root comments or not
    """
    rootComment: Boolean

    """
    Specifies the order for the comments (by creation date). Can be either 'ASC or 'DESC
    """
    sortOrder: String = "ASC"

    """The optional id of the user to get the comments from.."""
    userId: ID
  ): CommentConnection

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  rating: Float
  review: String

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type RatingConnection {
  edges: [RatingEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type RatingDistribution {
  chunk: Int
  count: Long
}

type RatingEdge {
  cursor: String!
  node: Rating
}

input RecentlyViewedAssetTypesRequest {
  assetTypes: [String]
  first: Int!
  offset: Int!
}

input RecommendationRequest {
  itemId: String!
  limit: Int!
  offset: Int!
  useCase: RecommendationUseCase
}

"""
The enumeration for a RecommendationUseCase. Possible values are: RECOMMEND_DATASET_FOR_USER RECOMMEND_ASSET_FOR_DATASET
"""
enum RecommendationUseCase {
  RECOMMEND_ASSET_FOR_DATASET
  RECOMMEND_DATASET_FOR_USER
}

type RefreshCsvSchemaMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The job that creates a schema"""
  job: Job
}

input RefreshCsvSchemaRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  detectAdvancedDataTypes: Boolean
  escape: String
  executeProfiling: Boolean
  extractDataSample: Boolean
  fileId: ID!
  fileLocation: String
  jobServer: String
  quote: String
  schemaId: ID!
  separator: String
}

type RefreshExcelSchemaMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The job that creates a schema"""
  job: Job
}

input RefreshExcelSchemaRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  detectAdvancedDataTypes: Boolean
  executeProfiling: Boolean
  extractDataSample: Boolean
  fileId: ID!
  fileLocation: String
  jobServer: String
  schemaId: ID!
}

type RefreshJdbcSchemaMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The job that creates a schema"""
  job: Job
}

input RefreshJdbcSchemaRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  cronExpression: String
  cronTimeZone: String
  detectAdvancedDataTypes: Boolean
  executeProfiling: Boolean
  extractDataSample: Boolean
  jdbcConnectionString: String
  jdbcDriverId: ID!
  jobServer: String
  overridePassword: Boolean!
  password: String
  properties: Map!
  schemaId: ID!
  storeCredentials: Boolean
  tablesToSkip: [String]
  user: String
}

"""The request object for registering classification job"""
input RegisterClassifyContributor {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The UUID of column, table, data set or schema to start classifying"""
  id: String!
}

type RegisterClassifyMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  job: Job
}

"""The Asset representing the registered S3 FileSystem instance"""
type RegisterS3FileSystemMutation {
  """The api"""
  api: ApiType

  """The asset representing a S3 FileSystem instance"""
  asset: Asset
  clientMutationId: String

  """The domain of the new asset."""
  domain: Domain
}

"""The request object for registering an instance of S3 file system"""
input RegisterS3FileSystemRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The owner (id) of the S3 file system instance"""
  dataOwnerId: ID!

  """A description of the S3 file system instance"""
  description: String

  """The Community (id) the S3 file system instance is added to"""
  parentCommunityId: ID!

  """The name of the S3 file system instance"""
  s3FileSystemName: String!
}

"""The Asset representing the registered Tableau Server instance"""
type RegisterTableauServerMutation {
  """The api"""
  api: ApiType

  """The asset representing a Tableau Server instance"""
  asset: Asset
  clientMutationId: String

  """The domain of the new asset."""
  domain: Domain
}

"""The request object for registering an instance of Tableau Server"""
input RegisterTableauServerRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The owner (id) of the Tableau server instance"""
  dataOwnerId: ID!

  """A description of the Tableau Server instance"""
  description: String

  """The Community (id) the Tableau Server instance is added to"""
  parentCommunityId: ID!

  """The name of the Tableau Server instance"""
  serverName: String!
}

input RejectClassContributor {
  """The UUID of the asset to update"""
  assetId: String!

  """The UUID of class to reject"""
  classId: String!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
}

type RejectColumnMutation {
  """The asset for which class was accepted"""
  asset: Asset
  clientMutationId: String
}

type Relation implements node {
  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long
  endingDate: Long

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  source: Asset
  startingDate: Long

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
  target: Asset
  type: RelationType
}

type RelationConnection {
  edges: [RelationEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

input RelationDefinition {
  assetId: ID
  endingDate: Long
  relationTypeId: ID!
  role: RelationRole
  startingDate: Long
}

type RelationEdge {
  cursor: String!
  node: Relation
}

"""
The enumeration for a RelationRole. Possible values are: SOURCE TARGET SELF
"""
enum RelationRole {
  SELF
  SOURCE
  TARGET
}

type RelationTrace {
  relationTraceEntries: [RelationTraceEntry]
}

type RelationTraceEntry {
  outBoundRelationType: RelationType

  """
  The role direction of the outbound relation type of the RelationTraceEntry
  """
  outBoundRoleDirection: Boolean
  relationType: RelationType

  """The role direction of the relation type of RelationTraceEntry"""
  roleDirection: Boolean
}

input RelationTraceEntryRequest {
  relationTypeId: ID!
  roleDirection: Boolean
}

type RelationType implements node {
  coRole: String

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long
  description: String

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  possibleSources(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """full name or display name of the possible targets"""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): AssetConnection
  possibleTargets(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """full name or display name of the possible targets"""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): AssetConnection
  role: String
  sourceType: AssetType

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
  targetType: AssetType
}

type RelationTypeAssignedToAsset implements node {
  asset: Asset
  assetTableOutput(
    """
    Additional (temporary) filters in an object form. They will be added to the filters present in the view.
    """
    additionalFilters: [Filter]

    """
    Limit the total count of results to this value.  Used to increase
    performance, as a total count of 200 000 rows can be very slow while we are
    only showing 50 results.
    """
    countLimit: Long = -1

    """Indicates the directive to include or skip."""
    if: Boolean

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = -1

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): String

  """The assigned relation type for this group"""
  assignedRelationType: AssignedRelationType

  """
  the maximum relation occurrences that can be added for the relation type before reaching minimum cardinality
  """
  cardinalityLimit: Int
  id: ID

  """Role direction for instance of assignedRelationType"""
  instanceRoleDirection: RelationTypeDirection

  """the maximum cardinality"""
  max: Int

  """the minimum cardinality"""
  min: Int

  """The view for the relation table"""
  view: View
}

type RelationTypeConnection {
  edges: [RelationTypeEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

"""
The enumeration for a RelationTypeDirection. Possible values are: TO_SOURCE TO_TARGET BOTH NONE
"""
enum RelationTypeDirection {
  BOTH
  NONE
  TO_SOURCE
  TO_TARGET
}

type RelationTypeEdge {
  cursor: String!
  node: RelationType
}

input ReleaseAttachmentsInput {
  """The list of quarantined attachment IDs to be released."""
  attachmentIds: [ID]!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """Indicates whether or not a notification on the job should be sent"""
  sendNotification: Boolean = false
}

type ReleaseAttachmentsMutation {
  clientMutationId: String

  """The current user top level request."""
  currentUser: CurrentUser

  """The actual job running the release of attachments."""
  job: Job
}

type RemoveAdvancedDataTypesMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The actual job running the move of the assets."""
  job: Job
}

input RemoveAdvancedDataTypesRequest {
  advancedDataTypeIds: [ID]!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  sendNotification: Boolean = false
}

type RemoveAllRatingsMutation {
  clientMutationId: String

  """Count of removed records."""
  count: Int
}

input RemoveAllRatingsRequest {
  assetTypeId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
}

type RemoveAssetMutation {
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveAssetRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveAssetsMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The actual job running the move of the assets."""
  job: Job
}

input RemoveAssetsRequest {
  assetIds: [ID]!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  sendNotification: Boolean = false
}

type RemoveAssetTypeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveAssetTypeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveAssignmentMutation {
  """The api"""
  api: ApiType

  """The original assetType of the assignment which was deleted"""
  assetType: AssetType
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveAssignmentRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveAttachmentMutation {
  clientMutationId: String
  deletedNodeId: ID

  """The current asset top level request again."""
  parent: node
}

input RemoveAttachmentRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveAttributeMutation {
  """The current parent top level request again."""
  asset: Asset

  """The attribute type assigned to the asset"""
  attributeTypeAssignedToAsset: AttributeTypeAssignedToAsset
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveAttributeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveAttributeTypeConfirmation {
  """Instance count of a type to be removed."""
  instanceCount: String

  """TypeId of a type to be removed."""
  typeId: String
}

type RemoveAttributeTypeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveAttributeTypeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID
}

type RemoveCommentMutation {
  clientMutationId: String
  deletedNodeId: ID

  """The current parent top level request again."""
  parent: CommentParent
}

input RemoveCommentRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveCommunityMutation {
  clientMutationId: String
  deletedNodeId: ID

  """The actual job running the removal of the communities."""
  job: Job
}

input RemoveCommunityRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveComplexRelationMutation {
  """The parent asset"""
  asset: Asset
  clientMutationId: String

  """The complex relation type assigned to the asset"""
  complexRelationTypeAssignedToAsset: ComplexRelationTypeAssignedToAsset
  deletedNodeId: ID
}

input RemoveComplexRelationRequest {
  assetId: ID

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveComplexRelationTypeConfirmation {
  """Instance count of a type to be removed."""
  instanceCount: String

  """TypeId of a type to be removed."""
  typeId: String
}

type RemoveComplexRelationTypeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveComplexRelationTypeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveConfiguredBannerMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
}

"""Removes a configured banner"""
input RemoveConfiguredBannerRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  type: BannerType
}

input RemoveCrawlerRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The id of the crawler"""
  crawlerId: ID!

  """The id of the S3 File System"""
  fileSystemAssetId: ID!
}

type RemoveDataQualityRuleMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveDataQualityRuleRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveDiagramPictureMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  deletedNodeId: ID
}

"""The remove diagram picture request object."""
input RemoveDiagramPictureRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The id of the DiagramPicture to be removed"""
  id: ID
}

type RemoveDomainMutation {
  clientMutationId: String
  deletedNodeId: ID

  """The actual job running the removal of the domains."""
  job: Job
}

input RemoveDomainRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveDomainsMutation {
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveDomainsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  domainIds: [ID]!
  sendNotification: Boolean = false
}

type RemoveDomainTypeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveDomainTypeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveFromDataBasketMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The logged in user's data basket"""
  dataBasket: Asset
}

input RemoveFromDataBasketRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  dataBasketItemsIds: [ID]!
}

type RemoveJdbcDriverMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveJdbcDriverRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

input RemoveOrganisationFromScopesRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  organizationId: ID!
  scopeIds: [ID]
}

type RemoveOrganizationFromScopesMutation {
  clientMutationId: String
}

type RemoveProfilingTableRuleMutation {
  clientMutationId: String
  removed: Boolean!
}

input RemoveProfilingTableRuleRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """the schema asset id"""
  schemaId: ID!
}

type RemoveRatingMutation {
  """The asset to which new rating has been assigned."""
  asset: Asset
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveRatingRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveRelationMutation {
  """The api"""
  api: ApiType

  """The current parent top level request again."""
  assetId: Asset
  clientMutationId: String

  """The to source relation type assignment assigned to the asset"""
  relationTypeAssignedToAssetToSource: RelationTypeAssignedToAsset

  """The to target relation type assignment assigned to the asset"""
  relationTypeAssignedToAssetToTarget: RelationTypeAssignedToAsset
}

input RemoveRelationRequest {
  assetId: ID

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveRelationsMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
}

input RemoveRelationsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """ID of relations to remove"""
  relations: [String]
}

type RemoveRelationTypeConfirmation {
  """Instance count of a type to be removed."""
  instanceCount: String

  """TypeId of a type to be removed."""
  typeId: String
}

type RemoveRelationTypeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveRelationTypeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveResponsibilityMutation {
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveResponsibilityRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveRoleMutation {
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveRoleRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveS3CrawlerMutation {
  """The api"""
  api: ApiType

  """The S3 File System asset"""
  asset: Asset
  clientMutationId: String
}

type RemoveS3ScheduleMutation {
  """The api"""
  api: ApiType

  """The S3 File System asset"""
  asset: Asset
  clientMutationId: String
}

input RemoveS3ScheduleRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The id of the S3 File System"""
  fileSystemAssetId: ID!
}

type RemoveScheduleConfigurationMutation {
  clientMutationId: String

  """The database schedule configuration"""
  databaseScheduleConfiguration: DatabaseSyncSchedule
}

input RemoveScheduleConfigurationRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """the database asset id"""
  databaseAssetId: ID

  """The job group name"""
  jobGroupName: DatabaseJobGroups!
}

type RemoveScopeMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveScopeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  deleteAssignments: Boolean = false
  id: ID!
}

type RemoveStatusMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  deletedNodeId: ID
}

input RemoveStatusRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type RemoveTableauScheduleMutation {
  """The api"""
  api: ApiType

  """The tableau server asset"""
  asset: Asset
  clientMutationId: String
}

input RemoveTableauScheduleRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The id of the tableau sever"""
  tableauServerId: ID!
}

type RemoveTagMutation {
  clientMutationId: String
  currentView: CurrentView
}

input RemoveTagRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """Current view location"""
  location: String

  """Id of the tag to remove"""
  tagId: ID!

  """Current view type"""
  viewType: String
}

type RemoveTagsMutation {
  clientMutationId: String
  currentView: CurrentView
}

input RemoveTagsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """Current view location"""
  location: String

  """Ids of the tags to remove"""
  tagsIds: [ID]!

  """Current view type"""
  viewType: String
}

type RemoveUserFromGroupsMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
  licenseCounts(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): LicenseCounts
}

input RemoveUserFromUserGroupsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  userGroupIds: [ID]!
  userId: ID!
}

type RemoveUserGroupsMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The job running the bulk removal of user groups."""
  job: Job
  licenseCounts(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): LicenseCounts
}

"""The remove user groups request object"""
input RemoveUserGroupsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """Indicates whether or not a notification on the job should be sent"""
  sendNotification: Boolean = false

  """The unique identifiers of the User groups that need to be removed"""
  userGroupIds: [ID]
}

type RemoveUserMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
  deletedNodeId: ID
  licenseCounts(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): LicenseCounts
}

"""The remove user request object"""
input RemoveUserRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The unique identifier of the User that needs to be removed"""
  userId: ID!
}

type RemoveUsersFromGroupMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
  licenseCounts(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): LicenseCounts
}

input RemoveUsersFromUserGroupRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  userGroupId: ID!
  userIds: [ID]!
}

type RemoveUsersMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The job running the bulk removal of users."""
  job: Job
  licenseCounts(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): LicenseCounts
}

"""The remove users request object"""
input RemoveUsersRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """Indicates whether or not a notification on the job should be sent"""
  sendNotification: Boolean = false

  """The unique identifiers of the Users that need to be removed"""
  userIds: [ID]
}

type RemoveViewMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
  deletedNodeId: ID
}

type RemoveViewPermissionMutation {
  clientMutationId: String
  deletedNodeId: ID
}

"""The remove view permission request object"""
input RemoveViewPermissionRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  viewPermissionId: ID!
}

input RemoveViewRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID
}

type RemoveWorkflowAssignmentRuleMutation {
  clientMutationId: String

  """Workflow definition with removed assignment rule."""
  workflowDefinition: WorkflowDefinition
}

input RemoveWorkflowAssignmentRuleRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The ID of the assignment rule to be removed."""
  ruleId: ID!

  """The ID of the workflow definition containing the assignment rule."""
  workflowDefinitionId: ID!
}

type RemoveWorkflowDefinitionMutation {
  clientMutationId: String

  """The actual job running the removal of the workflow definition."""
  job: Job
}

input RemoveWorkflowDefinitionRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type ReplaceRelationsMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The job running to add/remove the responsibilities"""
  job: Job
}

input ReplaceRelationsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  endDate: Long
  inverse: Boolean!
  relationTypeId: ID
  sourceIds: [ID]!
  startDate: Long
  targetIds: [ID]!
}

type RequestPasswordResetMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
}

type RequestSampleDataMutation {
  clientMutationId: String

  """The request sample data job"""
  job: Job
}

input RequestSampleDataRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """the asset for which user request sample data"""
  id: ID!
}

type ResetComplexRelationTableView {
  """The updated complex relation group"""
  assetComplexRelationGroup: ComplexRelationTypeAssignedToAsset
  clientMutationId: String
}

input ResetComplexRelationTableWorkingViewRequest {
  assetId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  complexRelationTypeId: ID!
}

input ResetPasswordRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The specified password, mandator in case of PasswordResetMode=SPECIFY"""
  password: String

  """Indicates in what way we should reset the password"""
  passwordResetMode: PasswordResetMode = SEND_LINK

  """The id of the user for which we want to request a new password"""
  userId: ID!
}

type ResetRelationTableWorkingView {
  """The updated relation group"""
  assetRelationGroup: RelationTypeAssignedToAsset
  clientMutationId: String
}

input ResetRelationTableWorkingViewRequest {
  assetId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  relationTypeId: ID!
  roleDirection: Boolean!
}

"""
The enumeration for a ResourceOperationStrategy. Possible values are: ADD_UPDATE ADD_REPLACE UPDATE REPLACE
"""
enum ResourceOperationStrategy {
  ADD_REPLACE
  ADD_UPDATE
  REPLACE
  UPDATE
}

"""Built-in ID"""
scalar ResourceReference

"""
The enumeration for a ResourceType. Possible values are: View Asset Community
Domain AssetType DomainType Status User ClassificationMatch UserGroup Attribute
StringAttribute ScriptAttribute BooleanAttribute DateAttribute NumericAttribute
SingleValueListAttribute MultiValueListAttribute Comment Attachment
Responsibility Workflow Job Relation RelationType ComplexRelation
ComplexRelationType ArticulationRule Assignment Scope RelationTrace
ValidationRule DataQualityRule DataQualityMetric Address InstantMessagingAccount
Email PhoneNumber Website Activity FormProperty WorkflowTask ActivityChange
WorkflowInstance Role AttributeType BooleanAttributeType DateAttributeType
DateTimeAttributeType MultiValueListAttributeType NumericAttributeType
ScriptAttributeType SingleValueListAttributeType StringAttributeType
ViewSharingRule ViewAssignmentRule JdbcDriverFile JdbcDriver
JdbcIngestionProperties CsvIngestionProperties ExcelIngestionProperties
ConnectionStringParameter AssignedCharacteristicType Notification Tag
ComplexRelationLegType ComplexRelationAttributeType ComplexRelationLeg
BaseDataType AdvancedDataType DiagramPicture DiagramPictureSharingRule
DiagramPictureAssignmentRule Rating Classification PhysicalDataConnector Context
"""
enum ResourceType {
  Activity
  ActivityChange
  Address
  AdvancedDataType
  ArticulationRule
  Asset
  AssetType
  AssignedCharacteristicType
  Assignment
  Attachment
  Attribute
  AttributeType
  BaseDataType
  BooleanAttribute
  BooleanAttributeType
  Classification
  ClassificationMatch
  Comment
  Community
  ComplexRelation
  ComplexRelationAttributeType
  ComplexRelationLeg
  ComplexRelationLegType
  ComplexRelationType
  ConnectionStringParameter
  Context
  CsvIngestionProperties
  DataQualityMetric
  DataQualityRule
  DateAttribute
  DateAttributeType
  DateTimeAttributeType
  DiagramPicture
  DiagramPictureAssignmentRule
  DiagramPictureSharingRule
  Domain
  DomainType
  Email
  ExcelIngestionProperties
  FormProperty
  InstantMessagingAccount
  JdbcDriver
  JdbcDriverFile
  JdbcIngestionProperties
  Job
  MultiValueListAttribute
  MultiValueListAttributeType
  Notification
  NumericAttribute
  NumericAttributeType
  PhoneNumber
  PhysicalDataConnector
  Rating
  Relation
  RelationTrace
  RelationType
  Responsibility
  Role
  Scope
  ScriptAttribute
  ScriptAttributeType
  SingleValueListAttribute
  SingleValueListAttributeType
  Status
  StringAttribute
  StringAttributeType
  Tag
  User
  UserGroup
  ValidationRule
  View
  ViewAssignmentRule
  ViewSharingRule
  Website
  Workflow
  WorkflowInstance
  WorkflowTask
}

type ResourceTypedDropdownValues implements node {
  """the dropDownvalues"""
  dropdownValues: [DropdownValue]

  """the id"""
  id: ID

  """the resourceType"""
  resourceType: String
}

input ResourceTypeParameters {
  defaultResourceId: String
  resourceType: ResourceType
}

type Responsibility implements node {
  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The description of the Object"""
  description: String
  hasViewPermission: Boolean

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The Name of the Object"""
  name: String
  owner: ResponsibilityOwner
  resource: ResponsibilityResource
  role: Role

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type ResponsibilityConnection {
  edges: [ResponsibilityEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type ResponsibilityEdge {
  cursor: String!
  node: Responsibility
}

union ResponsibilityOwner = User | UserGroup

union ResponsibilityResource = Asset | Community | Domain

type RestoreDefaultConfigurationMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
}

input RestoreDefaultConfigurationRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
}

type ResultTypeConfiguration {
  """Custom characteristics to be present on the result tile"""
  characteristicConfigurations: [CharacteristicConfiguration]

  """Id of the result type for display configuration"""
  id: String

  """Label of the result type for display configuration"""
  label: String

  """Definition of the tab to be displayed on the result tile"""
  typeConfigurationTabs: [TypeConfigurationTab]
}

input ResultTypesConfigurationInput {
  """
  Custom characteristics (attribute types or relations) to be displayed on result tile
  """
  characteristicConfigurations: [CharacteristicConfigurationInput]

  """Id of the asset type to configure the display result."""
  id: String

  """Label of the asset type to configure the display result"""
  label: String

  """Definition of the layout """
  layoutDefinitions: [LayoutDefinitionInput]
}

type Role implements node {
  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The description of the Object"""
  description: String
  global: Boolean

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The Name of the Object"""
  name: String
  permissions: [String]

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type RoleConnection {
  edges: [RoleEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type RoleEdge {
  cursor: String!
  node: Role
}

type S3Configuration implements node {
  accessKey: String
  capabilityId: String

  """The unique identifier"""
  id: ID
  jobServer: String
  role: String
  s3FileSystemId: String
}

type S3ForeignCredential implements node {
  """The unique identifier"""
  id: ID
  role: String
  serviceIdentifier: String
  user: String
}

type SaveDatabaseProfilingConfigurationMutation {
  clientMutationId: String

  """The database profiling configuration associated to the database"""
  databaseProfilingConfiguration: DatabaseProfilingConfiguration
}

input SaveDatabaseProfilingConfigurationRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """the database id"""
  databaseId: ID!

  """The kind of profiling to run"""
  profilingType: ProfilingType!

  """Run profiling after ingestion is done"""
  runAfterIngestion: Boolean

  """The sample size when using push down sampling"""
  sampleSize: Int
}

type SaveJdbcIngestionPropertiesMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
}

input SaveJdbcIngestionPropertiesRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  cronExpression: String
  cronTimeZone: String
  detectAdvancedDataTypes: Boolean
  executeProfiling: Boolean
  extractDataSample: Boolean
  jdbcDriverId: ID!
  jobServer: String
  overridePassword: Boolean!
  password: String
  properties: Map!
  schemaId: ID!
  storeCredentials: Boolean
  tablesToSkip: [String]
  user: String
}

type Schedule implements node {
  cronExpression: String
  cronJson: String
  cronTimeZone: String
  id: ID
  lastRunTimeStamp: Long
  nextRunDateLongValue: Long
}

type Schema implements node {
  """The asset id of the schema asset if existing"""
  assetId: String

  """Does the schema has rules assigned to it"""
  hasRules: Boolean

  """The schema id"""
  id: ID

  """The name of the schema"""
  name: String

  """The synchronization status of the schema"""
  synchronizationStatus: String
}

input SchemaDqInfo {
  harvestDqInfo: Boolean!
  schemaId: ID!
}

type SchemaPropertiesData implements node {
  """Schema display name"""
  displayName: String

  """
  Information wheter or not ingestion of DQ is desired for a certain schema
  """
  harvestDQInfo: Boolean

  """UUID of the schema"""
  id: ID
}

type SchemaPropertiesDataConnection {
  edges: [SchemaPropertiesDataEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type SchemaPropertiesDataEdge {
  cursor: String!
  node: SchemaPropertiesData
}

type SchemaPropertiesUpdateHarvestDQInfoMutation {
  clientMutationId: String

  """Updated schema properties data"""
  schemaPropertiesData: [SchemaPropertiesData]
}

type Scope implements node {
  """The communityIDs linked to the scope"""
  communities: [NamedResourceReference]

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The description of the Object"""
  description: String

  """The domainIDs linked to the scope"""
  domains: [NamedResourceReference]

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The Name of the Object"""
  name: String

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type ScriptAttribute implements Attribute & node {
  asset: Asset
  createdBy: User
  createdOn: Long

  """The unique identifier"""
  id: ID
  lastModifiedBy: User
  lastModifiedOn: Long
  system: Boolean
  type: AttributeType
  value: String
}

type ScriptAttributeType implements AttributeType & node {
  description: String

  """The unique identifier"""
  id: ID

  """the script language"""
  language: String
  name: String
  system: Boolean
}

type SearchConfiguration {
  orderByOptions: [SearchField]
  resultType(
    """The id of the asset type configuration to retrieve."""
    id: ID!
  ): ResultTypeConfiguration
}

type SearchEdge {
  cursor: String!
  node: SearchResultElement!
}

type SearchField {
  """UUID for attribute type, String for always visible fields"""
  id: String

  """i18n label for field"""
  label: String
}

type SearchFieldConnection {
  edges: [SearchFieldEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type SearchFieldEdge {
  cursor: String!
  node: SearchField
}

input SearchFieldMutation {
  """UUID for attribute type, String for always visible fields"""
  id: String

  """i18n label for field"""
  label: String
}

type SearchFieldTypeProvider {
  """UUID for attribute type, String for always visible fields"""
  attributeTypes(
    fields: [String]

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """Query for narrowing results of fields"""
    query: String
  ): SearchFieldConnection

  """UUID for attribute type, String for always visible fields"""
  namedFields(fields: [String]): [SearchField]
}

input SearchFilter {
  categories: [SearchResourceType]
  communityIds: [ID]
  domainIds: [ID]

  """
  This parameter is ignored. To find metadata use the corresponding API or check in the setting.
  """
  includeMeta: Boolean
  statusIds: [ID]
  type: SearchFilterOnType
}

input SearchFilterOnType {
  assetIds: [ID]
  domainIds: [ID]
}

input SearchOrder {
  field: String
  order: SortOrder
}

input SearchRequestFacet {
  facetId: ID!
  limit: Int
  values: [String]
}

"""
The enumeration for a SearchResourceType. Possible values are: Asset Community Domain User UserGroup
"""
enum SearchResourceType {
  Asset
  Community
  Domain
  User
  UserGroup
}

type SearchResponseWithFacets {
  edges: [SearchEdge]!
  facets: [SearchResultFacet]!
  limit: Long!
  offset: Long!
  pageInfo: PageInfo!
  total: Long!
}

type SearchResultAttribute implements node {
  id: ID
  typeId: ID
  value: [String]
}

type SearchResultClassificationMatch implements node {
  collibrainClass: String
  id: ID
  percentage: Int
  status: String
}

type SearchResultComment implements node {
  authorId: ID
  id: ID
  value: String
}

type SearchResultDigContextElement implements node {
  domainId: ID
  id: ID
  value: String
}

type SearchResultElement implements node {
  attributes: [SearchResultAttribute]
  classificationMatches: [SearchResultClassificationMatch]
  comments: [SearchResultComment]
  context: SearchResultPart
  digContextElements: [SearchResultDigContextElement]
  fullName: String
  id: ID!
  lastModifiedOn: Long!
  name: SearchResultPart!
  object: SearchResultObjectType
  parentIds: [ID]
  status: String
  tags: [SearchResultPart]
  type: SearchResultPart
}

type SearchResultFacet {
  facetId: String!
  name: String!
  type: String!
  values: [SearchResultFacetPath]!
}

type SearchResultFacetPath {
  facetPathId: String!
  label: String!
  numberOfHits: Int
  type: String
}

type SearchResultFacetPathConnection {
  edges: [SearchResultFacetPathEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type SearchResultFacetPathEdge {
  cursor: String!
  node: SearchResultFacetPath
}

union SearchResultObjectType = Asset | Community | Domain | User | UserGroup

type SearchResultPart implements node {
  id: ID
  value: String
}

type ServiceConfiguration {
  """Configuration data in JSON format."""
  configuration: String

  """Configuration definition in JSON format."""
  configurationDefinition: String
}

"""The request object to set tags asset"""
input SetAssetTagsRequest {
  """Id of asset which tags will be set"""
  assetId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """List of tag names to set"""
  tagNames: [String]!
}

type SetConfiguredBannerMutation {
  """The api"""
  api: ApiType
  banner: Banner
  clientMutationId: String
}

"""Set the message of a configured banner"""
input SetConfiguredBannerRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  message: String
  type: BannerType
}

type SetLicenseTypeForUsersMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
}

input SetLicenseTypeRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The license type to which the users need to be adapted"""
  licenseType: LicenseType

  """The user ids"""
  userIds: [ID]
}

type SetProfilingTableRuleMutation {
  clientMutationId: String

  """The profiling rules associated to the schema"""
  profilingTableRule: ProfilingTableRule
}

input SetProfilingTableRuleRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The rules associated to the schema"""
  rule: ProfilingTableRuleInput

  """The schema asset id"""
  schemaId: ID!
}

type SetScheduleConfigurationMutation {
  clientMutationId: String

  """The database schedule configuration"""
  databaseScheduleConfiguration: DatabaseSyncSchedule
}

input SetScheduleConfigurationRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """the cron expression"""
  cronExpression: String!

  """the cron expression in json"""
  cronJson: String

  """the cron time zone"""
  cronTimeZone: String!

  """the database asset id"""
  databaseAssetId: ID

  """The job group name"""
  jobGroupName: DatabaseJobGroups!
}

type SetSearchConfigurationMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
}

input SetSearchConfigurationRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """
  List of custom search results sorting options over values of attributes of given attribute types.
  """
  orderByOptions: [SearchFieldMutation]

  """Result type for configuration fields to be displayed on result tiles."""
  resultType: ResultTypesConfigurationInput
}

type SetServiceConfigurationMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
}

input SetServiceConfigurationRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  configuration: String!
}

type SetSubscribedToMaintenanceNotificationsMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
}

input SetSubscribedToMaintenanceNotificationsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  value: Boolean
}

type SetTableRulesMutation {
  clientMutationId: String

  """The rules associated to the schema"""
  tableRules: [TableRule]
}

input SetTableRulesRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """the schema sync id"""
  databaseSchemaSyncId: ID!

  """The rules associated to the schema"""
  tableRules: [TableRuleInput]
}

type SetTagsForAssetMutation {
  """The asset which tags have been set."""
  asset: Asset
  clientMutationId: String
}

type SetTagsForAssetsMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The job running to add/remove the tags"""
  job: Job
}

input SetTagsForAssetsRequest {
  assetIds: [ID]!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  tagNames: [String]!
}

type SetUserGroupsForUsersMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
  licenseCounts(
    """Indicates the directive to include or skip."""
    if: Boolean
  ): LicenseCounts
}

input SetUserGroupsForUsersRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """
  Passing the userGroupIds in the bulk request will overwrite any userGroupIds set in the single requests.
  """
  userGroupIds: [ID]

  """The user ids"""
  userIds: [ID]
}

"""
The enumeration for a SortField. Possible values are: NAME SHARED_WITH LAST_MODIFIED_ON
"""
enum SharedViewSortField {
  LAST_MODIFIED_ON
  NAME
  SHARED_WITH
}

union SharedWithType = Role | User | UserGroup

type SharingRule implements node {
  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  sharedWith: SharedWithType

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

"""An input object representing a sharing rule"""
input SharingRuleRequest {
  groupId: ID
  roleId: ID
  userId: ID
}

type SingleValueListAttribute implements Attribute & node {
  asset: Asset
  createdBy: User
  createdOn: Long

  """The unique identifier"""
  id: ID
  lastModifiedBy: User
  lastModifiedOn: Long
  stringValue: String
  system: Boolean
  type: AttributeType
}

type SingleValueListAttributeType implements AttributeType & node {
  """Lists the allowed values"""
  allowedValues: [String]
  description: String

  """The unique identifier"""
  id: ID
  name: String
  system: Boolean
}

type SiteType {
  """URL pointing to the content of the Tableau Site."""
  contentUrl: String

  """The Name of the Object"""
  name: String

  """(External) id of the Tableau Site."""
  siteId: String
}

"""The SiteType and Asset referring to the same Tableau Site"""
type SiteTypeAssetPair {
  """
  The Asset representing a Tableau Site hosted by the given Tableau Server.
  """
  asset: Asset

  """
  Flag defining if images for Tableau Report will be fetched for this site.
  """
  shouldIncludeReportImages: Boolean

  """A Tableau Site hosted by the given Tableau Server."""
  siteType: SiteType
}

type solutionInfo {
  name: String
  version: String
}

"""
The enumeration for a SortField. Possible values are: DUE_DATE CREATION_DATE TITLE ITEM DESCRIPTION
"""
enum SortField {
  CREATION_DATE
  DESCRIPTION
  DUE_DATE
  ITEM
  TITLE
}

"""The enumeration for a SortOrder. Possible values are: ASC DESC"""
enum SortOrder {
  ASC
  DESC
}

type StartFormData implements node {
  """The form key."""
  formKey: String

  """The list of FormProperty."""
  formProperties: [FormProperty]

  """The unique identifier"""
  id: ID

  """
  The ID that uniquely identifies a workflow definition in the application.
  """
  processId: String
}

type Status implements node {
  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The description of the Object"""
  description: String

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The Name of the Object"""
  name: String

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type StatusConnection {
  edges: [StatusEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type StatusEdge {
  cursor: String!
  node: Status
}

type StitchTableauAssetsMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The job that stitches Tableau assets."""
  job: Job
}

input StitchTableauAssetsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

type StringAttribute implements Attribute & node {
  asset: Asset
  createdBy: User
  createdOn: Long

  """the hyperlinked String"""
  hyperlinkedString(pattern: String!): String

  """The unique identifier"""
  id: ID
  lastModifiedBy: User
  lastModifiedOn: Long

  """Get the linked assets"""
  linkedAssets(
    """Indicates the directive to include or skip."""
    if: Boolean
    matchedExpression: String
    targetIds: [ID]
  ): [Asset]
  stringValue: String
  system: Boolean
  type: AttributeType
}

type StringAttributeType implements AttributeType & node {
  description: String

  """The unique identifier"""
  id: ID
  name: String

  """The representation of the text in this StringAttributeType"""
  stringType: StringType
  system: Boolean
}

"""
The enumeration for a StringType. Possible values are: RICH_TEXT PLAIN_TEXT
"""
enum StringType {
  PLAIN_TEXT
  RICH_TEXT
}

type StructAsJsonResult {
  """Defines if the value is parsed json value or not."""
  isJsonValue: Boolean

  """
  Contains the parsed json value if isJsonValue is true, the original struct value otherwise.
  """
  value: String
}

type SubmitFeedbackMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
}

input SubmitFeedbackRequest {
  clientMutationId: String!
  feedbackRating: Float!
  itemId: String!
  providerId: String!
  useCase: RecommendationUseCase!
}

type SuggestedRelationType {
  matchMode: SuggestedRelationTypeMatchMode
  relationType: RelationType
}

"""
The enumeration for a SuggestedRelationTypeMatchMode. Possible values are: SOURCE TARGET BOTH
"""
enum SuggestedRelationTypeMatchMode {
  BOTH
  SOURCE
  TARGET
}

type SymbolData {
  acronymCode: String
  color: String
  iconCode: String
  symbolType: AssetTypeSymbolType
}

type SynchronizeDatabaseMutation {
  clientMutationId: String

  """The database synchronization job"""
  job: Job
}

input SynchronizeDatabaseRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """the database configuration id"""
  id: ID!

  """a list of database schema connection id"""
  schemaConnectionIds: [ID]
}

type SynchronizeS3FileSystemMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The job that synchronize an S3 file system."""
  job: Job
}

input SynchronizeS3FileSystemRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  s3FileSystemId: ID!
}

type SynchronizeTableauServerMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The job that synchronize Tableau server."""
  job: Job
}

input SynchronizeTableauServerRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  performFullSynchronization: Boolean = true
  serverAssetId: ID!
  serviceUrl: String!
  tableauSiteRequestParameters: [TableauSiteRequestParameters]!
}

type SystemActions {
  ldapSyncAllowed: Boolean
  rebuildAutomaticHyperlinksAllowed: Boolean
  rebuildRelationsIndexAllowed: Boolean
  rebuildSearchIndexAllowed: Boolean
  upgradeHistoryAllowed: Boolean
}

type SystemInfo {
  build: String
  freeMemory: String
  javaHome: String
  javaInfo: String
  maxMemory: String
  osInfo: String
  solutions: [solutionInfo]
  totalMemory: String
  uptime: String
  usedMemory: String
  userhome: String
  version: String
}

interface TabLayout {
  id: String

  """Type of the layout. Now only TWO_COLUMN type is supported."""
  type: TabLayoutType
}

type TabLayoutColumn {
  characteristicConfigurations: [CharacteristicConfiguration]
  id: String
}

"""The enumeration for a TabLayoutType. Possible values are: TWO_COLUMN"""
enum TabLayoutType {
  TWO_COLUMN
}

type TableauForeignCredential implements ForeignCredential & node {
  id: ID
  jobServer: String
  serviceIdentifier: String
  tableauOnline: Boolean
  urlSiteName: String
  user: String
}

type TableauSchedule implements node {
  cronExpression: String
  cronTimeZone: String
  id: ID
  lastRunTimeStamp: Long
  nextRunDateLongValue: Long
}

input TableauSiteRequestParameters {
  shouldIncludeReportImages: Boolean!
  tableauSiteIdExternal: String!
}

type TableRule {
  """The domain"""
  domain: Domain

  """A list of table to exclude"""
  exclude: String

  """A list of table to include"""
  include: String

  """The order of the rule"""
  order: Int

  """Toggle skip views"""
  skipViews: Boolean

  """The target domain"""
  targetDomain: ID
}

input TableRuleInput {
  exclude: String!
  include: String!
  order: Int!
  skipViews: Boolean!
  targetDomain: ID
}

type Tag implements node {
  assetsCount: Int

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long
  description: String

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  name: String

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type TagConnection {
  edges: [TagEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type TagEdge {
  cursor: String!
  node: Tag
}

type TaskFormData implements node {
  """the description of the workflow task"""
  description: Boolean
  formProperty: [FormProperty]

  """The unique identifier"""
  id: ID

  """subtitle"""
  subtitle: String

  """the task ID"""
  taskId: ID
}

type TechnicalLineageConfig {
  """
  Defines if given asset has data that can be used for technical lineage.
  """
  hasColumns: Boolean

  """Defines if technical lineage configuration is available."""
  isTechnicalLineageConfigDefined: Boolean
}

"""
The request object for testing a connection to a database or database schema
"""
input TestInitialJdbcConnectionRequest {
  jdbcConnectionString: String
  jdbcDriverId: ID!
  jobServer: String
  password: String
  properties: Map!
  user: String
}

"""
The request object for testing a connection to a database or database schema
"""
input TestRefreshingJdbcConnectionRequest {
  jdbcConnectionString: String
  jdbcDriverId: ID!
  jobServer: String
  overridePassword: Boolean!
  password: String
  properties: Map!
  schemaId: ID!
  user: String
}

type TouchViewMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
}

input TouchViewRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID
  resourceId: ID
}

type TriggerDqSchemasMutation {
  clientMutationId: String
}

input TriggerDqSchemasRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  databaseId: ID!
}

type TriggerLineageHarvesterMutation {
  clientMutationId: String
}

input TriggerLineageHarvesterRequest {
  assetId: ID!

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
}

type TypeConfigurationTab {
  """Id of the tab definition."""
  id: String

  """Label of the tab."""
  label: String

  """Definition of the layout."""
  layout: TabLayout
}

type UIConfiguration implements node {
  catalogRecommendationsEnabled: Boolean

  """
  This setting is for changing a theme on titlebar on all Catalog asset pages
  when Catalog Experience beta feature is turned on.
  """
  catalogTitlebarTheme: String

  """True if the Data classification is available"""
  classificationEnabled: Boolean
  dgcManagedGroups: Boolean
  diagramFlowDepth: Long
  diagramSizeLimitFrontend: Long
  diagramsBusinessQualifierFilterEnabled: Boolean

  """Indicate if a disclaimer should be displayed after login"""
  disclaimerEnabled: Boolean

  """The disclaimer message"""
  disclaimerMessage: String
  googleAnalyticsTrackingID: String
  id: ID
  idleSessionTimeout: Long
  inheritedResponsibilitiesEnabled: Boolean
  jobServerAvailable: Boolean
  jobServers: [UIJobServerInstance]

  """Is ldap enabled or not"""
  ldapEnabled: Boolean

  """Is ldap group mapping enabled or not"""
  ldapGroupMappingEnabled: Boolean
  maxFileCountPerDay: Long
  maxFileSize: Long

  """The Maximum number of columns a user can sort on"""
  maxNumberOfColumnsToSort: Long

  """Improved user experience for Catalog asset pages"""
  newCatalogExperienceEnabled: Boolean
  reportsDefinitions: [UIReportDefinition]

  """
  Feature flag enabling "dig context searching" in shop for data product.
  """
  searchDigContextSearchingEnabled: Boolean

  """
  Feature flag enabling the possibility to sort search results by defined attributes value.
  """
  searchOrderingByAttributesEnabled: Boolean

  """
  Feature flag enabling "perfect shopping experience" in shop for data product.
  """
  searchShoppingExperienceEnabled: Boolean
  showTargetAssetTypeAboveRelationTable: Boolean
  signinAutocomplete: Boolean
  signoutRedirect: Boolean
  signoutRedirectUrl: String
  ssoOrSamlEnabled: Boolean
  suppressGoogleChromeFrame: Boolean
  tableauProvisioningEnabled: Boolean
  tableauReportUrl: String
  topNavigation: Boolean
  viewRightsEnabled: Boolean

  """Indicates wether virus scanning is enabled or not."""
  virusScanEnabled: Boolean

  """
  The task sidebar replaces the task bar on resource pages. Task forms appear in
  the sidebar instead of dialog boxes. The sidebar allows for seamless
  completion of tasks from the task management pages and side-by-side view of
  the tasks and resource details on resource pages.
  """
  workflowNewViewEnabled: Boolean
}

type UIJobServerInstance implements node {
  hasEdgeRedirection: Boolean
  id: ID
  name: String
}

type UIReportDefinition implements node {
  id: ID
  reportName: String
  viewName: String
}

type UnStitchTableauAssetsMutation {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The job that un-stitches Tableau assets."""
  job: Job
}

input UnStitchTableauAssetsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  id: ID!
}

input UpdateCrawlerRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The crawler's id"""
  crawlerId: ID!

  """The domain where the data will be stored"""
  domainId: ID!

  """The paths to be included for crawling"""
  includePaths: [CrawlerIncludePathRequest]

  """The crawler's name"""
  name: String!
}

type UpdateJdbcDriverMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The JdbcDriver that has been updated"""
  jdbcDriver: JdbcDriver
}

input UpdateJdbcDriverRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  connectionString: String!
  connectionStringParameters: [ConnectionStringParameterInput]!
  databaseName: String!
  databaseVersion: String!
  driver: String!
  id: ID!
  retainedFiles: [ID]!
}

type UpdateResponsibilitiesMutation {
  """The api"""
  api: ApiType
  clientMutationId: String

  """The responsibilities that have been updated."""
  responsibilities: [Responsibility]
}

input UpdateResponsibilitiesRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  ownerIds: [ID]!
  resourceReferences: [ResourceReference]
  roleId: ID!
}

"""Grants and/or revokes permissions on a given role"""
input UpdateRolePermissionsRequest {
  """The permissions to be granted to the role"""
  grantedPermissions: [String]

  """The permissions to be revoked from the role"""
  revokedPermissions: [String]
  roleId: ID!
}

type UpdateRolesPermissionsMutation {
  """The api"""
  api: ApiType
  clientMutationId: String
}

input UpdateRolesPermissionsRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String
  permissionChangeRequests: [UpdateRolePermissionsRequest]
}

input UpdateSchemaHarvestDqInfoRequest {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """
  The list of schemaIds with the information if it was harvested in data quality
  """
  schemaDqInfo: [SchemaDqInfo]!
}

type User implements node {
  activated: Boolean
  apiUser: Boolean

  """the url where the avatar is located"""
  avatarUrl(
    """the height of the avatar"""
    height: Int!

    """the width of the avatar"""
    width: Int!
  ): String

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long
  emailAddress: String
  enabled: Boolean
  firstName: String
  gender: String
  groups(limit: Int, offset: Int): UserGroupConnection
  guestUser: Boolean

  """The unique identifier"""
  id: ID
  language: String

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  lastName: String
  ldapUser: Boolean
  licenseType: LicenseType
  phoneNumbers: [PhoneNumber]
  requiredLicenseType: LicenseType
  subscribedToMaintenanceNotifications: Boolean

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
  userName: String
  userSource: UserSource

  """
  Indicates whether the user has permission to view the current resource.
  """
  viewPermitted(resourceId: ID!, resourceType: ResourceType!): Boolean
}

type UserConnection {
  edges: [UserEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type UserEdge {
  cursor: String!
  node: User
}

type UserGroup implements node {
  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """
  A boolean field indicating whether this field is locally managed or not.
  """
  locallyManaged: Boolean

  """The Name of the Object"""
  name: String

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
  users(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """Indicates the directive to include or skip."""
    if: Boolean

    """If true, also disabled users will be included."""
    includeDisabled: Boolean

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """The name of the user to find."""
    name: String

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): UserConnection
}

type UserGroupConnection {
  edges: [UserGroupEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type UserGroupEdge {
  cursor: String!
  node: UserGroup
}

union UserOrUserGroup = User | UserGroup

type UserOrUserGroupConnection {
  edges: [UserOrUserGroupEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type UserOrUserGroupEdge {
  cursor: String!
  node: UserOrUserGroup
}

"""
The enumeration for a UserSource. Possible values are: INTERNAL LDAP SSO
"""
enum UserSource {
  INTERNAL
  LDAP
  SSO
}

"""The bulk validation request object."""
input ValidateInJobRequest {
  """The unique identifiers of the Assets that need to be validated"""
  assetIds: [ID]

  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """
  Indicates wether or not an e-mail must be sent on completion of the job
  """
  sendNotification: Boolean = false
}

type ValidationResult implements node {
  """The Asset for which this validation result was calculated"""
  asset: NamedResourceReference

  """The timestamp when the validation result was created."""
  createdOn: Long

  """The unique identifier"""
  id: ID

  """The job that generated this ValidationResult"""
  job: Job

  """The validation result message."""
  message: String

  """The result"""
  result: Boolean

  """The ResourceReference of the linked validation rule"""
  validationRule: NamedResourceReference
}

type ValidationResultConnection {
  edges: [ValidationResultEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type ValidationResultEdge {
  cursor: String!
  node: ValidationResult
}

type ValidationRuleReference implements node {
  """The description of the Object"""
  description: String

  """The unique identifier"""
  id: ID

  """The Name of the Object"""
  name: String
  resourceType: ResourceType
}

"""
The enumeration for a ValidationStatus. Possible values are: VALID INVALID NOT_VALIDATED NO_VALIDATION_RULES
"""
enum ValidationStatus {
  INVALID
  NOT_VALIDATED
  NO_VALIDATION_RULES
  VALID
}

type View implements node {
  assignmentRules: [ViewAssignmentRule]
  columnsMetadata: [ColumnMetadata]
  config: String

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long
  default: Boolean
  defaultColumnNames: Map

  """The description of the Object"""
  description: String

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  location: String

  """The Name of the Object"""
  name: String
  originalView: View
  preferred: Boolean
  sharingRules: [SharingRule]

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
  workingView: Boolean
}

type ViewAssignmentRule implements node {
  assetType: AssetType
  community: Community

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long
  domain: Domain
  domainType: DomainType

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type ViewConnection {
  edges: [ViewEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type ViewEdge {
  cursor: String!
  node: View
}

type ViewPermission implements node {
  baseResource: ViewPermissionResource

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long
  owner: ViewPermissionOwner

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

type ViewPermissionConnection {
  edges: [ViewPermissionEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type ViewPermissionEdge {
  cursor: String!
  node: ViewPermission
}

union ViewPermissionOwner = User | UserGroup

union ViewPermissionResource = Community | Domain

"""
The enumeration for a SortField. Possible values are: NAME DESCRIPTION OWNER
CREATION_DATE MODIFICATION_DATE PREFERRED SHARING_WITH
"""
enum ViewSortField {
  CREATION_DATE
  DESCRIPTION
  MODIFICATION_DATE
  NAME
  OWNER
  PREFERRED
  SHARING_WITH
}

interface WithWorkflowTasks {
  workflowTasks(
    """
    For supporting Relay paging. Used in combination with the 'first' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    after: String

    """
    For supporting Relay paging. Used in combination with the 'last' argument.
    It is a string (as defined by Relay), but will be parsed as an integer.
    """
    before: String

    """
    For supporting Relay paging. Used in combination with the 'after' argument.
    """
    first: Int

    """
    For supporting Relay paging. Used in combination with the 'before' argument.
    """
    last: Int

    """
    The maximum number of results to retrieve. If not set, maximum 1000 elements will be retrieved.
    """
    limit: Int = 100

    """
    The first result to retrieve. If not set, results will be retrieved starting from row 0
    """
    offset: Int
  ): WorkflowTaskConnection
}

type Workflow implements node {
  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The description of the Object"""
  description: String
  formRequired: Boolean

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The Name of the Object"""
  name: String
  processId: String
  startFormJsonModelAvailable: Boolean
  startLabel: String

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean
}

"""
The enumeration for a WorkflowBusinessItemType. Possible values are: ASSET DOMAIN COMMUNITY GLOBAL
"""
enum WorkflowBusinessItemType {
  ASSET
  COMMUNITY
  DOMAIN
  GLOBAL
}

type WorkflowDefinition implements node {
  """the list of asset assignment rules"""
  assetAssignmentRules: [AssetAssignmentRule]

  """
  the type of business item that the workflow can refer to. This could be either Community, Domain, Asset, or global
  """
  businessItemResourceType: WorkflowBusinessItemType

  """defines whether the candidate user check for this workflow is enabled"""
  candidateUserCheckEnabled: Boolean

  """the configuration start form data of the workflow"""
  configurationStartFormData: StartFormData

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """The description of the Object"""
  description: String

  """the list of domain assignment rules"""
  domainAssignmentRules: [DomainAssignmentRule]

  """defines whether the workflow is enabled or not"""
  enabled: Boolean

  """
  determines how many times a workflow can be started for a specific resource
  """
  exclusivity: WorkflowExclusivity

  """
  defines whether the start form for this workflow requires user interaction through a form or not
  """
  formRequired: Boolean

  """defines whether workflow is accessible from the global create menu"""
  globalCreate: Boolean

  """defines whether this workflow definition is guest user accessible"""
  guestUserAccessible: Boolean

  """Specifies whether this workflow definition has JSON forms"""
  hasJsonForms: Boolean

  """The unique identifier"""
  id: ID

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """The Name of the Object"""
  name: String

  """
  the ID that uniquely identifies a workflow definition in the application
  """
  processId: String

  """the roles allowed to reassign tasks"""
  reassignRoles: [Role]

  """
  defines whether the workflow definition is accessible by any registered user
  """
  registeredUserAccessible: Boolean

  """the resource type"""
  resourceType: ResourceType

  """the start events in a list of WorkflowStartEventType enums"""
  startEvents: [WorkflowStartEventType]

  """The start form model in json format"""
  startFormJsonModel: String

  """
  defines whether the start form json model for this workflow is available
  """
  startFormJsonModelAvailable: Boolean

  """the label used for starting this workflow"""
  startLabel: String

  """the roles allowed to start the process"""
  startRoles: [Role]

  """the roles allowed to stop processes/tasks"""
  stopRoles: [Role]

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean

  """the xml body of the workflow"""
  xml: String
}

type WorkflowDefinitionConnection {
  edges: [WorkflowDefinitionEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type WorkflowDefinitionEdge {
  cursor: String!
  node: WorkflowDefinition
}

"""
The enumeration for a WorkflowExclusivity. Possible values are: RESOURCE_EXCLUSIVITY DEFINITION_EXCLUSIVITY UNCONSTRAINED
"""
enum WorkflowExclusivity {
  DEFINITION_EXCLUSIVITY
  RESOURCE_EXCLUSIVITY
  UNCONSTRAINED
}

type WorkflowInstance implements node {
  """The Business Item, can be an Asset, a Community or a Domain."""
  businessItem: node

  """The User which created this object"""
  createdBy: User

  """The timestamp on which this object was created"""
  createdOn: Long

  """
  Returns the optional error message of any error in a async continuation of
  this process instance. Only present if inError is true.
  """
  errorMessage: String

  """The unique identifier"""
  id: ID

  """Returns if this process instance is already ended."""
  isEnded: Boolean

  """
  Returns if this process instance is in error. This means that there was a
  problem with a async continuation of the process instance.
  """
  isInError: Boolean

  """The User which last modified this object"""
  lastModifiedBy: User

  """The timestamp on which this object was last modified"""
  lastModifiedOn: Long

  """Parent workflow instance ID."""
  parentWorkflowInstanceId: String

  """Returns the start date (in milliseconds) of this process instance."""
  startDate: Long

  """Count of subinstances associated to the current process."""
  subInstancesCount: Long

  """Indicates whether this is a SYSTEM object or not."""
  system: Boolean

  """Returns workflow tasks in this process instance."""
  tasks: [WorkflowTask]

  """the workflow this workflowInstance is an instance from"""
  workflow: Workflow
}

input WorkflowInstanceCancelInput {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The ID of the workflow instance to be cancelled."""
  id: ID!

  """The reason for cancellation the workflow instance."""
  reason: String
}

type WorkflowInstanceCancelPayload {
  clientMutationId: String

  """The ID of the cancelled workflow instance."""
  workflowInstanceId: ID!
}

type WorkflowInstanceConnection {
  edges: [WorkflowInstanceEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type WorkflowInstanceEdge {
  cursor: String!
  node: WorkflowInstance
}

"""The enumeration for a SortField. Possible values are: START_DATE"""
enum WorkflowInstanceSortField {
  START_DATE
}

"""
The enumeration for a WorkflowStartEventType. Possible values are: ASSET_ADDED
ASSET_REMOVED ASSET_STATUS_CHANGED ASSET_DOMAIN_CHANGED ASSET_TYPE_CHANGED
ASSET_ATTRIBUTE_CHANGED ASSET_NAME_CHANGED ASSET_DISPLAY_NAME_CHANGED
ASSET_ATTRIBUTE_ADDED ASSET_ATTRIBUTE_REMOVED DOMAIN_ADDED DOMAIN_REMOVED
ROLE_GRANTED ROLE_REVOKED WORKFLOW_STARTED WORKFLOW_CANCELED
WORKLFLOW_ESCALATION WORKFLOW_TASK_COMPLETED USER_ADDED USER_REMOVED
USER_DISABLED COMMENT_ADDED COMMENT_REMOVED COMMENT_CHANGED
RELATION_ADDED_AND_ASSET_IS_SOURCE RELATION_REMOVED_AND_ASSET_WAS_SOURCE
RELATION_ADDED_AND_ASSET_IS_TARGET RELATION_REMOVED_AND_ASSET_WAS_TARGET
TAG_ASSIGN_CHANGED CLASSIFICATION_MATCH_ACCEPTED CLASSIFICATION_MATCH_REJECTED
CLASSIFICATION_MATCH_ADDED CLASSIFICATION_MATCH_REMOVED
CLASSIFICATION_MATCH_UPDATED DATABASE_REGISTRATION_COMPLETED
DATABASE_REGISTRATION_FAILED
"""
enum WorkflowStartEventType {
  ASSET_ADDED
  ASSET_ATTRIBUTE_ADDED
  ASSET_ATTRIBUTE_CHANGED
  ASSET_ATTRIBUTE_REMOVED
  ASSET_DISPLAY_NAME_CHANGED
  ASSET_DOMAIN_CHANGED
  ASSET_NAME_CHANGED
  ASSET_REMOVED
  ASSET_STATUS_CHANGED
  ASSET_TYPE_CHANGED
  CLASSIFICATION_MATCH_ACCEPTED
  CLASSIFICATION_MATCH_ADDED
  CLASSIFICATION_MATCH_REJECTED
  CLASSIFICATION_MATCH_REMOVED
  CLASSIFICATION_MATCH_UPDATED
  COMMENT_ADDED
  COMMENT_CHANGED
  COMMENT_REMOVED
  DATABASE_REGISTRATION_COMPLETED
  DATABASE_REGISTRATION_FAILED
  DOMAIN_ADDED
  DOMAIN_REMOVED
  RELATION_ADDED_AND_ASSET_IS_SOURCE
  RELATION_ADDED_AND_ASSET_IS_TARGET
  RELATION_REMOVED_AND_ASSET_WAS_SOURCE
  RELATION_REMOVED_AND_ASSET_WAS_TARGET
  ROLE_GRANTED
  ROLE_REVOKED
  TAG_ASSIGN_CHANGED
  USER_ADDED
  USER_DISABLED
  USER_REMOVED
  WORKFLOW_CANCELED
  WORKFLOW_STARTED
  WORKFLOW_TASK_COMPLETED
  WORKLFLOW_ESCALATION
}

type WorkflowTask implements node {
  """the aggregation key of the workflow task"""
  aggregationKey: String

  """the business item related to the task"""
  businessItem: node

  """the business item reference with name related to the task"""
  businessItemReference: NamedResourceReference

  """a boolean indicating whether this task is cancelable or not"""
  cancelable: Boolean

  """the candidate users for the task"""
  candidateUsers: [User]

  """
  a boolean indicating whether this task contains an activity stream or not
  """
  containsActivityStream: Boolean

  """the creation time of the task"""
  createTime: Long

  """The custom buttons for this task"""
  customButtons: [FormProperty]

  """the description of the workflow task"""
  description: String

  """the due date of the task"""
  dueDate: Long

  """The error message in case there is an error"""
  errorMessage: String

  """a boolean indicating whether the form key is available"""
  formKeyAvailable: Boolean

  """a boolean indicating whether this task requires a form or not"""
  formRequired: Boolean

  """The unique identifier"""
  id: ID

  """A boolean field indicating an error"""
  inError: Boolean

  """the key of the workflow task"""
  key: String

  """the name of the workflow task"""
  name: String

  """the owner of the task"""
  owner: String

  """the priority of the task"""
  priority: Int

  """the process id of the workflow task"""
  processId: String

  """a boolean indicating whether this task is reassignable or not"""
  reassignable: Boolean

  """The workflow task form data"""
  taskFormData: TaskFormData

  """The form model in json format"""
  taskFormJsonModel: String

  """the type of the workflow task"""
  type: String

  """The variables stored for this workflow instance (without V1 objects)"""
  variables: Map

  """the workflow ID"""
  workflowId: ID

  """the ID of the workflow instance"""
  workflowInstanceId: ID
}

input WorkflowTaskCancelInput {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The ID of the workflow task to be cancelled."""
  id: ID!

  """The reason for cancellation the workflow task."""
  reason: String
}

type WorkflowTaskCancelPayload {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
}

type WorkflowTaskConnection {
  edges: [WorkflowTaskEdge]
  limit: Long
  offset: Long
  pageInfo: PageInfo!
  total: Long
}

type WorkflowTaskEdge {
  cursor: String!
  node: WorkflowTask
}

input WorkflowTaskReassignInput {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The group IDs to reassign to."""
  groupIds: [ID]

  """The ID of the workflow task."""
  id: ID!

  """The role IDs to reassign to."""
  roleIds: [ID]

  """The user IDs to reassign to."""
  userIds: [ID]
}

type WorkflowTaskReassignPayload {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser
}

input WorkflowTasksCancelInput {
  """
  The client mutation id.  This allows relay to keep track of mutations and responses.
  """
  clientMutationId: String

  """The reason for cancellation workflow tasks."""
  reason: String

  """Indicates whether or not a notification on the job should be sent"""
  sendNotification: Boolean = false

  """The list of workflow task IDs to be cancelled."""
  workflowTaskIds: [ID]!
}

type WorkflowTasksCancelPayload {
  clientMutationId: String

  """The current user top level request again."""
  currentUser: CurrentUser

  """The job running the cancellation of workflow tasks."""
  job: Job
}

"""
The enumeration for a WorkflowTaskUserRelation. Possible values are: ALL ASSIGNED MY_OVERDUE
"""
enum WorkflowTaskUserRelation {
  ALL
  ASSIGNED
  MY_OVERDUE
}
